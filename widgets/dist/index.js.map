{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/ParseError.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/Settings.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/Style.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/utils.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/domTree.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/fontMetricsData.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/fontMetrics.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/symbols.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/buildCommon.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/delimiter.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/buildHTML.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/mathMLTree.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/buildMathML.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/Options.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/buildTree.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/functions.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/parseData.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/environments.js", "../../node_modules/.pnpm/match-at@0.1.1/node_modules/match-at/lib/matchAt.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/Lexer.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/Parser.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/src/parseTree.js", "../../node_modules/.pnpm/katex@0.6.0/node_modules/katex/katex.js", "../../node_modules/.pnpm/markdown-it-katex@2.0.3/node_modules/markdown-it-katex/index.js", "../src/index.ts", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/common/utils.mjs", "../../node_modules/.pnpm/mdurl@2.0.0/node_modules/mdurl/index.mjs", "../../node_modules/.pnpm/mdurl@2.0.0/node_modules/mdurl/lib/decode.mjs", "../../node_modules/.pnpm/mdurl@2.0.0/node_modules/mdurl/lib/encode.mjs", "../../node_modules/.pnpm/mdurl@2.0.0/node_modules/mdurl/lib/format.mjs", "../../node_modules/.pnpm/mdurl@2.0.0/node_modules/mdurl/lib/parse.mjs", "../../node_modules/.pnpm/uc.micro@2.1.0/node_modules/uc.micro/index.mjs", "../../node_modules/.pnpm/uc.micro@2.1.0/node_modules/uc.micro/properties/Any/regex.mjs", "../../node_modules/.pnpm/uc.micro@2.1.0/node_modules/uc.micro/categories/Cc/regex.mjs", "../../node_modules/.pnpm/uc.micro@2.1.0/node_modules/uc.micro/categories/Cf/regex.mjs", "../../node_modules/.pnpm/uc.micro@2.1.0/node_modules/uc.micro/categories/P/regex.mjs", "../../node_modules/.pnpm/uc.micro@2.1.0/node_modules/uc.micro/categories/S/regex.mjs", "../../node_modules/.pnpm/uc.micro@2.1.0/node_modules/uc.micro/categories/Z/regex.mjs", "../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.ts", "../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.ts", "../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/generated/encode-html.ts", "../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/escape.ts", "../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/index.ts", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/helpers/index.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/helpers/parse_link_label.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/helpers/parse_link_destination.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/helpers/parse_link_title.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/renderer.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/ruler.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/token.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/state_core.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/normalize.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/block.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/inline.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/linkify.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/replacements.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/smartquotes.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/text_join.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/parser_core.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/state_block.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/table.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/code.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/fence.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/blockquote.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/hr.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/list.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/reference.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/common/html_blocks.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/common/html_re.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/html_block.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/heading.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/lheading.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/paragraph.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/parser_block.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/state_inline.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/text.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/linkify.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/newline.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/escape.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/backticks.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/strikethrough.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/emphasis.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/link.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/image.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/autolink.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/html_inline.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/entity.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/fragments_join.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/parser_inline.mjs", "../../node_modules/.pnpm/linkify-it@5.0.0/node_modules/linkify-it/lib/re.mjs", "../../node_modules/.pnpm/linkify-it@5.0.0/node_modules/linkify-it/index.mjs", "../../node_modules/.pnpm/punycode.js@2.3.1/node_modules/punycode.js/punycode.es6.js", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/presets/default.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/presets/zero.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/presets/commonmark.mjs", "../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/index.mjs", "../src/renderer.ts", "../src/styles.css"],
  "sourcesContent": ["/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n */\nfunction ParseError(message, lexer, position) {\n    var error = \"KaTeX parse error: \" + message;\n\n    if (lexer !== undefined && position !== undefined) {\n        // If we have the input and a position, make the error a bit fancier\n\n        // Prepend some information\n        error += \" at position \" + position + \": \";\n\n        // Get the input\n        var input = lexer._input;\n        // Insert a combining underscore at the correct position\n        input = input.slice(0, position) + \"\\u0332\" +\n            input.slice(position);\n\n        // Extract some context from the input and add it to the error\n        var begin = Math.max(0, position - 15);\n        var end = position + 15;\n        error += input.slice(begin, end);\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    var self = new Error(error);\n    self.name = \"ParseError\";\n    self.__proto__ = ParseError.prototype;\n\n    self.position = position;\n    return self;\n}\n\n// More hackery\nParseError.prototype.__proto__ = Error.prototype;\n\nmodule.exports = ParseError;\n", "/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n/**\n * Helper function for getting a default value if the value is undefined\n */\nfunction get(option, defaultValue) {\n    return option === undefined ? defaultValue : option;\n}\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset by default in\n *                 textstyle or displaystyle (default false)\n */\nfunction Settings(options) {\n    // allow null options\n    options = options || {};\n    this.displayMode = get(options.displayMode, false);\n    this.throwOnError = get(options.throwOnError, true);\n    this.errorColor = get(options.errorColor, \"#cc0000\");\n}\n\nmodule.exports = Settings;\n", "/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), a cramped flag, and a\n * size multiplier, which gives the size difference between a style and\n * textstyle.\n */\nfunction Style(id, size, multiplier, cramped) {\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n    this.sizeMultiplier = multiplier;\n}\n\n/**\n * Get the style of a superscript given a base in the current style.\n */\nStyle.prototype.sup = function() {\n    return styles[sup[this.id]];\n};\n\n/**\n * Get the style of a subscript given a base in the current style.\n */\nStyle.prototype.sub = function() {\n    return styles[sub[this.id]];\n};\n\n/**\n * Get the style of a fraction numerator given the fraction in the current\n * style.\n */\nStyle.prototype.fracNum = function() {\n    return styles[fracNum[this.id]];\n};\n\n/**\n * Get the style of a fraction denominator given the fraction in the current\n * style.\n */\nStyle.prototype.fracDen = function() {\n    return styles[fracDen[this.id]];\n};\n\n/**\n * Get the cramped version of a style (in particular, cramping a cramped style\n * doesn't change the style).\n */\nStyle.prototype.cramp = function() {\n    return styles[cramp[this.id]];\n};\n\n/**\n * HTML class name, like \"displaystyle cramped\"\n */\nStyle.prototype.cls = function() {\n    return sizeNames[this.size] + (this.cramped ? \" cramped\" : \" uncramped\");\n};\n\n/**\n * HTML Reset class name, like \"reset-textstyle\"\n */\nStyle.prototype.reset = function() {\n    return resetNames[this.size];\n};\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7;\n\n// String names for the different sizes\nvar sizeNames = [\n    \"displaystyle textstyle\",\n    \"textstyle\",\n    \"scriptstyle\",\n    \"scriptscriptstyle\",\n];\n\n// Reset names for the different sizes\nvar resetNames = [\n    \"reset-textstyle\",\n    \"reset-textstyle\",\n    \"reset-scriptstyle\",\n    \"reset-scriptscriptstyle\",\n];\n\n// Instances of the different styles\nvar styles = [\n    new Style(D, 0, 1.0, false),\n    new Style(Dc, 0, 1.0, true),\n    new Style(T, 1, 1.0, false),\n    new Style(Tc, 1, 1.0, true),\n    new Style(S, 2, 0.7, false),\n    new Style(Sc, 2, 0.7, true),\n    new Style(SS, 3, 0.5, false),\n    new Style(SSc, 3, 0.5, true),\n];\n\n// Lookup tables for switching from one style to another\nvar sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\n\n// We only export some of the styles. Also, we don't export the `Style` class so\n// no more styles can be generated.\nmodule.exports = {\n    DISPLAY: styles[D],\n    TEXT: styles[T],\n    SCRIPT: styles[S],\n    SCRIPTSCRIPT: styles[SS],\n};\n", "/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Provide an `indexOf` function which works in IE8, but defers to native if\n * possible.\n */\nvar nativeIndexOf = Array.prototype.indexOf;\nvar indexOf = function(list, elem) {\n    if (list == null) {\n        return -1;\n    }\n    if (nativeIndexOf && list.indexOf === nativeIndexOf) {\n        return list.indexOf(elem);\n    }\n    var i = 0;\n    var l = list.length;\n    for (; i < l; i++) {\n        if (list[i] === elem) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function(list, elem) {\n    return indexOf(list, elem) !== -1;\n};\n\n/**\n * Provide a default value if a setting is undefined\n */\nvar deflt = function(setting, defaultIfUndefined) {\n    return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nvar uppercase = /([A-Z])/g;\nvar hyphenate = function(str) {\n    return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n    \"&\": \"&amp;\",\n    \">\": \"&gt;\",\n    \"<\": \"&lt;\",\n    \"\\\"\": \"&quot;\",\n    \"'\": \"&#x27;\",\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n    return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escape(text) {\n    return (\"\" + text).replace(ESCAPE_REGEX, escaper);\n}\n\n/**\n * A function to set the text content of a DOM element in all supported\n * browsers. Note that we don't define this if there is no document.\n */\nvar setTextContent;\nif (typeof document !== \"undefined\") {\n    var testNode = document.createElement(\"span\");\n    if (\"textContent\" in testNode) {\n        setTextContent = function(node, text) {\n            node.textContent = text;\n        };\n    } else {\n        setTextContent = function(node, text) {\n            node.innerText = text;\n        };\n    }\n}\n\n/**\n * A function to clear a node.\n */\nfunction clearNode(node) {\n    setTextContent(node, \"\");\n}\n\nmodule.exports = {\n    contains: contains,\n    deflt: deflt,\n    escape: escape,\n    hyphenate: hyphenate,\n    indexOf: indexOf,\n    setTextContent: setTextContent,\n    clearNode: clearNode,\n};\n", "/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n */\n\nvar utils = require(\"./utils\");\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove null or empty classes.\n */\nvar createClass = function(classes) {\n    classes = classes.slice();\n    for (var i = classes.length - 1; i >= 0; i--) {\n        if (!classes[i]) {\n            classes.splice(i, 1);\n        }\n    }\n\n    return classes.join(\" \");\n};\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n */\nfunction span(classes, children, height, depth, maxFontSize, style) {\n    this.classes = classes || [];\n    this.children = children || [];\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.maxFontSize = maxFontSize || 0;\n    this.style = style || {};\n    this.attributes = {};\n}\n\n/**\n * Sets an arbitrary attribute on the span. Warning: use this wisely. Not all\n * browsers support attributes the same, and having too many custom attributes\n * is probably bad.\n */\nspan.prototype.setAttribute = function(attribute, value) {\n    this.attributes[attribute] = value;\n};\n\n/**\n * Convert the span into an HTML node\n */\nspan.prototype.toNode = function() {\n    var span = document.createElement(\"span\");\n\n    // Apply the class\n    span.className = createClass(this.classes);\n\n    // Apply inline styles\n    for (var style in this.style) {\n        if (Object.prototype.hasOwnProperty.call(this.style, style)) {\n            span.style[style] = this.style[style];\n        }\n    }\n\n    // Apply attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            span.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    // Append the children, also as HTML nodes\n    for (var i = 0; i < this.children.length; i++) {\n        span.appendChild(this.children[i].toNode());\n    }\n\n    return span;\n};\n\n/**\n * Convert the span into an HTML markup string\n */\nspan.prototype.toMarkup = function() {\n    var markup = \"<span\";\n\n    // Add the class\n    if (this.classes.length) {\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    // Add the styles, after hyphenation\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    // Add the markup of the children, also as markup\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</span>\";\n\n    return markup;\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. Thus, it only\n * contains children and doesn't have any HTML properties. It also keeps track\n * of a height, depth, and maxFontSize.\n */\nfunction documentFragment(children, height, depth, maxFontSize) {\n    this.children = children || [];\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.maxFontSize = maxFontSize || 0;\n}\n\n/**\n * Convert the fragment into a node\n */\ndocumentFragment.prototype.toNode = function() {\n    // Create a fragment\n    var frag = document.createDocumentFragment();\n\n    // Append the children\n    for (var i = 0; i < this.children.length; i++) {\n        frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n};\n\n/**\n * Convert the fragment into HTML markup\n */\ndocumentFragment.prototype.toMarkup = function() {\n    var markup = \"\";\n\n    // Simply concatenate the markup for the children together\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n};\n\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\nfunction symbolNode(value, height, depth, italic, skew, classes, style) {\n    this.value = value || \"\";\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0;\n}\n\n/**\n * Creates a text node or span from a symbol node. Note that a span is only\n * created if it is needed.\n */\nsymbolNode.prototype.toNode = function() {\n    var node = document.createTextNode(this.value);\n    var span = null;\n\n    if (this.italic > 0) {\n        span = document.createElement(\"span\");\n        span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n        span = span || document.createElement(\"span\");\n        span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            span = span || document.createElement(\"span\");\n            span.style[style] = this.style[style];\n        }\n    }\n\n    if (span) {\n        span.appendChild(node);\n        return span;\n    } else {\n        return node;\n    }\n};\n\n/**\n * Creates markup for a symbol node.\n */\nsymbolNode.prototype.toMarkup = function() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n        needsSpan = true;\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n        styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        needsSpan = true;\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.value);\n    if (needsSpan) {\n        markup += \">\";\n        markup += escaped;\n        markup += \"</span>\";\n        return markup;\n    } else {\n        return escaped;\n    }\n};\n\nmodule.exports = {\n    span: span,\n    documentFragment: documentFragment,\n    symbolNode: symbolNode,\n};\n", "module.exports = {\n    \"AMS-Regular\": {\n        \"65\": [0, 0.68889, 0, 0],\n        \"66\": [0, 0.68889, 0, 0],\n        \"67\": [0, 0.68889, 0, 0],\n        \"68\": [0, 0.68889, 0, 0],\n        \"69\": [0, 0.68889, 0, 0],\n        \"70\": [0, 0.68889, 0, 0],\n        \"71\": [0, 0.68889, 0, 0],\n        \"72\": [0, 0.68889, 0, 0],\n        \"73\": [0, 0.68889, 0, 0],\n        \"74\": [0.16667, 0.68889, 0, 0],\n        \"75\": [0, 0.68889, 0, 0],\n        \"76\": [0, 0.68889, 0, 0],\n        \"77\": [0, 0.68889, 0, 0],\n        \"78\": [0, 0.68889, 0, 0],\n        \"79\": [0.16667, 0.68889, 0, 0],\n        \"80\": [0, 0.68889, 0, 0],\n        \"81\": [0.16667, 0.68889, 0, 0],\n        \"82\": [0, 0.68889, 0, 0],\n        \"83\": [0, 0.68889, 0, 0],\n        \"84\": [0, 0.68889, 0, 0],\n        \"85\": [0, 0.68889, 0, 0],\n        \"86\": [0, 0.68889, 0, 0],\n        \"87\": [0, 0.68889, 0, 0],\n        \"88\": [0, 0.68889, 0, 0],\n        \"89\": [0, 0.68889, 0, 0],\n        \"90\": [0, 0.68889, 0, 0],\n        \"107\": [0, 0.68889, 0, 0],\n        \"165\": [0, 0.675, 0.025, 0],\n        \"174\": [0.15559, 0.69224, 0, 0],\n        \"240\": [0, 0.68889, 0, 0],\n        \"295\": [0, 0.68889, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.9, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.9, 0, 0],\n        \"989\": [0.08167, 0.58167, 0, 0],\n        \"1008\": [0, 0.43056, 0.04028, 0],\n        \"8245\": [0, 0.54986, 0, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8487\": [0, 0.68889, 0, 0],\n        \"8498\": [0, 0.68889, 0, 0],\n        \"8502\": [0, 0.68889, 0, 0],\n        \"8503\": [0, 0.68889, 0, 0],\n        \"8504\": [0, 0.68889, 0, 0],\n        \"8513\": [0, 0.68889, 0, 0],\n        \"8592\": [-0.03598, 0.46402, 0, 0],\n        \"8594\": [-0.03598, 0.46402, 0, 0],\n        \"8602\": [-0.13313, 0.36687, 0, 0],\n        \"8603\": [-0.13313, 0.36687, 0, 0],\n        \"8606\": [0.01354, 0.52239, 0, 0],\n        \"8608\": [0.01354, 0.52239, 0, 0],\n        \"8610\": [0.01354, 0.52239, 0, 0],\n        \"8611\": [0.01354, 0.52239, 0, 0],\n        \"8619\": [0, 0.54986, 0, 0],\n        \"8620\": [0, 0.54986, 0, 0],\n        \"8621\": [-0.13313, 0.37788, 0, 0],\n        \"8622\": [-0.13313, 0.36687, 0, 0],\n        \"8624\": [0, 0.69224, 0, 0],\n        \"8625\": [0, 0.69224, 0, 0],\n        \"8630\": [0, 0.43056, 0, 0],\n        \"8631\": [0, 0.43056, 0, 0],\n        \"8634\": [0.08198, 0.58198, 0, 0],\n        \"8635\": [0.08198, 0.58198, 0, 0],\n        \"8638\": [0.19444, 0.69224, 0, 0],\n        \"8639\": [0.19444, 0.69224, 0, 0],\n        \"8642\": [0.19444, 0.69224, 0, 0],\n        \"8643\": [0.19444, 0.69224, 0, 0],\n        \"8644\": [0.1808, 0.675, 0, 0],\n        \"8646\": [0.1808, 0.675, 0, 0],\n        \"8647\": [0.1808, 0.675, 0, 0],\n        \"8648\": [0.19444, 0.69224, 0, 0],\n        \"8649\": [0.1808, 0.675, 0, 0],\n        \"8650\": [0.19444, 0.69224, 0, 0],\n        \"8651\": [0.01354, 0.52239, 0, 0],\n        \"8652\": [0.01354, 0.52239, 0, 0],\n        \"8653\": [-0.13313, 0.36687, 0, 0],\n        \"8654\": [-0.13313, 0.36687, 0, 0],\n        \"8655\": [-0.13313, 0.36687, 0, 0],\n        \"8666\": [0.13667, 0.63667, 0, 0],\n        \"8667\": [0.13667, 0.63667, 0, 0],\n        \"8669\": [-0.13313, 0.37788, 0, 0],\n        \"8672\": [-0.064, 0.437, 0, 0],\n        \"8674\": [-0.064, 0.437, 0, 0],\n        \"8705\": [0, 0.825, 0, 0],\n        \"8708\": [0, 0.68889, 0, 0],\n        \"8709\": [0.08167, 0.58167, 0, 0],\n        \"8717\": [0, 0.43056, 0, 0],\n        \"8722\": [-0.03598, 0.46402, 0, 0],\n        \"8724\": [0.08198, 0.69224, 0, 0],\n        \"8726\": [0.08167, 0.58167, 0, 0],\n        \"8733\": [0, 0.69224, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8737\": [0, 0.69224, 0, 0],\n        \"8738\": [0.03517, 0.52239, 0, 0],\n        \"8739\": [0.08167, 0.58167, 0, 0],\n        \"8740\": [0.25142, 0.74111, 0, 0],\n        \"8741\": [0.08167, 0.58167, 0, 0],\n        \"8742\": [0.25142, 0.74111, 0, 0],\n        \"8756\": [0, 0.69224, 0, 0],\n        \"8757\": [0, 0.69224, 0, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8765\": [-0.13313, 0.37788, 0, 0],\n        \"8769\": [-0.13313, 0.36687, 0, 0],\n        \"8770\": [-0.03625, 0.46375, 0, 0],\n        \"8774\": [0.30274, 0.79383, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8778\": [0.08167, 0.58167, 0, 0],\n        \"8782\": [0.06062, 0.54986, 0, 0],\n        \"8783\": [0.06062, 0.54986, 0, 0],\n        \"8785\": [0.08198, 0.58198, 0, 0],\n        \"8786\": [0.08198, 0.58198, 0, 0],\n        \"8787\": [0.08198, 0.58198, 0, 0],\n        \"8790\": [0, 0.69224, 0, 0],\n        \"8791\": [0.22958, 0.72958, 0, 0],\n        \"8796\": [0.08198, 0.91667, 0, 0],\n        \"8806\": [0.25583, 0.75583, 0, 0],\n        \"8807\": [0.25583, 0.75583, 0, 0],\n        \"8808\": [0.25142, 0.75726, 0, 0],\n        \"8809\": [0.25142, 0.75726, 0, 0],\n        \"8812\": [0.25583, 0.75583, 0, 0],\n        \"8814\": [0.20576, 0.70576, 0, 0],\n        \"8815\": [0.20576, 0.70576, 0, 0],\n        \"8816\": [0.30274, 0.79383, 0, 0],\n        \"8817\": [0.30274, 0.79383, 0, 0],\n        \"8818\": [0.22958, 0.72958, 0, 0],\n        \"8819\": [0.22958, 0.72958, 0, 0],\n        \"8822\": [0.1808, 0.675, 0, 0],\n        \"8823\": [0.1808, 0.675, 0, 0],\n        \"8828\": [0.13667, 0.63667, 0, 0],\n        \"8829\": [0.13667, 0.63667, 0, 0],\n        \"8830\": [0.22958, 0.72958, 0, 0],\n        \"8831\": [0.22958, 0.72958, 0, 0],\n        \"8832\": [0.20576, 0.70576, 0, 0],\n        \"8833\": [0.20576, 0.70576, 0, 0],\n        \"8840\": [0.30274, 0.79383, 0, 0],\n        \"8841\": [0.30274, 0.79383, 0, 0],\n        \"8842\": [0.13597, 0.63597, 0, 0],\n        \"8843\": [0.13597, 0.63597, 0, 0],\n        \"8847\": [0.03517, 0.54986, 0, 0],\n        \"8848\": [0.03517, 0.54986, 0, 0],\n        \"8858\": [0.08198, 0.58198, 0, 0],\n        \"8859\": [0.08198, 0.58198, 0, 0],\n        \"8861\": [0.08198, 0.58198, 0, 0],\n        \"8862\": [0, 0.675, 0, 0],\n        \"8863\": [0, 0.675, 0, 0],\n        \"8864\": [0, 0.675, 0, 0],\n        \"8865\": [0, 0.675, 0, 0],\n        \"8872\": [0, 0.69224, 0, 0],\n        \"8873\": [0, 0.69224, 0, 0],\n        \"8874\": [0, 0.69224, 0, 0],\n        \"8876\": [0, 0.68889, 0, 0],\n        \"8877\": [0, 0.68889, 0, 0],\n        \"8878\": [0, 0.68889, 0, 0],\n        \"8879\": [0, 0.68889, 0, 0],\n        \"8882\": [0.03517, 0.54986, 0, 0],\n        \"8883\": [0.03517, 0.54986, 0, 0],\n        \"8884\": [0.13667, 0.63667, 0, 0],\n        \"8885\": [0.13667, 0.63667, 0, 0],\n        \"8888\": [0, 0.54986, 0, 0],\n        \"8890\": [0.19444, 0.43056, 0, 0],\n        \"8891\": [0.19444, 0.69224, 0, 0],\n        \"8892\": [0.19444, 0.69224, 0, 0],\n        \"8901\": [0, 0.54986, 0, 0],\n        \"8903\": [0.08167, 0.58167, 0, 0],\n        \"8905\": [0.08167, 0.58167, 0, 0],\n        \"8906\": [0.08167, 0.58167, 0, 0],\n        \"8907\": [0, 0.69224, 0, 0],\n        \"8908\": [0, 0.69224, 0, 0],\n        \"8909\": [-0.03598, 0.46402, 0, 0],\n        \"8910\": [0, 0.54986, 0, 0],\n        \"8911\": [0, 0.54986, 0, 0],\n        \"8912\": [0.03517, 0.54986, 0, 0],\n        \"8913\": [0.03517, 0.54986, 0, 0],\n        \"8914\": [0, 0.54986, 0, 0],\n        \"8915\": [0, 0.54986, 0, 0],\n        \"8916\": [0, 0.69224, 0, 0],\n        \"8918\": [0.0391, 0.5391, 0, 0],\n        \"8919\": [0.0391, 0.5391, 0, 0],\n        \"8920\": [0.03517, 0.54986, 0, 0],\n        \"8921\": [0.03517, 0.54986, 0, 0],\n        \"8922\": [0.38569, 0.88569, 0, 0],\n        \"8923\": [0.38569, 0.88569, 0, 0],\n        \"8926\": [0.13667, 0.63667, 0, 0],\n        \"8927\": [0.13667, 0.63667, 0, 0],\n        \"8928\": [0.30274, 0.79383, 0, 0],\n        \"8929\": [0.30274, 0.79383, 0, 0],\n        \"8934\": [0.23222, 0.74111, 0, 0],\n        \"8935\": [0.23222, 0.74111, 0, 0],\n        \"8936\": [0.23222, 0.74111, 0, 0],\n        \"8937\": [0.23222, 0.74111, 0, 0],\n        \"8938\": [0.20576, 0.70576, 0, 0],\n        \"8939\": [0.20576, 0.70576, 0, 0],\n        \"8940\": [0.30274, 0.79383, 0, 0],\n        \"8941\": [0.30274, 0.79383, 0, 0],\n        \"8994\": [0.19444, 0.69224, 0, 0],\n        \"8995\": [0.19444, 0.69224, 0, 0],\n        \"9416\": [0.15559, 0.69224, 0, 0],\n        \"9484\": [0, 0.69224, 0, 0],\n        \"9488\": [0, 0.69224, 0, 0],\n        \"9492\": [0, 0.37788, 0, 0],\n        \"9496\": [0, 0.37788, 0, 0],\n        \"9585\": [0.19444, 0.68889, 0, 0],\n        \"9586\": [0.19444, 0.74111, 0, 0],\n        \"9632\": [0, 0.675, 0, 0],\n        \"9633\": [0, 0.675, 0, 0],\n        \"9650\": [0, 0.54986, 0, 0],\n        \"9651\": [0, 0.54986, 0, 0],\n        \"9654\": [0.03517, 0.54986, 0, 0],\n        \"9660\": [0, 0.54986, 0, 0],\n        \"9661\": [0, 0.54986, 0, 0],\n        \"9664\": [0.03517, 0.54986, 0, 0],\n        \"9674\": [0.11111, 0.69224, 0, 0],\n        \"9733\": [0.19444, 0.69224, 0, 0],\n        \"10003\": [0, 0.69224, 0, 0],\n        \"10016\": [0, 0.69224, 0, 0],\n        \"10731\": [0.11111, 0.69224, 0, 0],\n        \"10846\": [0.19444, 0.75583, 0, 0],\n        \"10877\": [0.13667, 0.63667, 0, 0],\n        \"10878\": [0.13667, 0.63667, 0, 0],\n        \"10885\": [0.25583, 0.75583, 0, 0],\n        \"10886\": [0.25583, 0.75583, 0, 0],\n        \"10887\": [0.13597, 0.63597, 0, 0],\n        \"10888\": [0.13597, 0.63597, 0, 0],\n        \"10889\": [0.26167, 0.75726, 0, 0],\n        \"10890\": [0.26167, 0.75726, 0, 0],\n        \"10891\": [0.48256, 0.98256, 0, 0],\n        \"10892\": [0.48256, 0.98256, 0, 0],\n        \"10901\": [0.13667, 0.63667, 0, 0],\n        \"10902\": [0.13667, 0.63667, 0, 0],\n        \"10933\": [0.25142, 0.75726, 0, 0],\n        \"10934\": [0.25142, 0.75726, 0, 0],\n        \"10935\": [0.26167, 0.75726, 0, 0],\n        \"10936\": [0.26167, 0.75726, 0, 0],\n        \"10937\": [0.26167, 0.75726, 0, 0],\n        \"10938\": [0.26167, 0.75726, 0, 0],\n        \"10949\": [0.25583, 0.75583, 0, 0],\n        \"10950\": [0.25583, 0.75583, 0, 0],\n        \"10955\": [0.28481, 0.79383, 0, 0],\n        \"10956\": [0.28481, 0.79383, 0, 0],\n        \"57350\": [0.08167, 0.58167, 0, 0],\n        \"57351\": [0.08167, 0.58167, 0, 0],\n        \"57352\": [0.08167, 0.58167, 0, 0],\n        \"57353\": [0, 0.43056, 0.04028, 0],\n        \"57356\": [0.25142, 0.75726, 0, 0],\n        \"57357\": [0.25142, 0.75726, 0, 0],\n        \"57358\": [0.41951, 0.91951, 0, 0],\n        \"57359\": [0.30274, 0.79383, 0, 0],\n        \"57360\": [0.30274, 0.79383, 0, 0],\n        \"57361\": [0.41951, 0.91951, 0, 0],\n        \"57366\": [0.25142, 0.75726, 0, 0],\n        \"57367\": [0.25142, 0.75726, 0, 0],\n        \"57368\": [0.25142, 0.75726, 0, 0],\n        \"57369\": [0.25142, 0.75726, 0, 0],\n        \"57370\": [0.13597, 0.63597, 0, 0],\n        \"57371\": [0.13597, 0.63597, 0, 0],\n    },\n    \"Caligraphic-Regular\": {\n        \"48\": [0, 0.43056, 0, 0],\n        \"49\": [0, 0.43056, 0, 0],\n        \"50\": [0, 0.43056, 0, 0],\n        \"51\": [0.19444, 0.43056, 0, 0],\n        \"52\": [0.19444, 0.43056, 0, 0],\n        \"53\": [0.19444, 0.43056, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0.19444, 0.43056, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0.19444, 0.43056, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.19445],\n        \"66\": [0, 0.68333, 0.03041, 0.13889],\n        \"67\": [0, 0.68333, 0.05834, 0.13889],\n        \"68\": [0, 0.68333, 0.02778, 0.08334],\n        \"69\": [0, 0.68333, 0.08944, 0.11111],\n        \"70\": [0, 0.68333, 0.09931, 0.11111],\n        \"71\": [0.09722, 0.68333, 0.0593, 0.11111],\n        \"72\": [0, 0.68333, 0.00965, 0.11111],\n        \"73\": [0, 0.68333, 0.07382, 0],\n        \"74\": [0.09722, 0.68333, 0.18472, 0.16667],\n        \"75\": [0, 0.68333, 0.01445, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.13889],\n        \"77\": [0, 0.68333, 0, 0.13889],\n        \"78\": [0, 0.68333, 0.14736, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.11111],\n        \"80\": [0, 0.68333, 0.08222, 0.08334],\n        \"81\": [0.09722, 0.68333, 0, 0.11111],\n        \"82\": [0, 0.68333, 0, 0.08334],\n        \"83\": [0, 0.68333, 0.075, 0.13889],\n        \"84\": [0, 0.68333, 0.25417, 0],\n        \"85\": [0, 0.68333, 0.09931, 0.08334],\n        \"86\": [0, 0.68333, 0.08222, 0],\n        \"87\": [0, 0.68333, 0.08222, 0.08334],\n        \"88\": [0, 0.68333, 0.14643, 0.13889],\n        \"89\": [0.09722, 0.68333, 0.08222, 0.08334],\n        \"90\": [0, 0.68333, 0.07944, 0.13889],\n    },\n    \"Fraktur-Regular\": {\n        \"33\": [0, 0.69141, 0, 0],\n        \"34\": [0, 0.69141, 0, 0],\n        \"38\": [0, 0.69141, 0, 0],\n        \"39\": [0, 0.69141, 0, 0],\n        \"40\": [0.24982, 0.74947, 0, 0],\n        \"41\": [0.24982, 0.74947, 0, 0],\n        \"42\": [0, 0.62119, 0, 0],\n        \"43\": [0.08319, 0.58283, 0, 0],\n        \"44\": [0, 0.10803, 0, 0],\n        \"45\": [0.08319, 0.58283, 0, 0],\n        \"46\": [0, 0.10803, 0, 0],\n        \"47\": [0.24982, 0.74947, 0, 0],\n        \"48\": [0, 0.47534, 0, 0],\n        \"49\": [0, 0.47534, 0, 0],\n        \"50\": [0, 0.47534, 0, 0],\n        \"51\": [0.18906, 0.47534, 0, 0],\n        \"52\": [0.18906, 0.47534, 0, 0],\n        \"53\": [0.18906, 0.47534, 0, 0],\n        \"54\": [0, 0.69141, 0, 0],\n        \"55\": [0.18906, 0.47534, 0, 0],\n        \"56\": [0, 0.69141, 0, 0],\n        \"57\": [0.18906, 0.47534, 0, 0],\n        \"58\": [0, 0.47534, 0, 0],\n        \"59\": [0.12604, 0.47534, 0, 0],\n        \"61\": [-0.13099, 0.36866, 0, 0],\n        \"63\": [0, 0.69141, 0, 0],\n        \"65\": [0, 0.69141, 0, 0],\n        \"66\": [0, 0.69141, 0, 0],\n        \"67\": [0, 0.69141, 0, 0],\n        \"68\": [0, 0.69141, 0, 0],\n        \"69\": [0, 0.69141, 0, 0],\n        \"70\": [0.12604, 0.69141, 0, 0],\n        \"71\": [0, 0.69141, 0, 0],\n        \"72\": [0.06302, 0.69141, 0, 0],\n        \"73\": [0, 0.69141, 0, 0],\n        \"74\": [0.12604, 0.69141, 0, 0],\n        \"75\": [0, 0.69141, 0, 0],\n        \"76\": [0, 0.69141, 0, 0],\n        \"77\": [0, 0.69141, 0, 0],\n        \"78\": [0, 0.69141, 0, 0],\n        \"79\": [0, 0.69141, 0, 0],\n        \"80\": [0.18906, 0.69141, 0, 0],\n        \"81\": [0.03781, 0.69141, 0, 0],\n        \"82\": [0, 0.69141, 0, 0],\n        \"83\": [0, 0.69141, 0, 0],\n        \"84\": [0, 0.69141, 0, 0],\n        \"85\": [0, 0.69141, 0, 0],\n        \"86\": [0, 0.69141, 0, 0],\n        \"87\": [0, 0.69141, 0, 0],\n        \"88\": [0, 0.69141, 0, 0],\n        \"89\": [0.18906, 0.69141, 0, 0],\n        \"90\": [0.12604, 0.69141, 0, 0],\n        \"91\": [0.24982, 0.74947, 0, 0],\n        \"93\": [0.24982, 0.74947, 0, 0],\n        \"94\": [0, 0.69141, 0, 0],\n        \"97\": [0, 0.47534, 0, 0],\n        \"98\": [0, 0.69141, 0, 0],\n        \"99\": [0, 0.47534, 0, 0],\n        \"100\": [0, 0.62119, 0, 0],\n        \"101\": [0, 0.47534, 0, 0],\n        \"102\": [0.18906, 0.69141, 0, 0],\n        \"103\": [0.18906, 0.47534, 0, 0],\n        \"104\": [0.18906, 0.69141, 0, 0],\n        \"105\": [0, 0.69141, 0, 0],\n        \"106\": [0, 0.69141, 0, 0],\n        \"107\": [0, 0.69141, 0, 0],\n        \"108\": [0, 0.69141, 0, 0],\n        \"109\": [0, 0.47534, 0, 0],\n        \"110\": [0, 0.47534, 0, 0],\n        \"111\": [0, 0.47534, 0, 0],\n        \"112\": [0.18906, 0.52396, 0, 0],\n        \"113\": [0.18906, 0.47534, 0, 0],\n        \"114\": [0, 0.47534, 0, 0],\n        \"115\": [0, 0.47534, 0, 0],\n        \"116\": [0, 0.62119, 0, 0],\n        \"117\": [0, 0.47534, 0, 0],\n        \"118\": [0, 0.52396, 0, 0],\n        \"119\": [0, 0.52396, 0, 0],\n        \"120\": [0.18906, 0.47534, 0, 0],\n        \"121\": [0.18906, 0.47534, 0, 0],\n        \"122\": [0.18906, 0.47534, 0, 0],\n        \"8216\": [0, 0.69141, 0, 0],\n        \"8217\": [0, 0.69141, 0, 0],\n        \"58112\": [0, 0.62119, 0, 0],\n        \"58113\": [0, 0.62119, 0, 0],\n        \"58114\": [0.18906, 0.69141, 0, 0],\n        \"58115\": [0.18906, 0.69141, 0, 0],\n        \"58116\": [0.18906, 0.47534, 0, 0],\n        \"58117\": [0, 0.69141, 0, 0],\n        \"58118\": [0, 0.62119, 0, 0],\n        \"58119\": [0, 0.47534, 0, 0],\n    },\n    \"Main-Bold\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.13333, 0.63333, 0, 0],\n        \"44\": [0.19444, 0.15556, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.15556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.19444, 0.44444, 0, 0],\n        \"60\": [0.08556, 0.58556, 0, 0],\n        \"61\": [-0.10889, 0.39111, 0, 0],\n        \"62\": [0.08556, 0.58556, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0, 0],\n        \"67\": [0, 0.68611, 0, 0],\n        \"68\": [0, 0.68611, 0, 0],\n        \"69\": [0, 0.68611, 0, 0],\n        \"70\": [0, 0.68611, 0, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0, 0],\n        \"73\": [0, 0.68611, 0, 0],\n        \"74\": [0, 0.68611, 0, 0],\n        \"75\": [0, 0.68611, 0, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0, 0],\n        \"78\": [0, 0.68611, 0, 0],\n        \"79\": [0, 0.68611, 0, 0],\n        \"80\": [0, 0.68611, 0, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0, 0],\n        \"83\": [0, 0.68611, 0, 0],\n        \"84\": [0, 0.68611, 0, 0],\n        \"85\": [0, 0.68611, 0, 0],\n        \"86\": [0, 0.68611, 0.01597, 0],\n        \"87\": [0, 0.68611, 0.01597, 0],\n        \"88\": [0, 0.68611, 0, 0],\n        \"89\": [0, 0.68611, 0.02875, 0],\n        \"90\": [0, 0.68611, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.13444, 0.03194, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.10903, 0],\n        \"103\": [0.19444, 0.44444, 0.01597, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69444, 0, 0],\n        \"106\": [0.19444, 0.69444, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01597, 0],\n        \"119\": [0, 0.44444, 0.01597, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01597, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.34444, 0, 0],\n        \"168\": [0, 0.69444, 0, 0],\n        \"172\": [0, 0.44444, 0, 0],\n        \"175\": [0, 0.59611, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.13333, 0.63333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.13333, 0.63333, 0, 0],\n        \"247\": [0.13333, 0.63333, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.63194, 0, 0],\n        \"713\": [0, 0.59611, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.69444, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.69444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.69444, 0, 0],\n        \"772\": [0, 0.59611, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.69444, 0, 0],\n        \"776\": [0, 0.69444, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68611, 0, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0, 0],\n        \"928\": [0, 0.68611, 0, 0],\n        \"931\": [0, 0.68611, 0, 0],\n        \"933\": [0, 0.68611, 0, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0, 0],\n        \"937\": [0, 0.68611, 0, 0],\n        \"8211\": [0, 0.44444, 0.03194, 0],\n        \"8212\": [0, 0.44444, 0.03194, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.72444, 0.15486, 0],\n        \"8463\": [0, 0.69444, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0],\n        \"8472\": [0.19444, 0.44444, 0, 0],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.10889, 0.39111, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.10889, 0.39111, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.10889, 0.39111, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8636\": [-0.10889, 0.39111, 0, 0],\n        \"8637\": [-0.10889, 0.39111, 0, 0],\n        \"8640\": [-0.10889, 0.39111, 0, 0],\n        \"8641\": [-0.10889, 0.39111, 0, 0],\n        \"8656\": [-0.10889, 0.39111, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.10889, 0.39111, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.10889, 0.39111, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.06389, 0],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68611, 0, 0],\n        \"8712\": [0.08556, 0.58556, 0, 0],\n        \"8715\": [0.08556, 0.58556, 0, 0],\n        \"8722\": [0.13333, 0.63333, 0, 0],\n        \"8723\": [0.13333, 0.63333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.02778, 0.47222, 0, 0],\n        \"8728\": [-0.02639, 0.47361, 0, 0],\n        \"8729\": [-0.02639, 0.47361, 0, 0],\n        \"8730\": [0.18, 0.82, 0, 0],\n        \"8733\": [0, 0.44444, 0, 0],\n        \"8734\": [0, 0.44444, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.12778, 0],\n        \"8764\": [-0.10889, 0.39111, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [0.00222, 0.50222, 0, 0],\n        \"8776\": [0.02444, 0.52444, 0, 0],\n        \"8781\": [0.00222, 0.50222, 0, 0],\n        \"8801\": [0.00222, 0.50222, 0, 0],\n        \"8804\": [0.19667, 0.69667, 0, 0],\n        \"8805\": [0.19667, 0.69667, 0, 0],\n        \"8810\": [0.08556, 0.58556, 0, 0],\n        \"8811\": [0.08556, 0.58556, 0, 0],\n        \"8826\": [0.08556, 0.58556, 0, 0],\n        \"8827\": [0.08556, 0.58556, 0, 0],\n        \"8834\": [0.08556, 0.58556, 0, 0],\n        \"8835\": [0.08556, 0.58556, 0, 0],\n        \"8838\": [0.19667, 0.69667, 0, 0],\n        \"8839\": [0.19667, 0.69667, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.19667, 0.69667, 0, 0],\n        \"8850\": [0.19667, 0.69667, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.13333, 0.63333, 0, 0],\n        \"8854\": [0.13333, 0.63333, 0, 0],\n        \"8855\": [0.13333, 0.63333, 0, 0],\n        \"8856\": [0.13333, 0.63333, 0, 0],\n        \"8857\": [0.13333, 0.63333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8900\": [-0.02639, 0.47361, 0, 0],\n        \"8901\": [-0.02639, 0.47361, 0, 0],\n        \"8902\": [-0.02778, 0.47222, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.13889, 0.36111, 0, 0],\n        \"8995\": [-0.13889, 0.36111, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.02778, 0.47222, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.02778, 0.47222, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10815\": [0, 0.68611, 0, 0],\n        \"10927\": [0.19667, 0.69667, 0, 0],\n        \"10928\": [0.19667, 0.69667, 0, 0],\n    },\n    \"Main-Italic\": {\n        \"33\": [0, 0.69444, 0.12417, 0],\n        \"34\": [0, 0.69444, 0.06961, 0],\n        \"35\": [0.19444, 0.69444, 0.06616, 0],\n        \"37\": [0.05556, 0.75, 0.13639, 0],\n        \"38\": [0, 0.69444, 0.09694, 0],\n        \"39\": [0, 0.69444, 0.12417, 0],\n        \"40\": [0.25, 0.75, 0.16194, 0],\n        \"41\": [0.25, 0.75, 0.03694, 0],\n        \"42\": [0, 0.75, 0.14917, 0],\n        \"43\": [0.05667, 0.56167, 0.03694, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0.02826, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0.16194, 0],\n        \"48\": [0, 0.64444, 0.13556, 0],\n        \"49\": [0, 0.64444, 0.13556, 0],\n        \"50\": [0, 0.64444, 0.13556, 0],\n        \"51\": [0, 0.64444, 0.13556, 0],\n        \"52\": [0.19444, 0.64444, 0.13556, 0],\n        \"53\": [0, 0.64444, 0.13556, 0],\n        \"54\": [0, 0.64444, 0.13556, 0],\n        \"55\": [0.19444, 0.64444, 0.13556, 0],\n        \"56\": [0, 0.64444, 0.13556, 0],\n        \"57\": [0, 0.64444, 0.13556, 0],\n        \"58\": [0, 0.43056, 0.0582, 0],\n        \"59\": [0.19444, 0.43056, 0.0582, 0],\n        \"61\": [-0.13313, 0.36687, 0.06616, 0],\n        \"63\": [0, 0.69444, 0.1225, 0],\n        \"64\": [0, 0.69444, 0.09597, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0.10257, 0],\n        \"67\": [0, 0.68333, 0.14528, 0],\n        \"68\": [0, 0.68333, 0.09403, 0],\n        \"69\": [0, 0.68333, 0.12028, 0],\n        \"70\": [0, 0.68333, 0.13305, 0],\n        \"71\": [0, 0.68333, 0.08722, 0],\n        \"72\": [0, 0.68333, 0.16389, 0],\n        \"73\": [0, 0.68333, 0.15806, 0],\n        \"74\": [0, 0.68333, 0.14028, 0],\n        \"75\": [0, 0.68333, 0.14528, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0.16389, 0],\n        \"78\": [0, 0.68333, 0.16389, 0],\n        \"79\": [0, 0.68333, 0.09403, 0],\n        \"80\": [0, 0.68333, 0.10257, 0],\n        \"81\": [0.19444, 0.68333, 0.09403, 0],\n        \"82\": [0, 0.68333, 0.03868, 0],\n        \"83\": [0, 0.68333, 0.11972, 0],\n        \"84\": [0, 0.68333, 0.13305, 0],\n        \"85\": [0, 0.68333, 0.16389, 0],\n        \"86\": [0, 0.68333, 0.18361, 0],\n        \"87\": [0, 0.68333, 0.18361, 0],\n        \"88\": [0, 0.68333, 0.15806, 0],\n        \"89\": [0, 0.68333, 0.19383, 0],\n        \"90\": [0, 0.68333, 0.14528, 0],\n        \"91\": [0.25, 0.75, 0.1875, 0],\n        \"93\": [0.25, 0.75, 0.10528, 0],\n        \"94\": [0, 0.69444, 0.06646, 0],\n        \"95\": [0.31, 0.12056, 0.09208, 0],\n        \"97\": [0, 0.43056, 0.07671, 0],\n        \"98\": [0, 0.69444, 0.06312, 0],\n        \"99\": [0, 0.43056, 0.05653, 0],\n        \"100\": [0, 0.69444, 0.10333, 0],\n        \"101\": [0, 0.43056, 0.07514, 0],\n        \"102\": [0.19444, 0.69444, 0.21194, 0],\n        \"103\": [0.19444, 0.43056, 0.08847, 0],\n        \"104\": [0, 0.69444, 0.07671, 0],\n        \"105\": [0, 0.65536, 0.1019, 0],\n        \"106\": [0.19444, 0.65536, 0.14467, 0],\n        \"107\": [0, 0.69444, 0.10764, 0],\n        \"108\": [0, 0.69444, 0.10333, 0],\n        \"109\": [0, 0.43056, 0.07671, 0],\n        \"110\": [0, 0.43056, 0.07671, 0],\n        \"111\": [0, 0.43056, 0.06312, 0],\n        \"112\": [0.19444, 0.43056, 0.06312, 0],\n        \"113\": [0.19444, 0.43056, 0.08847, 0],\n        \"114\": [0, 0.43056, 0.10764, 0],\n        \"115\": [0, 0.43056, 0.08208, 0],\n        \"116\": [0, 0.61508, 0.09486, 0],\n        \"117\": [0, 0.43056, 0.07671, 0],\n        \"118\": [0, 0.43056, 0.10764, 0],\n        \"119\": [0, 0.43056, 0.10764, 0],\n        \"120\": [0, 0.43056, 0.12042, 0],\n        \"121\": [0.19444, 0.43056, 0.08847, 0],\n        \"122\": [0, 0.43056, 0.12292, 0],\n        \"126\": [0.35, 0.31786, 0.11585, 0],\n        \"163\": [0, 0.69444, 0, 0],\n        \"305\": [0, 0.43056, 0, 0.02778],\n        \"567\": [0.19444, 0.43056, 0, 0.08334],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0.09694, 0],\n        \"770\": [0, 0.69444, 0.06646, 0],\n        \"771\": [0, 0.66786, 0.11585, 0],\n        \"772\": [0, 0.56167, 0.10333, 0],\n        \"774\": [0, 0.69444, 0.10806, 0],\n        \"775\": [0, 0.66786, 0.11752, 0],\n        \"776\": [0, 0.66786, 0.10474, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0.1225, 0],\n        \"780\": [0, 0.62847, 0.08295, 0],\n        \"915\": [0, 0.68333, 0.13305, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0.09403, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0.15294, 0],\n        \"928\": [0, 0.68333, 0.16389, 0],\n        \"931\": [0, 0.68333, 0.12028, 0],\n        \"933\": [0, 0.68333, 0.11111, 0],\n        \"934\": [0, 0.68333, 0.05986, 0],\n        \"936\": [0, 0.68333, 0.11111, 0],\n        \"937\": [0, 0.68333, 0.10257, 0],\n        \"8211\": [0, 0.43056, 0.09208, 0],\n        \"8212\": [0, 0.43056, 0.09208, 0],\n        \"8216\": [0, 0.69444, 0.12417, 0],\n        \"8217\": [0, 0.69444, 0.12417, 0],\n        \"8220\": [0, 0.69444, 0.1685, 0],\n        \"8221\": [0, 0.69444, 0.06961, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n    },\n    \"Main-Regular\": {\n        \"32\": [0, 0, 0, 0],\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.19444, 0.43056, 0, 0],\n        \"60\": [0.0391, 0.5391, 0, 0],\n        \"61\": [-0.13313, 0.36687, 0, 0],\n        \"62\": [0.0391, 0.5391, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0, 0],\n        \"67\": [0, 0.68333, 0, 0],\n        \"68\": [0, 0.68333, 0, 0],\n        \"69\": [0, 0.68333, 0, 0],\n        \"70\": [0, 0.68333, 0, 0],\n        \"71\": [0, 0.68333, 0, 0],\n        \"72\": [0, 0.68333, 0, 0],\n        \"73\": [0, 0.68333, 0, 0],\n        \"74\": [0, 0.68333, 0, 0],\n        \"75\": [0, 0.68333, 0, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0, 0],\n        \"78\": [0, 0.68333, 0, 0],\n        \"79\": [0, 0.68333, 0, 0],\n        \"80\": [0, 0.68333, 0, 0],\n        \"81\": [0.19444, 0.68333, 0, 0],\n        \"82\": [0, 0.68333, 0, 0],\n        \"83\": [0, 0.68333, 0, 0],\n        \"84\": [0, 0.68333, 0, 0],\n        \"85\": [0, 0.68333, 0, 0],\n        \"86\": [0, 0.68333, 0.01389, 0],\n        \"87\": [0, 0.68333, 0.01389, 0],\n        \"88\": [0, 0.68333, 0, 0],\n        \"89\": [0, 0.68333, 0.025, 0],\n        \"90\": [0, 0.68333, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.12056, 0.02778, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.69444, 0.07778, 0],\n        \"103\": [0.19444, 0.43056, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.66786, 0, 0],\n        \"106\": [0.19444, 0.66786, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.19444, 0.43056, 0, 0],\n        \"113\": [0.19444, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.61508, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0.01389, 0],\n        \"119\": [0, 0.43056, 0.01389, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.19444, 0.43056, 0.01389, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.31786, 0, 0],\n        \"160\": [0, 0, 0, 0],\n        \"168\": [0, 0.66786, 0, 0],\n        \"172\": [0, 0.43056, 0, 0],\n        \"175\": [0, 0.56778, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.08333, 0.58333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.08333, 0.58333, 0, 0],\n        \"247\": [0.08333, 0.58333, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.19444, 0.43056, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.62847, 0, 0],\n        \"713\": [0, 0.56778, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.66786, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.66786, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.66786, 0, 0],\n        \"772\": [0, 0.56778, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.66786, 0, 0],\n        \"776\": [0, 0.66786, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.62847, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68333, 0, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0, 0],\n        \"928\": [0, 0.68333, 0, 0],\n        \"931\": [0, 0.68333, 0, 0],\n        \"933\": [0, 0.68333, 0, 0],\n        \"934\": [0, 0.68333, 0, 0],\n        \"936\": [0, 0.68333, 0, 0],\n        \"937\": [0, 0.68333, 0, 0],\n        \"8211\": [0, 0.43056, 0.02778, 0],\n        \"8212\": [0, 0.43056, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8230\": [0, 0.12, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.71444, 0.15382, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0.11111],\n        \"8472\": [0.19444, 0.43056, 0, 0.11111],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.13313, 0.36687, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.13313, 0.36687, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.13313, 0.36687, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8614\": [0.011, 0.511, 0, 0],\n        \"8617\": [0.011, 0.511, 0, 0],\n        \"8618\": [0.011, 0.511, 0, 0],\n        \"8636\": [-0.13313, 0.36687, 0, 0],\n        \"8637\": [-0.13313, 0.36687, 0, 0],\n        \"8640\": [-0.13313, 0.36687, 0, 0],\n        \"8641\": [-0.13313, 0.36687, 0, 0],\n        \"8652\": [0.011, 0.671, 0, 0],\n        \"8656\": [-0.13313, 0.36687, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.13313, 0.36687, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.13313, 0.36687, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.05556, 0.08334],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68333, 0, 0],\n        \"8712\": [0.0391, 0.5391, 0, 0],\n        \"8715\": [0.0391, 0.5391, 0, 0],\n        \"8722\": [0.08333, 0.58333, 0, 0],\n        \"8723\": [0.08333, 0.58333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.03472, 0.46528, 0, 0],\n        \"8728\": [-0.05555, 0.44445, 0, 0],\n        \"8729\": [-0.05555, 0.44445, 0, 0],\n        \"8730\": [0.2, 0.8, 0, 0],\n        \"8733\": [0, 0.43056, 0, 0],\n        \"8734\": [0, 0.43056, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.11111, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [-0.03625, 0.46375, 0, 0],\n        \"8773\": [-0.022, 0.589, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8781\": [-0.03625, 0.46375, 0, 0],\n        \"8784\": [-0.133, 0.67, 0, 0],\n        \"8800\": [0.215, 0.716, 0, 0],\n        \"8801\": [-0.03625, 0.46375, 0, 0],\n        \"8804\": [0.13597, 0.63597, 0, 0],\n        \"8805\": [0.13597, 0.63597, 0, 0],\n        \"8810\": [0.0391, 0.5391, 0, 0],\n        \"8811\": [0.0391, 0.5391, 0, 0],\n        \"8826\": [0.0391, 0.5391, 0, 0],\n        \"8827\": [0.0391, 0.5391, 0, 0],\n        \"8834\": [0.0391, 0.5391, 0, 0],\n        \"8835\": [0.0391, 0.5391, 0, 0],\n        \"8838\": [0.13597, 0.63597, 0, 0],\n        \"8839\": [0.13597, 0.63597, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.13597, 0.63597, 0, 0],\n        \"8850\": [0.13597, 0.63597, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.08333, 0.58333, 0, 0],\n        \"8854\": [0.08333, 0.58333, 0, 0],\n        \"8855\": [0.08333, 0.58333, 0, 0],\n        \"8856\": [0.08333, 0.58333, 0, 0],\n        \"8857\": [0.08333, 0.58333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8872\": [0.249, 0.75, 0, 0],\n        \"8900\": [-0.05555, 0.44445, 0, 0],\n        \"8901\": [-0.05555, 0.44445, 0, 0],\n        \"8902\": [-0.03472, 0.46528, 0, 0],\n        \"8904\": [0.005, 0.505, 0, 0],\n        \"8942\": [0.03, 0.9, 0, 0],\n        \"8943\": [-0.19, 0.31, 0, 0],\n        \"8945\": [-0.1, 0.82, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.14236, 0.35764, 0, 0],\n        \"8995\": [-0.14236, 0.35764, 0, 0],\n        \"9136\": [0.244, 0.744, 0, 0],\n        \"9137\": [0.244, 0.744, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.03472, 0.46528, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.03472, 0.46528, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10222\": [0.244, 0.744, 0, 0],\n        \"10223\": [0.244, 0.744, 0, 0],\n        \"10229\": [0.011, 0.511, 0, 0],\n        \"10230\": [0.011, 0.511, 0, 0],\n        \"10231\": [0.011, 0.511, 0, 0],\n        \"10232\": [0.024, 0.525, 0, 0],\n        \"10233\": [0.024, 0.525, 0, 0],\n        \"10234\": [0.024, 0.525, 0, 0],\n        \"10236\": [0.011, 0.511, 0, 0],\n        \"10815\": [0, 0.68333, 0, 0],\n        \"10927\": [0.13597, 0.63597, 0, 0],\n        \"10928\": [0.13597, 0.63597, 0, 0],\n    },\n    \"Math-BoldItalic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0.04835, 0],\n        \"67\": [0, 0.68611, 0.06979, 0],\n        \"68\": [0, 0.68611, 0.03194, 0],\n        \"69\": [0, 0.68611, 0.05451, 0],\n        \"70\": [0, 0.68611, 0.15972, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0.08229, 0],\n        \"73\": [0, 0.68611, 0.07778, 0],\n        \"74\": [0, 0.68611, 0.10069, 0],\n        \"75\": [0, 0.68611, 0.06979, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0.11424, 0],\n        \"78\": [0, 0.68611, 0.11424, 0],\n        \"79\": [0, 0.68611, 0.03194, 0],\n        \"80\": [0, 0.68611, 0.15972, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0.00421, 0],\n        \"83\": [0, 0.68611, 0.05382, 0],\n        \"84\": [0, 0.68611, 0.15972, 0],\n        \"85\": [0, 0.68611, 0.11424, 0],\n        \"86\": [0, 0.68611, 0.25555, 0],\n        \"87\": [0, 0.68611, 0.15972, 0],\n        \"88\": [0, 0.68611, 0.07778, 0],\n        \"89\": [0, 0.68611, 0.25555, 0],\n        \"90\": [0, 0.68611, 0.06979, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0.19444, 0.69444, 0.11042, 0],\n        \"103\": [0.19444, 0.44444, 0.03704, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69326, 0, 0],\n        \"106\": [0.19444, 0.69326, 0.0622, 0],\n        \"107\": [0, 0.69444, 0.01852, 0],\n        \"108\": [0, 0.69444, 0.0088, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0.03704, 0],\n        \"114\": [0, 0.44444, 0.03194, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.03704, 0],\n        \"119\": [0, 0.44444, 0.02778, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.03704, 0],\n        \"122\": [0, 0.44444, 0.04213, 0],\n        \"915\": [0, 0.68611, 0.15972, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0.03194, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0.07458, 0],\n        \"928\": [0, 0.68611, 0.08229, 0],\n        \"931\": [0, 0.68611, 0.05451, 0],\n        \"933\": [0, 0.68611, 0.15972, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0.11653, 0],\n        \"937\": [0, 0.68611, 0.04835, 0],\n        \"945\": [0, 0.44444, 0, 0],\n        \"946\": [0.19444, 0.69444, 0.03403, 0],\n        \"947\": [0.19444, 0.44444, 0.06389, 0],\n        \"948\": [0, 0.69444, 0.03819, 0],\n        \"949\": [0, 0.44444, 0, 0],\n        \"950\": [0.19444, 0.69444, 0.06215, 0],\n        \"951\": [0.19444, 0.44444, 0.03704, 0],\n        \"952\": [0, 0.69444, 0.03194, 0],\n        \"953\": [0, 0.44444, 0, 0],\n        \"954\": [0, 0.44444, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.44444, 0, 0],\n        \"957\": [0, 0.44444, 0.06898, 0],\n        \"958\": [0.19444, 0.69444, 0.03021, 0],\n        \"959\": [0, 0.44444, 0, 0],\n        \"960\": [0, 0.44444, 0.03704, 0],\n        \"961\": [0.19444, 0.44444, 0, 0],\n        \"962\": [0.09722, 0.44444, 0.07917, 0],\n        \"963\": [0, 0.44444, 0.03704, 0],\n        \"964\": [0, 0.44444, 0.13472, 0],\n        \"965\": [0, 0.44444, 0.03704, 0],\n        \"966\": [0.19444, 0.44444, 0, 0],\n        \"967\": [0.19444, 0.44444, 0, 0],\n        \"968\": [0.19444, 0.69444, 0.03704, 0],\n        \"969\": [0, 0.44444, 0.03704, 0],\n        \"977\": [0, 0.69444, 0, 0],\n        \"981\": [0.19444, 0.69444, 0, 0],\n        \"982\": [0, 0.44444, 0.03194, 0],\n        \"1009\": [0.19444, 0.44444, 0, 0],\n        \"1013\": [0, 0.44444, 0, 0],\n    },\n    \"Math-Italic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556],\n    },\n    \"Math-Regular\": {\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556],\n    },\n    \"SansSerif-Regular\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.125, 0.08333, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.08333, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.65556, 0, 0],\n        \"49\": [0, 0.65556, 0, 0],\n        \"50\": [0, 0.65556, 0, 0],\n        \"51\": [0, 0.65556, 0, 0],\n        \"52\": [0, 0.65556, 0, 0],\n        \"53\": [0, 0.65556, 0, 0],\n        \"54\": [0, 0.65556, 0, 0],\n        \"55\": [0, 0.65556, 0, 0],\n        \"56\": [0, 0.65556, 0, 0],\n        \"57\": [0, 0.65556, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.125, 0.44444, 0, 0],\n        \"61\": [-0.13, 0.37, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.69444, 0, 0],\n        \"66\": [0, 0.69444, 0, 0],\n        \"67\": [0, 0.69444, 0, 0],\n        \"68\": [0, 0.69444, 0, 0],\n        \"69\": [0, 0.69444, 0, 0],\n        \"70\": [0, 0.69444, 0, 0],\n        \"71\": [0, 0.69444, 0, 0],\n        \"72\": [0, 0.69444, 0, 0],\n        \"73\": [0, 0.69444, 0, 0],\n        \"74\": [0, 0.69444, 0, 0],\n        \"75\": [0, 0.69444, 0, 0],\n        \"76\": [0, 0.69444, 0, 0],\n        \"77\": [0, 0.69444, 0, 0],\n        \"78\": [0, 0.69444, 0, 0],\n        \"79\": [0, 0.69444, 0, 0],\n        \"80\": [0, 0.69444, 0, 0],\n        \"81\": [0.125, 0.69444, 0, 0],\n        \"82\": [0, 0.69444, 0, 0],\n        \"83\": [0, 0.69444, 0, 0],\n        \"84\": [0, 0.69444, 0, 0],\n        \"85\": [0, 0.69444, 0, 0],\n        \"86\": [0, 0.69444, 0.01389, 0],\n        \"87\": [0, 0.69444, 0.01389, 0],\n        \"88\": [0, 0.69444, 0, 0],\n        \"89\": [0, 0.69444, 0.025, 0],\n        \"90\": [0, 0.69444, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.35, 0.09444, 0.02778, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.06944, 0],\n        \"103\": [0.19444, 0.44444, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.67937, 0, 0],\n        \"106\": [0.19444, 0.67937, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0.01389, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.57143, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01389, 0],\n        \"119\": [0, 0.44444, 0.01389, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01389, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"126\": [0.35, 0.32659, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.67659, 0, 0],\n        \"772\": [0, 0.60889, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.67937, 0, 0],\n        \"776\": [0, 0.67937, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"915\": [0, 0.69444, 0, 0],\n        \"916\": [0, 0.69444, 0, 0],\n        \"920\": [0, 0.69444, 0, 0],\n        \"923\": [0, 0.69444, 0, 0],\n        \"926\": [0, 0.69444, 0, 0],\n        \"928\": [0, 0.69444, 0, 0],\n        \"931\": [0, 0.69444, 0, 0],\n        \"933\": [0, 0.69444, 0, 0],\n        \"934\": [0, 0.69444, 0, 0],\n        \"936\": [0, 0.69444, 0, 0],\n        \"937\": [0, 0.69444, 0, 0],\n        \"8211\": [0, 0.44444, 0.02778, 0],\n        \"8212\": [0, 0.44444, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n    },\n    \"Script-Regular\": {\n        \"65\": [0, 0.7, 0.22925, 0],\n        \"66\": [0, 0.7, 0.04087, 0],\n        \"67\": [0, 0.7, 0.1689, 0],\n        \"68\": [0, 0.7, 0.09371, 0],\n        \"69\": [0, 0.7, 0.18583, 0],\n        \"70\": [0, 0.7, 0.13634, 0],\n        \"71\": [0, 0.7, 0.17322, 0],\n        \"72\": [0, 0.7, 0.29694, 0],\n        \"73\": [0, 0.7, 0.19189, 0],\n        \"74\": [0.27778, 0.7, 0.19189, 0],\n        \"75\": [0, 0.7, 0.31259, 0],\n        \"76\": [0, 0.7, 0.19189, 0],\n        \"77\": [0, 0.7, 0.15981, 0],\n        \"78\": [0, 0.7, 0.3525, 0],\n        \"79\": [0, 0.7, 0.08078, 0],\n        \"80\": [0, 0.7, 0.08078, 0],\n        \"81\": [0, 0.7, 0.03305, 0],\n        \"82\": [0, 0.7, 0.06259, 0],\n        \"83\": [0, 0.7, 0.19189, 0],\n        \"84\": [0, 0.7, 0.29087, 0],\n        \"85\": [0, 0.7, 0.25815, 0],\n        \"86\": [0, 0.7, 0.27523, 0],\n        \"87\": [0, 0.7, 0.27523, 0],\n        \"88\": [0, 0.7, 0.26006, 0],\n        \"89\": [0, 0.7, 0.2939, 0],\n        \"90\": [0, 0.7, 0.24037, 0],\n    },\n    \"Size1-Regular\": {\n        \"40\": [0.35001, 0.85, 0, 0],\n        \"41\": [0.35001, 0.85, 0, 0],\n        \"47\": [0.35001, 0.85, 0, 0],\n        \"91\": [0.35001, 0.85, 0, 0],\n        \"92\": [0.35001, 0.85, 0, 0],\n        \"93\": [0.35001, 0.85, 0, 0],\n        \"123\": [0.35001, 0.85, 0, 0],\n        \"125\": [0.35001, 0.85, 0, 0],\n        \"710\": [0, 0.72222, 0, 0],\n        \"732\": [0, 0.72222, 0, 0],\n        \"770\": [0, 0.72222, 0, 0],\n        \"771\": [0, 0.72222, 0, 0],\n        \"8214\": [-0.00099, 0.601, 0, 0],\n        \"8593\": [1e-05, 0.6, 0, 0],\n        \"8595\": [1e-05, 0.6, 0, 0],\n        \"8657\": [1e-05, 0.6, 0, 0],\n        \"8659\": [1e-05, 0.6, 0, 0],\n        \"8719\": [0.25001, 0.75, 0, 0],\n        \"8720\": [0.25001, 0.75, 0, 0],\n        \"8721\": [0.25001, 0.75, 0, 0],\n        \"8730\": [0.35001, 0.85, 0, 0],\n        \"8739\": [-0.00599, 0.606, 0, 0],\n        \"8741\": [-0.00599, 0.606, 0, 0],\n        \"8747\": [0.30612, 0.805, 0.19445, 0],\n        \"8748\": [0.306, 0.805, 0.19445, 0],\n        \"8749\": [0.306, 0.805, 0.19445, 0],\n        \"8750\": [0.30612, 0.805, 0.19445, 0],\n        \"8896\": [0.25001, 0.75, 0, 0],\n        \"8897\": [0.25001, 0.75, 0, 0],\n        \"8898\": [0.25001, 0.75, 0, 0],\n        \"8899\": [0.25001, 0.75, 0, 0],\n        \"8968\": [0.35001, 0.85, 0, 0],\n        \"8969\": [0.35001, 0.85, 0, 0],\n        \"8970\": [0.35001, 0.85, 0, 0],\n        \"8971\": [0.35001, 0.85, 0, 0],\n        \"9168\": [-0.00099, 0.601, 0, 0],\n        \"10216\": [0.35001, 0.85, 0, 0],\n        \"10217\": [0.35001, 0.85, 0, 0],\n        \"10752\": [0.25001, 0.75, 0, 0],\n        \"10753\": [0.25001, 0.75, 0, 0],\n        \"10754\": [0.25001, 0.75, 0, 0],\n        \"10756\": [0.25001, 0.75, 0, 0],\n        \"10758\": [0.25001, 0.75, 0, 0],\n    },\n    \"Size2-Regular\": {\n        \"40\": [0.65002, 1.15, 0, 0],\n        \"41\": [0.65002, 1.15, 0, 0],\n        \"47\": [0.65002, 1.15, 0, 0],\n        \"91\": [0.65002, 1.15, 0, 0],\n        \"92\": [0.65002, 1.15, 0, 0],\n        \"93\": [0.65002, 1.15, 0, 0],\n        \"123\": [0.65002, 1.15, 0, 0],\n        \"125\": [0.65002, 1.15, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8719\": [0.55001, 1.05, 0, 0],\n        \"8720\": [0.55001, 1.05, 0, 0],\n        \"8721\": [0.55001, 1.05, 0, 0],\n        \"8730\": [0.65002, 1.15, 0, 0],\n        \"8747\": [0.86225, 1.36, 0.44445, 0],\n        \"8748\": [0.862, 1.36, 0.44445, 0],\n        \"8749\": [0.862, 1.36, 0.44445, 0],\n        \"8750\": [0.86225, 1.36, 0.44445, 0],\n        \"8896\": [0.55001, 1.05, 0, 0],\n        \"8897\": [0.55001, 1.05, 0, 0],\n        \"8898\": [0.55001, 1.05, 0, 0],\n        \"8899\": [0.55001, 1.05, 0, 0],\n        \"8968\": [0.65002, 1.15, 0, 0],\n        \"8969\": [0.65002, 1.15, 0, 0],\n        \"8970\": [0.65002, 1.15, 0, 0],\n        \"8971\": [0.65002, 1.15, 0, 0],\n        \"10216\": [0.65002, 1.15, 0, 0],\n        \"10217\": [0.65002, 1.15, 0, 0],\n        \"10752\": [0.55001, 1.05, 0, 0],\n        \"10753\": [0.55001, 1.05, 0, 0],\n        \"10754\": [0.55001, 1.05, 0, 0],\n        \"10756\": [0.55001, 1.05, 0, 0],\n        \"10758\": [0.55001, 1.05, 0, 0],\n    },\n    \"Size3-Regular\": {\n        \"40\": [0.95003, 1.45, 0, 0],\n        \"41\": [0.95003, 1.45, 0, 0],\n        \"47\": [0.95003, 1.45, 0, 0],\n        \"91\": [0.95003, 1.45, 0, 0],\n        \"92\": [0.95003, 1.45, 0, 0],\n        \"93\": [0.95003, 1.45, 0, 0],\n        \"123\": [0.95003, 1.45, 0, 0],\n        \"125\": [0.95003, 1.45, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8730\": [0.95003, 1.45, 0, 0],\n        \"8968\": [0.95003, 1.45, 0, 0],\n        \"8969\": [0.95003, 1.45, 0, 0],\n        \"8970\": [0.95003, 1.45, 0, 0],\n        \"8971\": [0.95003, 1.45, 0, 0],\n        \"10216\": [0.95003, 1.45, 0, 0],\n        \"10217\": [0.95003, 1.45, 0, 0],\n    },\n    \"Size4-Regular\": {\n        \"40\": [1.25003, 1.75, 0, 0],\n        \"41\": [1.25003, 1.75, 0, 0],\n        \"47\": [1.25003, 1.75, 0, 0],\n        \"91\": [1.25003, 1.75, 0, 0],\n        \"92\": [1.25003, 1.75, 0, 0],\n        \"93\": [1.25003, 1.75, 0, 0],\n        \"123\": [1.25003, 1.75, 0, 0],\n        \"125\": [1.25003, 1.75, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.825, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.825, 0, 0],\n        \"8730\": [1.25003, 1.75, 0, 0],\n        \"8968\": [1.25003, 1.75, 0, 0],\n        \"8969\": [1.25003, 1.75, 0, 0],\n        \"8970\": [1.25003, 1.75, 0, 0],\n        \"8971\": [1.25003, 1.75, 0, 0],\n        \"9115\": [0.64502, 1.155, 0, 0],\n        \"9116\": [1e-05, 0.6, 0, 0],\n        \"9117\": [0.64502, 1.155, 0, 0],\n        \"9118\": [0.64502, 1.155, 0, 0],\n        \"9119\": [1e-05, 0.6, 0, 0],\n        \"9120\": [0.64502, 1.155, 0, 0],\n        \"9121\": [0.64502, 1.155, 0, 0],\n        \"9122\": [-0.00099, 0.601, 0, 0],\n        \"9123\": [0.64502, 1.155, 0, 0],\n        \"9124\": [0.64502, 1.155, 0, 0],\n        \"9125\": [-0.00099, 0.601, 0, 0],\n        \"9126\": [0.64502, 1.155, 0, 0],\n        \"9127\": [1e-05, 0.9, 0, 0],\n        \"9128\": [0.65002, 1.15, 0, 0],\n        \"9129\": [0.90001, 0, 0, 0],\n        \"9130\": [0, 0.3, 0, 0],\n        \"9131\": [1e-05, 0.9, 0, 0],\n        \"9132\": [0.65002, 1.15, 0, 0],\n        \"9133\": [0.90001, 0, 0, 0],\n        \"9143\": [0.88502, 0.915, 0, 0],\n        \"10216\": [1.25003, 1.75, 0, 0],\n        \"10217\": [1.25003, 1.75, 0, 0],\n        \"57344\": [-0.00499, 0.605, 0, 0],\n        \"57345\": [-0.00499, 0.605, 0, 0],\n        \"57680\": [0, 0.12, 0, 0],\n        \"57681\": [0, 0.12, 0, 0],\n        \"57682\": [0, 0.12, 0, 0],\n        \"57683\": [0, 0.12, 0, 0],\n    },\n    \"Typewriter-Regular\": {\n        \"33\": [0, 0.61111, 0, 0],\n        \"34\": [0, 0.61111, 0, 0],\n        \"35\": [0, 0.61111, 0, 0],\n        \"36\": [0.08333, 0.69444, 0, 0],\n        \"37\": [0.08333, 0.69444, 0, 0],\n        \"38\": [0, 0.61111, 0, 0],\n        \"39\": [0, 0.61111, 0, 0],\n        \"40\": [0.08333, 0.69444, 0, 0],\n        \"41\": [0.08333, 0.69444, 0, 0],\n        \"42\": [0, 0.52083, 0, 0],\n        \"43\": [-0.08056, 0.53055, 0, 0],\n        \"44\": [0.13889, 0.125, 0, 0],\n        \"45\": [-0.08056, 0.53055, 0, 0],\n        \"46\": [0, 0.125, 0, 0],\n        \"47\": [0.08333, 0.69444, 0, 0],\n        \"48\": [0, 0.61111, 0, 0],\n        \"49\": [0, 0.61111, 0, 0],\n        \"50\": [0, 0.61111, 0, 0],\n        \"51\": [0, 0.61111, 0, 0],\n        \"52\": [0, 0.61111, 0, 0],\n        \"53\": [0, 0.61111, 0, 0],\n        \"54\": [0, 0.61111, 0, 0],\n        \"55\": [0, 0.61111, 0, 0],\n        \"56\": [0, 0.61111, 0, 0],\n        \"57\": [0, 0.61111, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.13889, 0.43056, 0, 0],\n        \"60\": [-0.05556, 0.55556, 0, 0],\n        \"61\": [-0.19549, 0.41562, 0, 0],\n        \"62\": [-0.05556, 0.55556, 0, 0],\n        \"63\": [0, 0.61111, 0, 0],\n        \"64\": [0, 0.61111, 0, 0],\n        \"65\": [0, 0.61111, 0, 0],\n        \"66\": [0, 0.61111, 0, 0],\n        \"67\": [0, 0.61111, 0, 0],\n        \"68\": [0, 0.61111, 0, 0],\n        \"69\": [0, 0.61111, 0, 0],\n        \"70\": [0, 0.61111, 0, 0],\n        \"71\": [0, 0.61111, 0, 0],\n        \"72\": [0, 0.61111, 0, 0],\n        \"73\": [0, 0.61111, 0, 0],\n        \"74\": [0, 0.61111, 0, 0],\n        \"75\": [0, 0.61111, 0, 0],\n        \"76\": [0, 0.61111, 0, 0],\n        \"77\": [0, 0.61111, 0, 0],\n        \"78\": [0, 0.61111, 0, 0],\n        \"79\": [0, 0.61111, 0, 0],\n        \"80\": [0, 0.61111, 0, 0],\n        \"81\": [0.13889, 0.61111, 0, 0],\n        \"82\": [0, 0.61111, 0, 0],\n        \"83\": [0, 0.61111, 0, 0],\n        \"84\": [0, 0.61111, 0, 0],\n        \"85\": [0, 0.61111, 0, 0],\n        \"86\": [0, 0.61111, 0, 0],\n        \"87\": [0, 0.61111, 0, 0],\n        \"88\": [0, 0.61111, 0, 0],\n        \"89\": [0, 0.61111, 0, 0],\n        \"90\": [0, 0.61111, 0, 0],\n        \"91\": [0.08333, 0.69444, 0, 0],\n        \"92\": [0.08333, 0.69444, 0, 0],\n        \"93\": [0.08333, 0.69444, 0, 0],\n        \"94\": [0, 0.61111, 0, 0],\n        \"95\": [0.09514, 0, 0, 0],\n        \"96\": [0, 0.61111, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.61111, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.61111, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.61111, 0, 0],\n        \"103\": [0.22222, 0.43056, 0, 0],\n        \"104\": [0, 0.61111, 0, 0],\n        \"105\": [0, 0.61111, 0, 0],\n        \"106\": [0.22222, 0.61111, 0, 0],\n        \"107\": [0, 0.61111, 0, 0],\n        \"108\": [0, 0.61111, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.22222, 0.43056, 0, 0],\n        \"113\": [0.22222, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.55358, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0, 0],\n        \"119\": [0, 0.43056, 0, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.22222, 0.43056, 0, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.08333, 0.69444, 0, 0],\n        \"124\": [0.08333, 0.69444, 0, 0],\n        \"125\": [0.08333, 0.69444, 0, 0],\n        \"126\": [0, 0.61111, 0, 0],\n        \"127\": [0, 0.61111, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.22222, 0.43056, 0, 0],\n        \"768\": [0, 0.61111, 0, 0],\n        \"769\": [0, 0.61111, 0, 0],\n        \"770\": [0, 0.61111, 0, 0],\n        \"771\": [0, 0.61111, 0, 0],\n        \"772\": [0, 0.56555, 0, 0],\n        \"774\": [0, 0.61111, 0, 0],\n        \"776\": [0, 0.61111, 0, 0],\n        \"778\": [0, 0.61111, 0, 0],\n        \"780\": [0, 0.56597, 0, 0],\n        \"915\": [0, 0.61111, 0, 0],\n        \"916\": [0, 0.61111, 0, 0],\n        \"920\": [0, 0.61111, 0, 0],\n        \"923\": [0, 0.61111, 0, 0],\n        \"926\": [0, 0.61111, 0, 0],\n        \"928\": [0, 0.61111, 0, 0],\n        \"931\": [0, 0.61111, 0, 0],\n        \"933\": [0, 0.61111, 0, 0],\n        \"934\": [0, 0.61111, 0, 0],\n        \"936\": [0, 0.61111, 0, 0],\n        \"937\": [0, 0.61111, 0, 0],\n        \"2018\": [0, 0.61111, 0, 0],\n        \"2019\": [0, 0.61111, 0, 0],\n        \"8242\": [0, 0.61111, 0, 0],\n    },\n};\n", "/* eslint no-unused-vars:0 */\n\nvar Style = require(\"./Style\");\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmmi10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the symbol fonts. In TeX, there are actually three sets of\n// dimensions, one for each of textstyle, scriptstyle, and scriptscriptstyle,\n// but we only use the textstyle ones, and scale certain dimensions accordingly.\n// See the TeXbook, page 441.\nvar sigma1 = 0.025;\nvar sigma2 = 0;\nvar sigma3 = 0;\nvar sigma4 = 0;\nvar sigma5 = 0.431;\nvar sigma6 = 1;\nvar sigma7 = 0;\nvar sigma8 = 0.677;\nvar sigma9 = 0.394;\nvar sigma10 = 0.444;\nvar sigma11 = 0.686;\nvar sigma12 = 0.345;\nvar sigma13 = 0.413;\nvar sigma14 = 0.363;\nvar sigma15 = 0.289;\nvar sigma16 = 0.150;\nvar sigma17 = 0.247;\nvar sigma18 = 0.386;\nvar sigma19 = 0.050;\nvar sigma20 = 2.390;\nvar sigma21 = 1.01;\nvar sigma21Script = 0.81;\nvar sigma21ScriptScript = 0.71;\nvar sigma22 = 0.250;\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1;\n\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\nvar ptPerEm = 10.0;\n\n// The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\nvar doubleRuleSep = 2.0 / ptPerEm;\n\n/**\n * This is just a mapping from common names to real metrics\n */\nvar metrics = {\n    xHeight: sigma5,\n    quad: sigma6,\n    num1: sigma8,\n    num2: sigma9,\n    num3: sigma10,\n    denom1: sigma11,\n    denom2: sigma12,\n    sup1: sigma13,\n    sup2: sigma14,\n    sup3: sigma15,\n    sub1: sigma16,\n    sub2: sigma17,\n    supDrop: sigma18,\n    subDrop: sigma19,\n    axisHeight: sigma22,\n    defaultRuleThickness: xi8,\n    bigOpSpacing1: xi9,\n    bigOpSpacing2: xi10,\n    bigOpSpacing3: xi11,\n    bigOpSpacing4: xi12,\n    bigOpSpacing5: xi13,\n    ptPerEm: ptPerEm,\n    emPerEx: sigma5 / sigma6,\n    doubleRuleSep: doubleRuleSep,\n\n    // TODO(alpert): Missing parallel structure here. We should probably add\n    // style-specific metrics for all of these.\n    delim1: sigma20,\n    getDelim2: function(style) {\n        if (style.size === Style.TEXT.size) {\n            return sigma21;\n        } else if (style.size === Style.SCRIPT.size) {\n            return sigma21Script;\n        } else if (style.size === Style.SCRIPTSCRIPT.size) {\n            return sigma21ScriptScript;\n        }\n        throw new Error(\"Unexpected style size: \" + style.size);\n    },\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\nvar metricMap = require(\"./fontMetricsData\");\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nvar getCharacterMetrics = function(character, style) {\n    var metrics = metricMap[style][character.charCodeAt(0)];\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4],\n        };\n    }\n};\n\nmodule.exports = {\n    metrics: metrics,\n    getCharacterMetrics: getCharacterMetrics,\n};\n", "/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\nmodule.exports = {\n    math: {},\n    text: {},\n};\n\nfunction defineSymbol(mode, font, group, replace, name) {\n    module.exports[mode][name] = {\n        font: font,\n        group: group,\n        replace: replace,\n    };\n}\n\n// Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n\n// modes:\nvar math = \"math\";\nvar text = \"text\";\n\n// fonts:\nvar main = \"main\";\nvar ams = \"ams\";\n\n// groups:\nvar accent = \"accent\";\nvar bin = \"bin\";\nvar close = \"close\";\nvar inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op\";\nvar open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar textord = \"textord\";\n\n// Now comes the symbol table\n\n// Relation Symbols\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\");\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\");\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\");\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\");\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\");\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\");\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\");\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\");\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\");\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\");\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\");\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\");\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\");\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\");\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\");\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\");\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\");\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\");\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\");\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\");\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\");\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\");\n\n// Punctuation\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\");\n\n// Misc Symbols\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\");\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\");\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\");\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\");\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\");\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\");\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\");\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\");\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\");\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\");\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\");\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\");\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\");\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\");\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\");\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\");\n\n// Math and Text\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\n\n// Large Delimiters\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\");\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\");\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\");\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\");\n\n// Binary Operators\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\");\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\");\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\");\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\");\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\");\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\");\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\");\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\n\n// Arrow Symbols\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\");\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\");\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\");\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\");\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\");\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\");\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\");\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\");\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\");\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\");\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\");\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\");\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\");\n\n// AMS Negated Binary Relations\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\");\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\");\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\");\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\");\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\");\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\");\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\");\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\");\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\");\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\");\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\");\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\");\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\");\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\");\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\");\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\");\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\");\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\");\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\");\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\");\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\");\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\");\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\");\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\");\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\");\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\");\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\");\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\");\n\n// AMS Negated Arrows\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\");\n\n// AMS Misc\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\");\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\");\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\");\ndefineSymbol(math, ams, textord, \"\\u006b\", \"\\\\Bbbk\");\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\");\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\");\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\");\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\");\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\");\n\n// AMS Hebrew\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\");\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\");\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\");\n\n// AMS Greek\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\");\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\");\n\n// AMS Delimiters\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\ulcorner\");\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\urcorner\");\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\llcorner\");\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\lrcorner\");\n\n// AMS Binary Relations\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\");\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\");\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\");\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\");\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\");\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\");\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\");\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\");\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\");\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\");\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\");\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\");\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\");\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\");\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\");\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\");\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\");\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\");\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\");\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\");\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\");\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\");\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\");\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\");\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\");\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\");\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\");\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\");\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\");\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\");\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\");\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\");\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\");\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\");\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\");\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\");\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\");\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\");\n\n// AMS Binary Operators\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\");\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\");\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\");\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\");\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\");\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\");\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\");\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\");\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\");\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\");\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\");\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\");\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\");\n\n// AMS Arrows\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\");\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\");\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\");\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\");\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\");\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\");\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\");\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\n\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\");\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\");\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\");\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\");\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\");\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\");\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\");\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\");\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\");\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\");\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\");\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\");\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\");\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\");\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\");\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\");\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\");\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\");\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\");\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\");\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\");\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\");\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\");\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\");\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\");\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\");\ndefineSymbol(math, main, mathord, \"o\", \"\\\\omicron\");\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\");\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\");\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\");\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\");\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\");\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\");\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\");\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\");\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\");\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\");\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\");\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\");\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\");\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\");\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\");\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\");\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\");\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\");\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\");\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\");\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\");\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\");\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"(\", \"(\");\ndefineSymbol(math, main, open, \"[\", \"[\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\");\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \")\", \")\");\ndefineSymbol(math, main, close, \"]\", \"]\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\");\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \"<\", \"<\");\ndefineSymbol(math, main, rel, \">\", \">\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\");\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\");\ndefineSymbol(math, main, rel, \"\\u2209\", \"\\\\notin\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\");\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\");\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\");\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\");\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\");\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\");\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\");\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\ne\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\neq\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\");\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\");\ndefineSymbol(math, main, spacing, null, \"\\\\!\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"~\");\ndefineSymbol(math, main, spacing, null, \"\\\\,\");\ndefineSymbol(math, main, spacing, null, \"\\\\:\");\ndefineSymbol(math, main, spacing, null, \"\\\\;\");\ndefineSymbol(math, main, spacing, null, \"\\\\enspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\qquad\");\ndefineSymbol(math, main, spacing, null, \"\\\\quad\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, main, punct, \":\", \"\\\\colon\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\");\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\");\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\");\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\");\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\");\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\");\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\");\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\");\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\");\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\");\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\");\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\");\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\");\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\");\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\");\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\");\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\");\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\");\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\");\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\");\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\");\ndefineSymbol(math, math, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, math, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, math, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, math, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, math, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, math, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, math, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, math, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, math, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, math, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, math, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, math, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, math, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, math, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, math, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\");\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\cdots\");\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\");\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\vdots\");\ndefineSymbol(math, main, accent, \"\\u00b4\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u0060\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u00af\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, mathord, \"\\u0131\", \"\\\\imath\");\ndefineSymbol(math, main, mathord, \"\\u0237\", \"\\\\jmath\");\n\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"~\");\n\n// There are lots of symbols which are the same, so we add them in afterwards.\nvar i;\nvar ch;\n\n// All of these are textords in math mode\nvar mathTextSymbols = \"0123456789/@.\\\"\";\nfor (i = 0; i < mathTextSymbols.length; i++) {\n    ch = mathTextSymbols.charAt(i);\n    defineSymbol(math, main, textord, ch, ch);\n}\n\n// All of these are textords in text mode\nvar textSymbols = \"0123456789`!@*()-=+[]'\\\";:?/.,\";\nfor (i = 0; i < textSymbols.length; i++) {\n    ch = textSymbols.charAt(i);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\n// All of these are textords in text mode, and mathords in math mode\nvar letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nfor (i = 0; i < letters.length; i++) {\n    ch = letters.charAt(i);\n    defineSymbol(math, main, mathord, ch, ch);\n    defineSymbol(text, main, textord, ch, ch);\n}\n", "/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar greekCapitals = [\n    \"\\\\Gamma\",\n    \"\\\\Delta\",\n    \"\\\\Theta\",\n    \"\\\\Lambda\",\n    \"\\\\Xi\",\n    \"\\\\Pi\",\n    \"\\\\Sigma\",\n    \"\\\\Upsilon\",\n    \"\\\\Phi\",\n    \"\\\\Psi\",\n    \"\\\\Omega\",\n];\n\nvar dotlessLetters = [\n    \"\\u0131\",   // dotless i, \\imath\n    \"\\u0237\",   // dotless j, \\jmath\n];\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n */\nvar makeSymbol = function(value, style, mode, color, classes) {\n    // Replace the value with its replaced value from symbol.js\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var metrics = fontMetrics.getCharacterMetrics(value, style);\n\n    var symbolNode;\n    if (metrics) {\n        symbolNode = new domTree.symbolNode(\n            value, metrics.height, metrics.depth, metrics.italic, metrics.skew,\n            classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\n            \"No character metrics for '\" + value + \"' in style '\" +\n                style + \"'\");\n        symbolNode = new domTree.symbolNode(value, 0, 0, 0, 0, classes);\n    }\n\n    if (color) {\n        symbolNode.style.color = color;\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\nvar mathsym = function(value, mode, color, classes) {\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text\n    if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n        return makeSymbol(value, \"Main-Regular\", mode, color, classes);\n    } else {\n        return makeSymbol(\n            value, \"AMS-Regular\", mode, color, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar mathDefault = function(value, mode, color, classes, type) {\n    if (type === \"mathord\") {\n        return mathit(value, mode, color, classes);\n    } else if (type === \"textord\") {\n        return makeSymbol(\n            value, \"Main-Regular\", mode, color, classes.concat([\"mathrm\"]));\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Makes a symbol in the italic math font.\n */\nvar mathit = function(value, mode, color, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n            // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n            // need to use Main-Italic instead\n            utils.contains(dotlessLetters, value) ||\n            utils.contains(greekCapitals, value)) {\n        return makeSymbol(\n            value, \"Main-Italic\", mode, color, classes.concat([\"mainit\"]));\n    } else {\n        return makeSymbol(\n            value, \"Math-Italic\", mode, color, classes.concat([\"mathit\"]));\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar makeOrd = function(group, options, type) {\n    var mode = group.mode;\n    var value = group.value;\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var classes = [\"mord\"];\n    var color = options.getColor();\n\n    var font = options.font;\n    if (font) {\n        if (font === \"mathit\" || utils.contains(dotlessLetters, value)) {\n            return mathit(value, mode, color, classes);\n        } else {\n            var fontName = fontMap[font].fontName;\n            if (fontMetrics.getCharacterMetrics(value, fontName)) {\n                return makeSymbol(\n                    value, fontName, mode, color, classes.concat([font]));\n            } else {\n                return mathDefault(value, mode, color, classes, type);\n            }\n        }\n    } else {\n        return mathDefault(value, mode, color, classes, type);\n    }\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    if (elem.children) {\n        for (var i = 0; i < elem.children.length; i++) {\n            if (elem.children[i].height > height) {\n                height = elem.children[i].height;\n            }\n            if (elem.children[i].depth > depth) {\n                depth = elem.children[i].depth;\n            }\n            if (elem.children[i].maxFontSize > maxFontSize) {\n                maxFontSize = elem.children[i].maxFontSize;\n            }\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and color.\n */\nvar makeSpan = function(classes, children, color) {\n    var span = new domTree.span(classes, children);\n\n    sizeElementFromChildren(span);\n\n    if (color) {\n        span.style.color = color;\n    }\n\n    return span;\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar makeFragment = function(children) {\n    var fragment = new domTree.documentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n/**\n * Makes an element placed in each of the vlist elements to ensure that each\n * element has the same max font size. To do this, we create a zero-width space\n * with the correct font size.\n */\nvar makeFontSizer = function(options, fontSize) {\n    var fontSizeInner = makeSpan([], [new domTree.symbolNode(\"\\u200b\")]);\n    fontSizeInner.style.fontSize =\n        (fontSize / options.style.sizeMultiplier) + \"em\";\n\n    var fontSizer = makeSpan(\n        [\"fontsize-ensurer\", \"reset-\" + options.size, \"size5\"],\n        [fontSizeInner]);\n\n    return fontSizer;\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * Arguments:\n *  - children: A list of child or kern nodes to be stacked on top of each other\n *              (i.e. the first element will be at the bottom, and the last at\n *              the top). Element nodes are specified as\n *                {type: \"elem\", elem: node}\n *              while kern nodes are specified as\n *                {type: \"kern\", size: size}\n *  - positionType: The method by which the vlist should be positioned. Valid\n *                  values are:\n *                   - \"individualShift\": The children list only contains elem\n *                                        nodes, and each node contains an extra\n *                                        \"shift\" value of how much it should be\n *                                        shifted (note that shifting is always\n *                                        moving downwards). positionData is\n *                                        ignored.\n *                   - \"top\": The positionData specifies the topmost point of\n *                            the vlist (note this is expected to be a height,\n *                            so positive values move up)\n *                   - \"bottom\": The positionData specifies the bottommost point\n *                               of the vlist (note this is expected to be a\n *                               depth, so positive values move down\n *                   - \"shift\": The vlist will be positioned such that its\n *                              baseline is positionData away from the baseline\n *                              of the first child. Positive values move\n *                              downwards.\n *                   - \"firstBaseline\": The vlist will be positioned such that\n *                                      its baseline is aligned with the\n *                                      baseline of the first child.\n *                                      positionData is ignored. (this is\n *                                      equivalent to \"shift\" with\n *                                      positionData=0)\n *  - positionData: Data used in different ways depending on positionType\n *  - options: An Options object\n *\n */\nvar makeVList = function(children, positionType, positionData, options) {\n    var depth;\n    var currPos;\n    var i;\n    if (positionType === \"individualShift\") {\n        var oldChildren = children;\n        children = [oldChildren[0]];\n\n        // Add in kerns to the list of children to get each element to be\n        // shifted to the correct specified shift\n        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        currPos = depth;\n        for (i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos -\n                oldChildren[i].elem.depth;\n            var size = diff -\n                (oldChildren[i - 1].elem.height +\n                 oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            children.push({type: \"kern\", size: size});\n            children.push(oldChildren[i]);\n        }\n    } else if (positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = positionData;\n        for (i = 0; i < children.length; i++) {\n            if (children[i].type === \"kern\") {\n                bottom -= children[i].size;\n            } else {\n                bottom -= children[i].elem.height + children[i].elem.depth;\n            }\n        }\n        depth = bottom;\n    } else if (positionType === \"bottom\") {\n        depth = -positionData;\n    } else if (positionType === \"shift\") {\n        depth = -children[0].elem.depth - positionData;\n    } else if (positionType === \"firstBaseline\") {\n        depth = -children[0].elem.depth;\n    } else {\n        depth = 0;\n    }\n\n    // Make the fontSizer\n    var maxFontSize = 0;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"elem\") {\n            maxFontSize = Math.max(maxFontSize, children[i].elem.maxFontSize);\n        }\n    }\n    var fontSizer = makeFontSizer(options, maxFontSize);\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    currPos = depth;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"kern\") {\n            currPos += children[i].size;\n        } else {\n            var child = children[i].elem;\n\n            var shift = -child.depth - currPos;\n            currPos += child.height + child.depth;\n\n            var childWrap = makeSpan([], [fontSizer, child]);\n            childWrap.height -= shift;\n            childWrap.depth += shift;\n            childWrap.style.top = shift + \"em\";\n\n            realChildren.push(childWrap);\n        }\n    }\n\n    // Add in an element at the end with no offset to fix the calculation of\n    // baselines in some browsers (namely IE, sometimes safari)\n    var baselineFix = makeSpan(\n        [\"baseline-fix\"], [fontSizer, new domTree.symbolNode(\"\\u200b\")]);\n    realChildren.push(baselineFix);\n\n    var vlist = makeSpan([\"vlist\"], realChildren);\n    // Fix the final height and depth, in case there were kerns at the ends\n    // since the makeSpan calculation won't take that in to account.\n    vlist.height = Math.max(currPos, vlist.height);\n    vlist.depth = Math.max(-depth, vlist.depth);\n    return vlist;\n};\n\n// A table of size -> font size for the different sizing functions\nvar sizingMultiplier = {\n    size1: 0.5,\n    size2: 0.7,\n    size3: 0.8,\n    size4: 0.9,\n    size5: 1.0,\n    size6: 1.2,\n    size7: 1.44,\n    size8: 1.73,\n    size9: 2.07,\n    size10: 2.49,\n};\n\n// A map of spacing functions to their attributes, like size and corresponding\n// CSS class\nvar spacingFunctions = {\n    \"\\\\qquad\": {\n        size: \"2em\",\n        className: \"qquad\",\n    },\n    \"\\\\quad\": {\n        size: \"1em\",\n        className: \"quad\",\n    },\n    \"\\\\enspace\": {\n        size: \"0.5em\",\n        className: \"enspace\",\n    },\n    \"\\\\;\": {\n        size: \"0.277778em\",\n        className: \"thickspace\",\n    },\n    \"\\\\:\": {\n        size: \"0.22222em\",\n        className: \"mediumspace\",\n    },\n    \"\\\\,\": {\n        size: \"0.16667em\",\n        className: \"thinspace\",\n    },\n    \"\\\\!\": {\n        size: \"-0.16667em\",\n        className: \"negativethinspace\",\n    },\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\",\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\",\n    },\n\n    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic\n    // and Math-Italic.  This is handled by a special case in makeOrd which ends\n    // up calling mathit.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\",\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\",\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\",\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\",\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\",\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\",\n    },\n};\n\nmodule.exports = {\n    fontMap: fontMap,\n    makeSymbol: makeSymbol,\n    mathsym: mathsym,\n    makeSpan: makeSpan,\n    makeFragment: makeFragment,\n    makeVList: makeVList,\n    makeOrd: makeOrd,\n    sizingMultiplier: sizingMultiplier,\n    spacingFunctions: spacingFunctions,\n};\n", "/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function(symbol, font) {\n    if (symbols.math[symbol] && symbols.math[symbol].replace) {\n        return fontMetrics.getCharacterMetrics(\n            symbols.math[symbol].replace, font);\n    } else {\n        return fontMetrics.getCharacterMetrics(\n            symbol, font);\n    }\n};\n\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\nvar mathrmSize = function(value, size, mode) {\n    return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode);\n};\n\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\nvar styleWrap = function(delim, toStyle, options) {\n    var span = makeSpan(\n        [\"style-wrap\", options.style.reset(), toStyle.cls()], [delim]);\n\n    var multiplier = toStyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    span.height *= multiplier;\n    span.depth *= multiplier;\n    span.maxFontSize = toStyle.sizeMultiplier;\n\n    return span;\n};\n\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\nvar makeSmallDelim = function(delim, style, center, options, mode) {\n    var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode);\n\n    var span = styleWrap(text, style, options);\n\n    if (center) {\n        var shift =\n            (1 - options.style.sizeMultiplier / style.sizeMultiplier) *\n            fontMetrics.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\nvar makeLargeDelim = function(delim, size, center, options, mode) {\n    var inner = mathrmSize(delim, size, mode);\n\n    var span = styleWrap(\n        makeSpan([\"delimsizing\", \"size\" + size],\n                 [inner], options.getColor()),\n        Style.TEXT, options);\n\n    if (center) {\n        var shift = (1 - options.style.sizeMultiplier) *\n            fontMetrics.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\nvar makeInner = function(symbol, font, mode) {\n    var sizeClass;\n    // Apply the correct CSS class to choose the right font.\n    if (font === \"Size1-Regular\") {\n        sizeClass = \"delim-size1\";\n    } else if (font === \"Size4-Regular\") {\n        sizeClass = \"delim-size4\";\n    }\n\n    var inner = makeSpan(\n        [\"delimsizinginner\", sizeClass],\n        [makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);\n\n    // Since this will be passed into `makeVList` in the end, wrap the element\n    // in the appropriate tag that VList uses.\n    return {type: \"elem\", elem: inner};\n};\n\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\nvar makeStackedDelim = function(delim, heightTotal, center, options, mode) {\n    // There are four parts, the top, an optional middle, a repeated part, and a\n    // bottom.\n    var top;\n    var middle;\n    var repeat;\n    var bottom;\n    top = repeat = bottom = delim;\n    middle = null;\n    // Also keep track of what font the delimiters are in\n    var font = \"Size1-Regular\";\n\n    // We set the parts and font based on the symbol. Note that we use\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n    // repeats of the arrows\n    if (delim === \"\\\\uparrow\") {\n        repeat = bottom = \"\\u23d0\";\n    } else if (delim === \"\\\\Uparrow\") {\n        repeat = bottom = \"\\u2016\";\n    } else if (delim === \"\\\\downarrow\") {\n        top = repeat = \"\\u23d0\";\n    } else if (delim === \"\\\\Downarrow\") {\n        top = repeat = \"\\u2016\";\n    } else if (delim === \"\\\\updownarrow\") {\n        top = \"\\\\uparrow\";\n        repeat = \"\\u23d0\";\n        bottom = \"\\\\downarrow\";\n    } else if (delim === \"\\\\Updownarrow\") {\n        top = \"\\\\Uparrow\";\n        repeat = \"\\u2016\";\n        bottom = \"\\\\Downarrow\";\n    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n        top = \"\\u23a1\";\n        repeat = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n        top = \"\\u23a4\";\n        repeat = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lfloor\") {\n        repeat = top = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lceil\") {\n        top = \"\\u23a1\";\n        repeat = bottom = \"\\u23a2\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rfloor\") {\n        repeat = top = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rceil\") {\n        top = \"\\u23a4\";\n        repeat = bottom = \"\\u23a5\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"(\") {\n        top = \"\\u239b\";\n        repeat = \"\\u239c\";\n        bottom = \"\\u239d\";\n        font = \"Size4-Regular\";\n    } else if (delim === \")\") {\n        top = \"\\u239e\";\n        repeat = \"\\u239f\";\n        bottom = \"\\u23a0\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n        top = \"\\u23a7\";\n        middle = \"\\u23a8\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n        top = \"\\u23ab\";\n        middle = \"\\u23ac\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lgroup\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rgroup\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lmoustache\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rmoustache\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\surd\") {\n        top = \"\\ue001\";\n        bottom = \"\\u23b7\";\n        repeat = \"\\ue000\";\n        font = \"Size4-Regular\";\n    }\n\n    // Get the metrics of the four sections\n    var topMetrics = getMetrics(top, font);\n    var topHeightTotal = topMetrics.height + topMetrics.depth;\n    var repeatMetrics = getMetrics(repeat, font);\n    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n    var bottomMetrics = getMetrics(bottom, font);\n    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n    var middleHeightTotal = 0;\n    var middleFactor = 1;\n    if (middle !== null) {\n        var middleMetrics = getMetrics(middle, font);\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n        middleFactor = 2; // repeat symmetrically above and below middle\n    }\n\n    // Calcuate the minimal height that the delimiter can have.\n    // It is at least the size of the top, bottom, and optional middle combined.\n    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\n\n    // Compute the number of copies of the repeat symbol we will need\n    var repeatCount = Math.ceil(\n        (heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\n\n    // Compute the total height of the delimiter including all the symbols\n    var realHeightTotal =\n        minHeight + repeatCount * middleFactor * repeatHeightTotal;\n\n    // The center of the delimiter is placed at the center of the axis. Note\n    // that in this context, \"center\" means that the delimiter should be\n    // centered around the axis in the current style, while normally it is\n    // centered around the axis in textstyle.\n    var axisHeight = fontMetrics.metrics.axisHeight;\n    if (center) {\n        axisHeight *= options.style.sizeMultiplier;\n    }\n    // Calculate the depth\n    var depth = realHeightTotal / 2 - axisHeight;\n\n    // Now, we start building the pieces that will go into the vlist\n\n    // Keep a list of the inner pieces\n    var inners = [];\n\n    // Add the bottom symbol\n    inners.push(makeInner(bottom, font, mode));\n\n    var i;\n    if (middle === null) {\n        // Add that many symbols\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    } else {\n        // When there is a middle bit, we need the middle part and two repeated\n        // sections\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n        inners.push(makeInner(middle, font, mode));\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    }\n\n    // Add the top symbol\n    inners.push(makeInner(top, font, mode));\n\n    // Finally, build the vlist\n    var inner = buildCommon.makeVList(inners, \"bottom\", depth, options);\n\n    return styleWrap(\n        makeSpan([\"delimsizing\", \"mult\"], [inner], options.getColor()),\n        Style.TEXT, options);\n};\n\n// There are three kinds of delimiters, delimiters that stack when they become\n// too large\nvar stackLargeDelimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"\\\\surd\",\n];\n\n// delimiters that always stack\nvar stackAlwaysDelimiters = [\n    \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\",\n    \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\",\n    \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\",\n];\n\n// and delimiters that never stack\nvar stackNeverDelimiters = [\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\",\n];\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\nvar makeSizedDelim = function(delim, size, options, mode) {\n    // < and > turn into \\langle and \\rangle in delimiters\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Sized delimiters are never centered.\n    if (utils.contains(stackLargeDelimiters, delim) ||\n        utils.contains(stackNeverDelimiters, delim)) {\n        return makeLargeDelim(delim, size, false, options, mode);\n    } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n        return makeStackedDelim(\n            delim, sizeToMaxHeight[size], false, options, mode);\n    } else {\n        throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n    }\n};\n\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4},\n];\n\n// Delimiters that always stack try the small delimiters first, then stack\nvar stackAlwaysDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"stack\"},\n];\n\n// Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\nvar stackLargeDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4},\n    {type: \"stack\"},\n];\n\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n */\nvar delimTypeToFont = function(type) {\n    if (type.type === \"small\") {\n        return \"Main-Regular\";\n    } else if (type.type === \"large\") {\n        return \"Size\" + type.size + \"-Regular\";\n    } else if (type.type === \"stack\") {\n        return \"Size4-Regular\";\n    }\n};\n\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\nvar traverseSequence = function(delim, height, sequence, options) {\n    // Here, we choose the index we should start at in the sequences. In smaller\n    // sizes (which correspond to larger numbers in style.size) we start earlier\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n    var start = Math.min(2, 3 - options.style.size);\n    for (var i = start; i < sequence.length; i++) {\n        if (sequence[i].type === \"stack\") {\n            // This is always the last delimiter, so we just break the loop now.\n            break;\n        }\n\n        var metrics = getMetrics(delim, delimTypeToFont(sequence[i]));\n        var heightDepth = metrics.height + metrics.depth;\n\n        // Small delimiters are scaled down versions of the same font, so we\n        // account for the style change size.\n\n        if (sequence[i].type === \"small\") {\n            heightDepth *= sequence[i].style.sizeMultiplier;\n        }\n\n        // Check if the delimiter at this size works for the given height.\n        if (heightDepth > height) {\n            return sequence[i];\n        }\n    }\n\n    // If we reached the end of the sequence, return the last sequence element.\n    return sequence[sequence.length - 1];\n};\n\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\nvar makeCustomSizedDelim = function(delim, height, center, options, mode) {\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Decide what sequence to use\n    var sequence;\n    if (utils.contains(stackNeverDelimiters, delim)) {\n        sequence = stackNeverDelimiterSequence;\n    } else if (utils.contains(stackLargeDelimiters, delim)) {\n        sequence = stackLargeDelimiterSequence;\n    } else {\n        sequence = stackAlwaysDelimiterSequence;\n    }\n\n    // Look through the sequence\n    var delimType = traverseSequence(delim, height, sequence, options);\n\n    // Depending on the sequence element we decided on, call the appropriate\n    // function.\n    if (delimType.type === \"small\") {\n        return makeSmallDelim(delim, delimType.style, center, options, mode);\n    } else if (delimType.type === \"large\") {\n        return makeLargeDelim(delim, delimType.size, center, options, mode);\n    } else if (delimType.type === \"stack\") {\n        return makeStackedDelim(delim, height, center, options, mode);\n    }\n};\n\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\nvar makeLeftRightDelim = function(delim, height, depth, options, mode) {\n    // We always center \\left/\\right delimiters, so the axis is always shifted\n    var axisHeight =\n        fontMetrics.metrics.axisHeight * options.style.sizeMultiplier;\n\n    // Taken from TeX source, tex.web, function make_left_right\n    var delimiterFactor = 901;\n    var delimiterExtend = 5.0 / fontMetrics.metrics.ptPerEm;\n\n    var maxDistFromAxis = Math.max(\n        height - axisHeight, depth + axisHeight);\n\n    var totalHeight = Math.max(\n        // In real TeX, calculations are done using integral values which are\n        // 65536 per pt, or 655360 per em. So, the division here truncates in\n        // TeX but doesn't here, producing different results. If we wanted to\n        // exactly match TeX's calculation, we could do\n        //   Math.floor(655360 * maxDistFromAxis / 500) *\n        //    delimiterFactor / 655360\n        // (To see the difference, compare\n        //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n        // in TeX and KaTeX)\n        maxDistFromAxis / 500 * delimiterFactor,\n        2 * maxDistFromAxis - delimiterExtend);\n\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n    // height\n    return makeCustomSizedDelim(delim, totalHeight, true, options, mode);\n};\n\nmodule.exports = {\n    sizedDelim: makeSizedDelim,\n    customSizedDelim: makeCustomSizedDelim,\n    leftRightDelim: makeLeftRightDelim,\n};\n", "/* eslint no-console:0 */\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupTypes functions are\n * called, to produce a final HTML tree.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar delimiter = require(\"./delimiter\");\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. This function handles the `prev` node correctly, and passes the\n * previous element from the list as the prev of the next element.\n */\nvar buildExpression = function(expression, options, prev) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options, prev));\n        prev = group;\n    }\n    return groups;\n};\n\n// List of types used by getTypeOfGroup,\n// see https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\nvar groupToType = {\n    mathord: \"mord\",\n    textord: \"mord\",\n    bin: \"mbin\",\n    rel: \"mrel\",\n    text: \"mord\",\n    open: \"mopen\",\n    close: \"mclose\",\n    inner: \"minner\",\n    genfrac: \"mord\",\n    array: \"mord\",\n    spacing: \"mord\",\n    punct: \"mpunct\",\n    ordgroup: \"mord\",\n    op: \"mop\",\n    katex: \"mord\",\n    overline: \"mord\",\n    underline: \"mord\",\n    rule: \"mord\",\n    leftright: \"minner\",\n    sqrt: \"mord\",\n    accent: \"mord\",\n};\n\n/**\n * Gets the final math type of an expression, given its group type. This type is\n * used to determine spacing between elements, and affects bin elements by\n * causing them to change depending on what types are around them. This type\n * must be attached to the outermost node of an element as a CSS class so that\n * spacing with its surrounding elements works correctly.\n *\n * Some elements can be mapped one-to-one from group type to math type, and\n * those are listed in the `groupToType` table.\n *\n * Others (usually elements that wrap around other elements) often have\n * recursive definitions, and thus call `getTypeOfGroup` on their inner\n * elements.\n */\nvar getTypeOfGroup = function(group) {\n    if (group == null) {\n        // Like when typesetting $^3$\n        return groupToType.mathord;\n    } else if (group.type === \"supsub\") {\n        return getTypeOfGroup(group.value.base);\n    } else if (group.type === \"llap\" || group.type === \"rlap\") {\n        return getTypeOfGroup(group.value);\n    } else if (group.type === \"color\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"sizing\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"styling\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"delimsizing\") {\n        return groupToType[group.value.delimType];\n    } else {\n        return groupToType[group.type];\n    }\n};\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar shouldHandleSupSub = function(group, options) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        return group.value.limits &&\n            (options.style.size === Style.DISPLAY.size ||\n            group.value.alwaysHandleSupSub);\n    } else if (group.type === \"accent\") {\n        return isCharacterBox(group.value.base);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function(group) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"ordgroup\") {\n        if (group.value.length === 1) {\n            return getBaseElem(group.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.value.value.length === 1) {\n            return getBaseElem(group.value.value[0]);\n        } else {\n            return group;\n        }\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar isCharacterBox = function(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" ||\n        baseElem.type === \"textord\" ||\n        baseElem.type === \"bin\" ||\n        baseElem.type === \"rel\" ||\n        baseElem.type === \"inner\" ||\n        baseElem.type === \"open\" ||\n        baseElem.type === \"close\" ||\n        baseElem.type === \"punct\";\n};\n\nvar makeNullDelimiter = function(options) {\n    return makeSpan([\n        \"sizing\", \"reset-\" + options.size, \"size5\",\n        options.style.reset(), Style.TEXT.cls(),\n        \"nulldelimiter\",\n    ]);\n};\n\n/**\n * This is a map of group types to the function used to handle that type.\n * Simpler types come at the beginning, while complicated types come afterwards.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n};\n\ngroupTypes.textord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n};\n\ngroupTypes.bin = function(group, options, prev) {\n    var className = \"mbin\";\n    // Pull out the most recent element. Do some special handling to find\n    // things at the end of a \\color group. Note that we don't use the same\n    // logic for ordgroups (which count as ords).\n    var prevAtom = prev;\n    while (prevAtom && prevAtom.type === \"color\") {\n        var atoms = prevAtom.value.value;\n        prevAtom = atoms[atoms.length - 1];\n    }\n    // See TeXbook pg. 442-446, Rules 5 and 6, and the text before Rule 19.\n    // Here, we determine whether the bin should turn into an ord. We\n    // currently only apply Rule 5.\n    if (!prev || utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"],\n            getTypeOfGroup(prevAtom))) {\n        group.type = \"textord\";\n        className = \"mord\";\n    }\n\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [className]);\n};\n\ngroupTypes.rel = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mrel\"]);\n};\n\ngroupTypes.open = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mopen\"]);\n};\n\ngroupTypes.close = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mclose\"]);\n};\n\ngroupTypes.inner = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"minner\"]);\n};\n\ngroupTypes.punct = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mpunct\"]);\n};\n\ngroupTypes.ordgroup = function(group, options, prev) {\n    return makeSpan(\n        [\"mord\", options.style.cls()],\n        buildExpression(group.value, options.reset())\n    );\n};\n\ngroupTypes.text = function(group, options, prev) {\n    return makeSpan([\"text\", \"mord\", options.style.cls()],\n        buildExpression(group.value.body, options.reset()));\n};\n\ngroupTypes.color = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withColor(group.value.color),\n        prev\n    );\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return new buildCommon.makeFragment(elements);\n};\n\ngroupTypes.supsub = function(group, options, prev) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    if (shouldHandleSupSub(group.value.base, options)) {\n        return groupTypes[group.value.base.type](group, options, prev);\n    }\n\n    var base = buildGroup(group.value.base, options.reset());\n    var supmid;\n    var submid;\n    var sup;\n    var sub;\n\n    if (group.value.sup) {\n        sup = buildGroup(group.value.sup,\n                options.withStyle(options.style.sup()));\n        supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n    }\n\n    if (group.value.sub) {\n        sub = buildGroup(group.value.sub,\n                options.withStyle(options.style.sub()));\n        submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()], [sub]);\n    }\n\n    // Rule 18a\n    var supShift;\n    var subShift;\n    if (isCharacterBox(group.value.base)) {\n        supShift = 0;\n        subShift = 0;\n    } else {\n        supShift = base.height - fontMetrics.metrics.supDrop;\n        subShift = base.depth + fontMetrics.metrics.subDrop;\n    }\n\n    // Rule 18c\n    var minSupShift;\n    if (options.style === Style.DISPLAY) {\n        minSupShift = fontMetrics.metrics.sup1;\n    } else if (options.style.cramped) {\n        minSupShift = fontMetrics.metrics.sup3;\n    } else {\n        minSupShift = fontMetrics.metrics.sup2;\n    }\n\n    // scriptspace is a font-size-independent size, so scale it\n    // appropriately\n    var multiplier = Style.TEXT.sizeMultiplier *\n            options.style.sizeMultiplier;\n    var scriptspace =\n        (0.5 / fontMetrics.metrics.ptPerEm) / multiplier + \"em\";\n\n    var supsub;\n    if (!group.value.sup) {\n        // Rule 18b\n        subShift = Math.max(\n            subShift, fontMetrics.metrics.sub1,\n            sub.height - 0.8 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid},\n        ], \"shift\", subShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n\n        // Subscripts shouldn't be shifted by the base's italic correction.\n        // Account for that by shifting the subscript back the appropriate\n        // amount. Note we only do this when the base is a single symbol.\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n    } else if (!group.value.sub) {\n        // Rule 18c, d\n        supShift = Math.max(supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: supmid},\n        ], \"shift\", -supShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n    } else {\n        supShift = Math.max(\n            supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n        subShift = Math.max(subShift, fontMetrics.metrics.sub2);\n\n        var ruleWidth = fontMetrics.metrics.defaultRuleThickness;\n\n        // Rule 18e\n        if ((supShift - sup.depth) - (sub.height - subShift) <\n                4 * ruleWidth) {\n            subShift = 4 * ruleWidth - (supShift - sup.depth) + sub.height;\n            var psi = 0.8 * fontMetrics.metrics.xHeight -\n                (supShift - sup.depth);\n            if (psi > 0) {\n                supShift += psi;\n                subShift -= psi;\n            }\n        }\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid, shift: subShift},\n            {type: \"elem\", elem: supmid, shift: -supShift},\n        ], \"individualShift\", null, options);\n\n        // See comment above about subscripts not being shifted\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n\n        supsub.children[0].style.marginRight = scriptspace;\n        supsub.children[1].style.marginRight = scriptspace;\n    }\n\n    return makeSpan([getTypeOfGroup(group.value.base)],\n        [base, supsub]);\n};\n\ngroupTypes.genfrac = function(group, options, prev) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var fstyle = options.style;\n    if (group.value.size === \"display\") {\n        fstyle = Style.DISPLAY;\n    } else if (group.value.size === \"text\") {\n        fstyle = Style.TEXT;\n    }\n\n    var nstyle = fstyle.fracNum();\n    var dstyle = fstyle.fracDen();\n\n    var numer = buildGroup(group.value.numer, options.withStyle(nstyle));\n    var numerreset = makeSpan([fstyle.reset(), nstyle.cls()], [numer]);\n\n    var denom = buildGroup(group.value.denom, options.withStyle(dstyle));\n    var denomreset = makeSpan([fstyle.reset(), dstyle.cls()], [denom]);\n\n    var ruleWidth;\n    if (group.value.hasBarLine) {\n        ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n            options.style.sizeMultiplier;\n    } else {\n        ruleWidth = 0;\n    }\n\n    // Rule 15b\n    var numShift;\n    var clearance;\n    var denomShift;\n    if (fstyle.size === Style.DISPLAY.size) {\n        numShift = fontMetrics.metrics.num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleWidth;\n        } else {\n            clearance = 7 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = fontMetrics.metrics.num2;\n            clearance = ruleWidth;\n        } else {\n            numShift = fontMetrics.metrics.num3;\n            clearance = 3 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom2;\n    }\n\n    var frac;\n    if (ruleWidth === 0) {\n        // Rule 15c\n        var candiateClearance =\n            (numShift - numer.depth) - (denom.height - denomShift);\n        if (candiateClearance < clearance) {\n            numShift += 0.5 * (clearance - candiateClearance);\n            denomShift += 0.5 * (clearance - candiateClearance);\n        }\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    } else {\n        // Rule 15d\n        var axisHeight = fontMetrics.metrics.axisHeight;\n\n        if ((numShift - numer.depth) - (axisHeight + 0.5 * ruleWidth) <\n                clearance) {\n            numShift +=\n                clearance - ((numShift - numer.depth) -\n                             (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if ((axisHeight - 0.5 * ruleWidth) - (denom.height - denomShift) <\n                clearance) {\n            denomShift +=\n                clearance - ((axisHeight - 0.5 * ruleWidth) -\n                             (denom.height - denomShift));\n        }\n\n        var mid = makeSpan(\n            [options.style.reset(), Style.TEXT.cls(), \"frac-line\"]);\n        // Manually set the height of the line because its height is\n        // created in CSS\n        mid.height = ruleWidth;\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: mid,        shift: midShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    frac.height *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n    frac.depth *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize;\n    if (fstyle.size === Style.DISPLAY.size) {\n        delimSize = fontMetrics.metrics.delim1;\n    } else {\n        delimSize = fontMetrics.metrics.getDelim2(fstyle);\n    }\n\n    var leftDelim;\n    var rightDelim;\n    if (group.value.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        leftDelim = delimiter.customSizedDelim(\n            group.value.leftDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n    if (group.value.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.customSizedDelim(\n            group.value.rightDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n\n    return makeSpan(\n        [\"mord\", options.style.reset(), fstyle.cls()],\n        [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim],\n        options.getColor());\n};\n\ngroupTypes.array = function(group, options, prev) {\n    var r;\n    var c;\n    var nr = group.value.body.length;\n    var nc = 0;\n    var body = new Array(nr);\n\n    // Horizontal spacing\n    var pt = 1 / fontMetrics.metrics.ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\arraystretch from lttab.dtx\n    // TODO(gagern): may get redefined once we have user-defined macros\n    var arraystretch = utils.deflt(group.value.arraystretch, 1);\n    var arrayskip = arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip;  // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n    for (r = 0; r < group.value.body.length; ++r) {\n        var inrow = group.value.body[r];\n        var height = arstrutHeight; // \\@array adds an \\@arstrut\n        var depth = arstrutDepth;   // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = buildGroup(inrow[c], options);\n            if (depth < elt.depth) {\n                depth = elt.depth;\n            }\n            if (height < elt.height) {\n                height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var gap = 0;\n        if (group.value.rowGaps[r]) {\n            gap = group.value.rowGaps[r].value;\n            switch (gap.unit) {\n                case \"em\":\n                    gap = gap.number;\n                    break;\n                case \"ex\":\n                    gap = gap.number * fontMetrics.metrics.emPerEx;\n                    break;\n                default:\n                    console.error(\"Can't handle unit \" + gap.unit);\n                    gap = 0;\n            }\n            if (gap > 0) { // \\@argarraycr\n                gap += arstrutDepth;\n                if (depth < gap) {\n                    depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n\n        outrow.height = height;\n        outrow.depth = depth;\n        totalHeight += height;\n        outrow.pos = totalHeight;\n        totalHeight += depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n    }\n\n    var offset = totalHeight / 2 + fontMetrics.metrics.axisHeight;\n    var colDescriptions = group.value.cols || [];\n    var cols = [];\n    var colSep;\n    var colDescrNum;\n    for (c = 0, colDescrNum = 0;\n         // Continue while either there are more columns or more column\n         // descriptions, so trailing separators don't get lost.\n         c < nc || colDescrNum < colDescriptions.length;\n         ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width =\n                    fontMetrics.metrics.doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var separator = makeSpan(\n                    [\"vertical-separator\"],\n                    []);\n                separator.style.height = totalHeight + \"em\";\n                separator.style.verticalAlign =\n                    -(totalHeight - offset) + \"em\";\n\n                cols.push(separator);\n            } else {\n                throw new ParseError(\n                    \"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth;\n        if (c > 0 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({type: \"elem\", elem: elem, shift: shift});\n        }\n\n        col = buildCommon.makeVList(col, \"individualShift\", null, options);\n        col = makeSpan(\n            [\"col-align-\" + (colDescr.align || \"c\")],\n            [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = makeSpan([\"mtable\"], cols);\n    return makeSpan([\"mord\"], [body], options.getColor());\n};\n\ngroupTypes.spacing = function(group, options, prev) {\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        // Spaces are generated by adding an actual space. Each of these\n        // things has an entry in the symbols table, so these will be turned\n        // into appropriate outputs.\n        return makeSpan(\n            [\"mord\", \"mspace\"],\n            [buildCommon.mathsym(group.value, group.mode)]\n        );\n    } else {\n        // Other kinds of spaces are of arbitrary width. We use CSS to\n        // generate these.\n        return makeSpan(\n            [\"mord\", \"mspace\",\n             buildCommon.spacingFunctions[group.value].className]);\n    }\n};\n\ngroupTypes.llap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"llap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.rlap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"rlap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.op = function(group, options, prev) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup;\n    var subGroup;\n    var hasLimits = false;\n    if (group.type === \"supsub\" ) {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = group.value.sup;\n        subGroup = group.value.sub;\n        group = group.value.base;\n        hasLimits = true;\n    }\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\n        \"\\\\smallint\",\n    ];\n\n    var large = false;\n    if (options.style.size === Style.DISPLAY.size &&\n        group.value.symbol &&\n        !utils.contains(noSuccessor, group.value.body)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base;\n    var baseShift = 0;\n    var slant = 0;\n    if (group.value.symbol) {\n        // If this is a symbol, create the symbol.\n        var style = large ? \"Size2-Regular\" : \"Size1-Regular\";\n        base = buildCommon.makeSymbol(\n            group.value.body, style, \"math\", options.getColor(),\n            [\"op-symbol\", large ? \"large-op\" : \"small-op\", \"mop\"]);\n\n        // Shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 -\n            fontMetrics.metrics.axisHeight *\n            options.style.sizeMultiplier;\n\n        // The slant of the symbol is just its italic correction.\n        slant = base.italic;\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.value.body.length; i++) {\n            output.push(buildCommon.mathsym(group.value.body[i], group.mode));\n        }\n        base = makeSpan([\"mop\"], output, options.getColor());\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = makeSpan([], [base]);\n\n        var supmid;\n        var supKern;\n        var submid;\n        var subKern;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            var sup = buildGroup(\n                supGroup, options.withStyle(options.style.sup()));\n            supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n\n            supKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing1,\n                fontMetrics.metrics.bigOpSpacing3 - sup.depth);\n        }\n\n        if (subGroup) {\n            var sub = buildGroup(\n                subGroup, options.withStyle(options.style.sub()));\n            submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()],\n                [sub]);\n\n            subKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing2,\n                fontMetrics.metrics.bigOpSpacing4 - sub.height);\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup;\n        var top;\n        var bottom;\n        if (!supGroup) {\n            top = base.height - baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n            ], \"top\", top, options);\n\n            // Here, we shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n        } else if (!subGroup) {\n            bottom = base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[1].style.marginLeft = slant + \"em\";\n        } else if (!supGroup && !subGroup) {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        } else {\n            bottom = fontMetrics.metrics.bigOpSpacing5 +\n                submid.height + submid.depth +\n                subKern +\n                base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n            finalGroup.children[2].style.marginLeft = slant + \"em\";\n        }\n\n        return makeSpan([\"mop\", \"op-limits\"], [finalGroup]);\n    } else {\n        if (group.value.symbol) {\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\ngroupTypes.katex = function(group, options, prev) {\n    // The KaTeX logo. The offsets for the K and a were chosen to look\n    // good, but the offsets for the T, E, and X were taken from the\n    // definition of \\TeX in TeX (see TeXbook pg. 356)\n    var k = makeSpan(\n        [\"k\"], [buildCommon.mathsym(\"K\", group.mode)]);\n    var a = makeSpan(\n        [\"a\"], [buildCommon.mathsym(\"A\", group.mode)]);\n\n    a.height = (a.height + 0.2) * 0.75;\n    a.depth = (a.height - 0.2) * 0.75;\n\n    var t = makeSpan(\n        [\"t\"], [buildCommon.mathsym(\"T\", group.mode)]);\n    var e = makeSpan(\n        [\"e\"], [buildCommon.mathsym(\"E\", group.mode)]);\n\n    e.height = (e.height - 0.2155);\n    e.depth = (e.depth + 0.2155);\n\n    var x = makeSpan(\n        [\"x\"], [buildCommon.mathsym(\"X\", group.mode)]);\n\n    return makeSpan(\n        [\"katex-logo\", \"mord\"], [k, a, t, e, x], options.getColor());\n};\n\ngroupTypes.overline = function(group, options, prev) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"overline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"elem\", elem: innerGroup},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: ruleWidth},\n    ], \"firstBaseline\", null, options);\n\n    return makeSpan([\"overline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.underline = function(group, options, prev) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n\n    // Build the inner group.\n    var innerGroup = buildGroup(group.value.body, options);\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"underline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"kern\", size: ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: innerGroup},\n    ], \"top\", innerGroup.height, options);\n\n    return makeSpan([\"underline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.sqrt = function(group, options, prev) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"sqrt-line\"], [],\n        options.getColor());\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    var phi = ruleWidth;\n    if (options.style.id < Style.TEXT.id) {\n        phi = fontMetrics.metrics.xHeight;\n    }\n\n    // Calculate the clearance between the body and line\n    var lineClearance = ruleWidth + phi / 4;\n\n    var innerHeight =\n        (inner.height + inner.depth) * options.style.sizeMultiplier;\n    var minDelimiterHeight = innerHeight + lineClearance + ruleWidth;\n\n    // Create a \\surd delimiter of the required minimum size\n    var delim = makeSpan([\"sqrt-sign\"], [\n        delimiter.customSizedDelim(\"\\\\surd\", minDelimiterHeight,\n                                   false, options, group.mode)],\n                         options.getColor());\n\n    var delimDepth = (delim.height + delim.depth) - ruleWidth;\n\n    // Adjust the clearance based on the delimiter size\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n        lineClearance =\n            (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    }\n\n    // Shift the delimiter so that its top lines up with the top of the line\n    var delimShift = -(inner.height + lineClearance + ruleWidth) + delim.height;\n    delim.style.top = delimShift + \"em\";\n    delim.height -= delimShift;\n    delim.depth += delimShift;\n\n    // We add a special case here, because even when `inner` is empty, we\n    // still get a line. So, we use a simple heuristic to decide if we\n    // should omit the body entirely. (note this doesn't work for something\n    // like `\\sqrt{\\rlap{x}}`, but if someone is doing that they deserve for\n    // it not to work.\n    var body;\n    if (inner.height === 0 && inner.depth === 0) {\n        body = makeSpan();\n    } else {\n        body = buildCommon.makeVList([\n            {type: \"elem\", elem: inner},\n            {type: \"kern\", size: lineClearance},\n            {type: \"elem\", elem: line},\n            {type: \"kern\", size: ruleWidth},\n        ], \"firstBaseline\", null, options);\n    }\n\n    if (!group.value.index) {\n        return makeSpan([\"sqrt\", \"mord\"], [delim, body]);\n    } else {\n        // Handle the optional root index\n\n        // The index is always in scriptscript style\n        var root = buildGroup(\n            group.value.index,\n            options.withStyle(Style.SCRIPTSCRIPT));\n        var rootWrap = makeSpan(\n            [options.style.reset(), Style.SCRIPTSCRIPT.cls()],\n            [root]);\n\n        // Figure out the height and depth of the inner part\n        var innerRootHeight = Math.max(delim.height, body.height);\n        var innerRootDepth = Math.max(delim.depth, body.depth);\n\n        // The amount the index is shifted by. This is taken from the TeX\n        // source, in the definition of `\\r@@t`.\n        var toShift = 0.6 * (innerRootHeight - innerRootDepth);\n\n        // Build a VList with the superscript shifted up correctly\n        var rootVList = buildCommon.makeVList(\n            [{type: \"elem\", elem: rootWrap}],\n            \"shift\", -toShift, options);\n        // Add a class surrounding it so we can add on the appropriate\n        // kerning\n        var rootVListWrap = makeSpan([\"root\"], [rootVList]);\n\n        return makeSpan([\"sqrt\", \"mord\"], [rootVListWrap, delim, body]);\n    }\n};\n\ngroupTypes.sizing = function(group, options, prev) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var inner = buildExpression(group.value.value,\n            options.withSize(group.value.size), prev);\n\n    var span = makeSpan([\"mord\"],\n        [makeSpan([\"sizing\", \"reset-\" + options.size, group.value.size,\n                   options.style.cls()],\n                  inner)]);\n\n    // Calculate the correct maxFontSize manually\n    var fontSize = buildCommon.sizingMultiplier[group.value.size];\n    span.maxFontSize = fontSize * options.style.sizeMultiplier;\n\n    return span;\n};\n\ngroupTypes.styling = function(group, options, prev) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n\n    // Figure out what style we're changing to.\n    var style = {\n        \"display\": Style.DISPLAY,\n        \"text\": Style.TEXT,\n        \"script\": Style.SCRIPT,\n        \"scriptscript\": Style.SCRIPTSCRIPT,\n    };\n\n    var newStyle = style[group.value.style];\n\n    // Build the inner expression in the new style.\n    var inner = buildExpression(\n        group.value.value, options.withStyle(newStyle), prev);\n\n    return makeSpan([options.style.reset(), newStyle.cls()], inner);\n};\n\ngroupTypes.font = function(group, options, prev) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font), prev);\n};\n\ngroupTypes.delimsizing = function(group, options, prev) {\n    var delim = group.value.value;\n\n    if (delim === \".\") {\n        // Empty delimiters still count as elements, even though they don't\n        // show anything.\n        return makeSpan([groupToType[group.value.delimType]]);\n    }\n\n    // Use delimiter.sizedDelim to generate the delimiter.\n    return makeSpan(\n        [groupToType[group.value.delimType]],\n        [delimiter.sizedDelim(\n            delim, group.value.size, options, group.mode)]);\n};\n\ngroupTypes.leftright = function(group, options, prev) {\n    // Build the inner expression\n    var inner = buildExpression(group.value.body, options.reset());\n\n    var innerHeight = 0;\n    var innerDepth = 0;\n\n    // Calculate its height and depth\n    for (var i = 0; i < inner.length; i++) {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n    }\n\n    // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n    innerHeight *= options.style.sizeMultiplier;\n    innerDepth *= options.style.sizeMultiplier;\n\n    var leftDelim;\n    if (group.value.left === \".\") {\n        // Empty delimiters in \\left and \\right make null delimiter spaces.\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        // Otherwise, use leftRightDelim to generate the correct sized\n        // delimiter.\n        leftDelim = delimiter.leftRightDelim(\n            group.value.left, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the beginning of the expression\n    inner.unshift(leftDelim);\n\n    var rightDelim;\n    // Same for the right delimiter\n    if (group.value.right === \".\") {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.leftRightDelim(\n            group.value.right, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the end of the expression.\n    inner.push(rightDelim);\n\n    return makeSpan(\n        [\"minner\", options.style.cls()], inner, options.getColor());\n};\n\ngroupTypes.rule = function(group, options, prev) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options.getColor());\n\n    // Calculate the shift, width, and height of the rule, and account for units\n    var shift = 0;\n    if (group.value.shift) {\n        shift = group.value.shift.number;\n        if (group.value.shift.unit === \"ex\") {\n            shift *= fontMetrics.metrics.xHeight;\n        }\n    }\n\n    var width = group.value.width.number;\n    if (group.value.width.unit === \"ex\") {\n        width *= fontMetrics.metrics.xHeight;\n    }\n\n    var height = group.value.height.number;\n    if (group.value.height.unit === \"ex\") {\n        height *= fontMetrics.metrics.xHeight;\n    }\n\n    // The sizes of rules are absolute, so make it larger if we are in a\n    // smaller style.\n    shift /= options.style.sizeMultiplier;\n    width /= options.style.sizeMultiplier;\n    height /= options.style.sizeMultiplier;\n\n    // Style the rule to the right size\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\";\n\n    // Record the height and width\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift;\n\n    return rule;\n};\n\ngroupTypes.accent = function(group, options, prev) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = group.value.base;\n\n    var supsubGroup;\n    if (group.type === \"supsub\") {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The supsub group is the group that was passed in\n        var supsub = group;\n        // The real accent group is the base of the supsub group\n        group = supsub.value.base;\n        // The character box is the base of the accent group\n        base = group.value.base;\n        // Stick the character box into the base of the supsub group\n        supsub.value.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supsubGroup = buildGroup(\n            supsub, options.reset(), prev);\n    }\n\n    // Build the base group\n    var body = buildGroup(\n        base, options.withStyle(options.style.cramp()));\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew;\n    if (isCharacterBox(base)) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildGroup(\n            baseChar, options.withStyle(options.style.cramp()));\n        // Finally, we pull the skew off of the symbol.\n        skew = baseGroup.skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    } else {\n        skew = 0;\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(body.height, fontMetrics.metrics.xHeight);\n\n    // Build the accent\n    var accent = buildCommon.makeSymbol(\n        group.value.accent, \"Main-Regular\", \"math\", options.getColor());\n    // Remove the italic correction of the accent, because it only serves to\n    // shift the accent over to a place we don't want.\n    accent.italic = 0;\n\n    // The \\vec character that the fonts use is a combining character, and\n    // thus shows up much too far to the left. To account for this, we add a\n    // specific class which shifts the accent over to where we want it.\n    // TODO(emily): Fix this in a better way, like by changing the font\n    var vecClass = group.value.accent === \"\\\\vec\" ? \"accent-vec\" : null;\n\n    var accentBody = makeSpan([\"accent-body\", vecClass], [\n        makeSpan([], [accent])]);\n\n    accentBody = buildCommon.makeVList([\n        {type: \"elem\", elem: body},\n        {type: \"kern\", size: -clearance},\n        {type: \"elem\", elem: accentBody},\n    ], \"firstBaseline\", null, options);\n\n    // Shift the accent over by the skew. Note we shift by twice the skew\n    // because we are centering the accent, so by adding 2*skew to the left,\n    // we shift it to the right by 1*skew.\n    accentBody.children[1].style.marginLeft = 2 * skew + \"em\";\n\n    var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody]);\n\n    if (supsubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supsubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supsubGroup.classes[0] = \"mord\";\n\n        return supsubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\ngroupTypes.phantom = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withPhantom(),\n        prev\n    );\n\n    // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n    return new buildCommon.makeFragment(elements);\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildGroup = function(group, options, prev) {\n    if (!group) {\n        return makeSpan();\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var groupNode = groupTypes[group.type](group, options, prev);\n        var multiplier;\n\n        // If the style changed between the parent and the current group,\n        // account for the size difference\n        if (options.style !== options.parentStyle) {\n            multiplier = options.style.sizeMultiplier /\n                    options.parentStyle.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (options.size !== options.parentSize) {\n            multiplier = buildCommon.sizingMultiplier[options.size] /\n                    buildCommon.sizingMultiplier[options.parentSize];\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nvar buildHTML = function(tree, options) {\n    // buildExpression is destructive, so we need to make a clone\n    // of the incoming tree so that it isn't accidentally changed\n    tree = JSON.parse(JSON.stringify(tree));\n\n    // Build the expression contained in the tree\n    var expression = buildExpression(tree, options);\n    var body = makeSpan([\"base\", options.style.cls()], expression);\n\n    // Add struts, which ensure that the top of the HTML element falls at the\n    // height of the expression, and the bottom of the HTML element falls at the\n    // depth of the expression.\n    var topStrut = makeSpan([\"strut\"]);\n    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);\n\n    topStrut.style.height = body.height + \"em\";\n    bottomStrut.style.height = (body.height + body.depth) + \"em\";\n    // We'd like to use `vertical-align: top` but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead staying in the\n    // normal place) so we use an absolute value for vertical-align instead\n    bottomStrut.style.verticalAlign = -body.depth + \"em\";\n\n    // Wrap the struts and body together\n    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);\n\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    return htmlNode;\n};\n\nmodule.exports = buildHTML;\n", "/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\nvar utils = require(\"./utils\");\n\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\nfunction MathNode(type, children) {\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n}\n\n/**\n * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n * semantic content, so this is used heavily.\n */\nMathNode.prototype.setAttribute = function(name, value) {\n    this.attributes[name] = value;\n};\n\n/**\n * Converts the math node into a MathML-namespaced DOM element.\n */\nMathNode.prototype.toNode = function() {\n    var node = document.createElementNS(\n        \"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            node.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n        node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n};\n\n/**\n * Converts the math node into an HTML markup string.\n */\nMathNode.prototype.toMarkup = function() {\n    var markup = \"<\" + this.type;\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n\n    return markup;\n};\n\n/**\n * This node represents a piece of text.\n */\nfunction TextNode(text) {\n    this.text = text;\n}\n\n/**\n * Converts the text node into a DOM text node.\n */\nTextNode.prototype.toNode = function() {\n    return document.createTextNode(this.text);\n};\n\n/**\n * Converts the text node into HTML markup (which is just the text itself).\n */\nTextNode.prototype.toMarkup = function() {\n    return utils.escape(this.text);\n};\n\nmodule.exports = {\n    MathNode: MathNode,\n    TextNode: TextNode,\n};\n", "/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar mathMLTree = require(\"./mathMLTree\");\nvar ParseError = require(\"./ParseError\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\nvar fontMap = buildCommon.fontMap;\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar makeText = function(text, mode) {\n    if (symbols[mode][text] && symbols[mode][text].replace) {\n        text = symbols[mode][text].replace;\n    }\n\n    return new mathMLTree.TextNode(text);\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nvar getVariant = function(group, options) {\n    var font = options.font;\n    if (!font) {\n        return null;\n    }\n\n    var mode = group.mode;\n    if (font === \"mathit\") {\n        return \"italic\";\n    }\n\n    var value = group.value;\n    if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], value)) {\n        return null;\n    }\n\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var fontName = fontMap[font].fontName;\n    if (fontMetrics.getCharacterMetrics(value, fontName)) {\n        return fontMap[options.font].variant;\n    }\n\n    return null;\n};\n\n/**\n * Functions for handling the different types of groups found in the parse\n * tree. Each function should take a parse group and return a MathML node.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mi\",\n        [makeText(group.value, group.mode)]);\n\n    var variant = getVariant(group, options);\n    if (variant) {\n        node.setAttribute(\"mathvariant\", variant);\n    }\n    return node;\n};\n\ngroupTypes.textord = function(group, options) {\n    var text = makeText(group.value, group.mode);\n\n    var variant = getVariant(group, options) || \"normal\";\n\n    var node;\n    if (/[0-9]/.test(group.value)) {\n        // TODO(kevinb) merge adjacent <mn> nodes\n        // do it as a post processing step\n        node = new mathMLTree.MathNode(\"mn\", [text]);\n        if (options.font) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n    } else {\n        node = new mathMLTree.MathNode(\"mi\", [text]);\n        node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n};\n\ngroupTypes.bin = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.rel = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.open = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.close = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.inner = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.punct = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    node.setAttribute(\"separator\", \"true\");\n\n    return node;\n};\n\ngroupTypes.ordgroup = function(group, options) {\n    var inner = buildExpression(group.value, options);\n\n    var node = new mathMLTree.MathNode(\"mrow\", inner);\n\n    return node;\n};\n\ngroupTypes.text = function(group, options) {\n    var inner = buildExpression(group.value.body, options);\n\n    var node = new mathMLTree.MathNode(\"mtext\", inner);\n\n    return node;\n};\n\ngroupTypes.color = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    node.setAttribute(\"mathcolor\", group.value.color);\n\n    return node;\n};\n\ngroupTypes.supsub = function(group, options) {\n    var children = [buildGroup(group.value.base, options)];\n\n    if (group.value.sub) {\n        children.push(buildGroup(group.value.sub, options));\n    }\n\n    if (group.value.sup) {\n        children.push(buildGroup(group.value.sup, options));\n    }\n\n    var nodeType;\n    if (!group.value.sub) {\n        nodeType = \"msup\";\n    } else if (!group.value.sup) {\n        nodeType = \"msub\";\n    } else {\n        nodeType = \"msubsup\";\n    }\n\n    var node = new mathMLTree.MathNode(nodeType, children);\n\n    return node;\n};\n\ngroupTypes.genfrac = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mfrac\",\n        [buildGroup(group.value.numer, options),\n         buildGroup(group.value.denom, options)]);\n\n    if (!group.value.hasBarLine) {\n        node.setAttribute(\"linethickness\", \"0px\");\n    }\n\n    if (group.value.leftDelim != null || group.value.rightDelim != null) {\n        var withDelims = [];\n\n        if (group.value.leftDelim != null) {\n            var leftOp = new mathMLTree.MathNode(\n                \"mo\", [new mathMLTree.TextNode(group.value.leftDelim)]);\n\n            leftOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(leftOp);\n        }\n\n        withDelims.push(node);\n\n        if (group.value.rightDelim != null) {\n            var rightOp = new mathMLTree.MathNode(\n                \"mo\", [new mathMLTree.TextNode(group.value.rightDelim)]);\n\n            rightOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(rightOp);\n        }\n\n        var outerNode = new mathMLTree.MathNode(\"mrow\", withDelims);\n\n        return outerNode;\n    }\n\n    return node;\n};\n\ngroupTypes.array = function(group, options) {\n    return new mathMLTree.MathNode(\n        \"mtable\", group.value.body.map(function(row) {\n            return new mathMLTree.MathNode(\n                \"mtr\", row.map(function(cell) {\n                    return new mathMLTree.MathNode(\n                        \"mtd\", [buildGroup(cell, options)]);\n                }));\n        }));\n};\n\ngroupTypes.sqrt = function(group, options) {\n    var node;\n    if (group.value.index) {\n        node = new mathMLTree.MathNode(\n            \"mroot\", [\n                buildGroup(group.value.body, options),\n                buildGroup(group.value.index, options),\n            ]);\n    } else {\n        node = new mathMLTree.MathNode(\n            \"msqrt\", [buildGroup(group.value.body, options)]);\n    }\n\n    return node;\n};\n\ngroupTypes.leftright = function(group, options) {\n    var inner = buildExpression(group.value.body, options);\n\n    if (group.value.left !== \".\") {\n        var leftNode = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.left, group.mode)]);\n\n        leftNode.setAttribute(\"fence\", \"true\");\n\n        inner.unshift(leftNode);\n    }\n\n    if (group.value.right !== \".\") {\n        var rightNode = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.right, group.mode)]);\n\n        rightNode.setAttribute(\"fence\", \"true\");\n\n        inner.push(rightNode);\n    }\n\n    var outerNode = new mathMLTree.MathNode(\"mrow\", inner);\n\n    return outerNode;\n};\n\ngroupTypes.accent = function(group, options) {\n    var accentNode = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value.accent, group.mode)]);\n\n    var node = new mathMLTree.MathNode(\n        \"mover\",\n        [buildGroup(group.value.base, options),\n         accentNode]);\n\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.spacing = function(group) {\n    var node;\n\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        node = new mathMLTree.MathNode(\n            \"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else {\n        node = new mathMLTree.MathNode(\"mspace\");\n\n        node.setAttribute(\n            \"width\", buildCommon.spacingFunctions[group.value].size);\n    }\n\n    return node;\n};\n\ngroupTypes.op = function(group) {\n    var node;\n\n    // TODO(emily): handle big operators using the `largeop` attribute\n\n    if (group.value.symbol) {\n        // This is a symbol. Just add the symbol.\n        node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.body, group.mode)]);\n    } else {\n        // This is a text operator. Add all of the characters from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup.\n        node = new mathMLTree.MathNode(\n            \"mi\", [new mathMLTree.TextNode(group.value.body.slice(1))]);\n    }\n\n    return node;\n};\n\ngroupTypes.katex = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mtext\", [new mathMLTree.TextNode(\"KaTeX\")]);\n\n    return node;\n};\n\ngroupTypes.font = function(group, options) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font));\n};\n\ngroupTypes.delimsizing = function(group) {\n    var children = [];\n\n    if (group.value.value !== \".\") {\n        children.push(makeText(group.value.value, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.value.delimType === \"open\" ||\n        group.value.delimType === \"close\") {\n        // Only some of the delimsizing functions act as fences, and they\n        // return \"open\" or \"close\" delimTypes.\n        node.setAttribute(\"fence\", \"true\");\n    } else {\n        // Explicitly disable fencing if it's not a fence, to override the\n        // defaults.\n        node.setAttribute(\"fence\", \"false\");\n    }\n\n    return node;\n};\n\ngroupTypes.styling = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    var styleAttributes = {\n        \"display\": [\"0\", \"true\"],\n        \"text\": [\"0\", \"false\"],\n        \"script\": [\"1\", \"false\"],\n        \"scriptscript\": [\"2\", \"false\"],\n    };\n\n    var attr = styleAttributes[group.value.style];\n\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n\n    return node;\n};\n\ngroupTypes.sizing = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n    node.setAttribute(\n        \"mathsize\", buildCommon.sizingMultiplier[group.value.size] + \"em\");\n\n    return node;\n};\n\ngroupTypes.overline = function(group, options) {\n    var operator = new mathMLTree.MathNode(\n        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new mathMLTree.MathNode(\n        \"mover\",\n        [buildGroup(group.value.body, options),\n         operator]);\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.underline = function(group, options) {\n    var operator = new mathMLTree.MathNode(\n        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new mathMLTree.MathNode(\n        \"munder\",\n        [buildGroup(group.value.body, options),\n         operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n\n    return node;\n};\n\ngroupTypes.rule = function(group) {\n    // TODO(emily): Figure out if there's an actual way to draw black boxes\n    // in MathML.\n    var node = new mathMLTree.MathNode(\"mrow\");\n\n    return node;\n};\n\ngroupTypes.llap = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mpadded\", [buildGroup(group.value.body, options)]);\n\n    node.setAttribute(\"lspace\", \"-1width\");\n    node.setAttribute(\"width\", \"0px\");\n\n    return node;\n};\n\ngroupTypes.rlap = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mpadded\", [buildGroup(group.value.body, options)]);\n\n    node.setAttribute(\"width\", \"0px\");\n\n    return node;\n};\n\ngroupTypes.phantom = function(group, options, prev) {\n    var inner = buildExpression(group.value.value, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes. A little simpler than the HTML version because we don't do any\n * previous-node handling.\n */\nvar buildExpression = function(expression, options) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options));\n    }\n    return groups;\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupTypes function\n * on it to produce a MathML node.\n */\nvar buildGroup = function(group, options) {\n    if (!group) {\n        return new mathMLTree.MathNode(\"mrow\");\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        return groupTypes[group.type](group, options);\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\nvar buildMathML = function(tree, texExpression, options) {\n    var expression = buildExpression(tree, options);\n\n    // Wrap up the expression in an mrow so it is presented in the semantics\n    // tag correctly.\n    var wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n\n    // Build a TeX annotation of the source\n    var annotation = new mathMLTree.MathNode(\n        \"annotation\", [new mathMLTree.TextNode(texExpression)]);\n\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n\n    var semantics = new mathMLTree.MathNode(\n        \"semantics\", [wrapper, annotation]);\n\n    var math = new mathMLTree.MathNode(\"math\", [semantics]);\n\n    // You can't style <math> nodes, so we wrap the node in a span.\n    return makeSpan([\"katex-mathml\"], [math]);\n};\n\nmodule.exports = buildMathML;\n", "/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\n/**\n * This is the main options class. It contains the style, size, color, and font\n * of the current parse level. It also contains the style and size of the parent\n * parse level, so size changes can be handled efficiently.\n *\n * Each of the `.with*` and `.reset` functions passes its current style and size\n * as the parentStyle and parentSize of the new options class, so parent\n * handling is taken care of automatically.\n */\nfunction Options(data) {\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size;\n    this.phantom = data.phantom;\n    this.font = data.font;\n\n    if (data.parentStyle === undefined) {\n        this.parentStyle = data.style;\n    } else {\n        this.parentStyle = data.parentStyle;\n    }\n\n    if (data.parentSize === undefined) {\n        this.parentSize = data.size;\n    } else {\n        this.parentSize = data.parentSize;\n    }\n}\n\n/**\n * Returns a new options object with the same properties as \"this\".  Properties\n * from \"extension\" will be copied to the new options object.\n */\nOptions.prototype.extend = function(extension) {\n    var data = {\n        style: this.style,\n        size: this.size,\n        color: this.color,\n        parentStyle: this.style,\n        parentSize: this.size,\n        phantom: this.phantom,\n        font: this.font,\n    };\n\n    for (var key in extension) {\n        if (extension.hasOwnProperty(key)) {\n            data[key] = extension[key];\n        }\n    }\n\n    return new Options(data);\n};\n\n/**\n * Create a new options object with the given style.\n */\nOptions.prototype.withStyle = function(style) {\n    return this.extend({\n        style: style,\n    });\n};\n\n/**\n * Create a new options object with the given size.\n */\nOptions.prototype.withSize = function(size) {\n    return this.extend({\n        size: size,\n    });\n};\n\n/**\n * Create a new options object with the given color.\n */\nOptions.prototype.withColor = function(color) {\n    return this.extend({\n        color: color,\n    });\n};\n\n/**\n * Create a new options object with \"phantom\" set to true.\n */\nOptions.prototype.withPhantom = function() {\n    return this.extend({\n        phantom: true,\n    });\n};\n\n/**\n * Create a new options objects with the give font.\n */\nOptions.prototype.withFont = function(font) {\n    return this.extend({\n        font: font,\n    });\n};\n\n/**\n * Create a new options object with the same style, size, and color. This is\n * used so that parent style and size changes are handled correctly.\n */\nOptions.prototype.reset = function() {\n    return this.extend({});\n};\n\n/**\n * A map of color names to CSS colors.\n * TODO(emily): Remove this when we have real macros\n */\nvar colorMap = {\n    \"katex-blue\": \"#6495ed\",\n    \"katex-orange\": \"#ffa500\",\n    \"katex-pink\": \"#ff00af\",\n    \"katex-red\": \"#df0030\",\n    \"katex-green\": \"#28ae7b\",\n    \"katex-gray\": \"gray\",\n    \"katex-purple\": \"#9d38bd\",\n    \"katex-blueA\": \"#c7e9f1\",\n    \"katex-blueB\": \"#9cdceb\",\n    \"katex-blueC\": \"#58c4dd\",\n    \"katex-blueD\": \"#29abca\",\n    \"katex-blueE\": \"#1c758a\",\n    \"katex-tealA\": \"#acead7\",\n    \"katex-tealB\": \"#76ddc0\",\n    \"katex-tealC\": \"#5cd0b3\",\n    \"katex-tealD\": \"#55c1a7\",\n    \"katex-tealE\": \"#49a88f\",\n    \"katex-greenA\": \"#c9e2ae\",\n    \"katex-greenB\": \"#a6cf8c\",\n    \"katex-greenC\": \"#83c167\",\n    \"katex-greenD\": \"#77b05d\",\n    \"katex-greenE\": \"#699c52\",\n    \"katex-goldA\": \"#f7c797\",\n    \"katex-goldB\": \"#f9b775\",\n    \"katex-goldC\": \"#f0ac5f\",\n    \"katex-goldD\": \"#e1a158\",\n    \"katex-goldE\": \"#c78d46\",\n    \"katex-redA\": \"#f7a1a3\",\n    \"katex-redB\": \"#ff8080\",\n    \"katex-redC\": \"#fc6255\",\n    \"katex-redD\": \"#e65a4c\",\n    \"katex-redE\": \"#cf5044\",\n    \"katex-maroonA\": \"#ecabc1\",\n    \"katex-maroonB\": \"#ec92ab\",\n    \"katex-maroonC\": \"#c55f73\",\n    \"katex-maroonD\": \"#a24d61\",\n    \"katex-maroonE\": \"#94424f\",\n    \"katex-purpleA\": \"#caa3e8\",\n    \"katex-purpleB\": \"#b189c6\",\n    \"katex-purpleC\": \"#9a72ac\",\n    \"katex-purpleD\": \"#715582\",\n    \"katex-purpleE\": \"#644172\",\n    \"katex-mintA\": \"#f5f9e8\",\n    \"katex-mintB\": \"#edf2df\",\n    \"katex-mintC\": \"#e0e5cc\",\n    \"katex-grayA\": \"#fdfdfd\",\n    \"katex-grayB\": \"#f7f7f7\",\n    \"katex-grayC\": \"#eeeeee\",\n    \"katex-grayD\": \"#dddddd\",\n    \"katex-grayE\": \"#cccccc\",\n    \"katex-grayF\": \"#aaaaaa\",\n    \"katex-grayG\": \"#999999\",\n    \"katex-grayH\": \"#555555\",\n    \"katex-grayI\": \"#333333\",\n    \"katex-kaBlue\": \"#314453\",\n    \"katex-kaGreen\": \"#639b24\",\n};\n\n/**\n * Gets the CSS color of the current options object, accounting for the\n * `colorMap`.\n */\nOptions.prototype.getColor = function() {\n    if (this.phantom) {\n        return \"transparent\";\n    } else {\n        return colorMap[this.color] || this.color;\n    }\n};\n\nmodule.exports = Options;\n", "var buildHTML = require(\"./buildHTML\");\nvar buildMathML = require(\"./buildMathML\");\nvar buildCommon = require(\"./buildCommon\");\nvar Options = require(\"./Options\");\nvar Settings = require(\"./Settings\");\nvar Style = require(\"./Style\");\n\nvar makeSpan = buildCommon.makeSpan;\n\nvar buildTree = function(tree, expression, settings) {\n    settings = settings || new Settings({});\n\n    var startStyle = Style.TEXT;\n    if (settings.displayMode) {\n        startStyle = Style.DISPLAY;\n    }\n\n    // Setup the default options\n    var options = new Options({\n        style: startStyle,\n        size: \"size5\",\n    });\n\n    // `buildHTML` sometimes messes with the parse tree (like turning bins ->\n    // ords), so we build the MathML version first.\n    var mathMLNode = buildMathML(tree, expression, options);\n    var htmlNode = buildHTML(tree, options);\n\n    var katexNode = makeSpan([\"katex\"], [\n        mathMLNode, htmlNode,\n    ]);\n\n    if (settings.displayMode) {\n        return makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nmodule.exports = buildTree;\n", "var utils = require(\"./utils\");\nvar ParseError = require(\"./ParseError\");\n\n/* This file contains a list of functions that we parse, identified by\n * the calls to defineFunction.\n *\n * The first argument to defineFunction is a single name or a list of names.\n * All functions named in such a list will share a single implementation.\n *\n * Each declared function can have associated properties, which\n * include the following:\n *\n *  - numArgs: The number of arguments the function takes.\n *             If this is the only property, it can be passed as a number\n *             instead of an element of a properties object.\n *  - argTypes: (optional) An array corresponding to each argument of the\n *              function, giving the type of argument that should be parsed. Its\n *              length should be equal to `numArgs + numOptionalArgs`. Valid\n *              types:\n *               - \"size\": A size-like thing, such as \"1em\" or \"5ex\"\n *               - \"color\": An html color, like \"#abc\" or \"blue\"\n *               - \"original\": The same type as the environment that the\n *                             function being parsed is in (e.g. used for the\n *                             bodies of functions like \\color where the first\n *                             argument is special and the second argument is\n *                             parsed normally)\n *              Other possible types (probably shouldn't be used)\n *               - \"text\": Text-like (e.g. \\text)\n *               - \"math\": Normal math\n *              If undefined, this will be treated as an appropriate length\n *              array of \"original\" strings\n *  - greediness: (optional) The greediness of the function to use ungrouped\n *                arguments.\n *\n *                E.g. if you have an expression\n *                  \\sqrt \\frac 1 2\n *                since \\frac has greediness=2 vs \\sqrt's greediness=1, \\frac\n *                will use the two arguments '1' and '2' as its two arguments,\n *                then that whole function will be used as the argument to\n *                \\sqrt. On the other hand, the expressions\n *                  \\frac \\frac 1 2 3\n *                and\n *                  \\frac \\sqrt 1 2\n *                will fail because \\frac and \\frac have equal greediness\n *                and \\sqrt has a lower greediness than \\frac respectively. To\n *                make these parse, we would have to change them to:\n *                  \\frac {\\frac 1 2} 3\n *                and\n *                  \\frac {\\sqrt 1} 2\n *\n *                The default value is `1`\n *  - allowedInText: (optional) Whether or not the function is allowed inside\n *                   text mode (default false)\n *  - numOptionalArgs: (optional) The number of optional arguments the function\n *                     should parse. If the optional arguments aren't found,\n *                     `null` will be passed to the handler in their place.\n *                     (default 0)\n *\n * The last argument is that implementation, the handler for the function(s).\n * It is called to handle these functions and their arguments.\n * It receives two arguments:\n *  - context contains information and references provided by the parser\n *  - args is an array of arguments obtained from TeX input\n * The context contains the following properties:\n *  - funcName: the text (i.e. name) of the function, including \\\n *  - parser: the parser object\n *  - lexer: the lexer object\n *  - positions: the positions in the overall string of the function\n *               and the arguments.\n * The latter three should only be used to produce error messages.\n *\n * The function should return an object with the following keys:\n *  - type: The type of element that this is. This is then used in\n *          buildHTML/buildMathML to determine which function\n *          should be called to build this node into a DOM node\n * Any other data can be added to the object, which will be passed\n * in to the function in buildHTML/buildMathML as `group.value`.\n */\n\nfunction defineFunction(names, props, handler) {\n    if (typeof names === \"string\") {\n        names = [names];\n    }\n    if (typeof props === \"number\") {\n        props = { numArgs: props };\n    }\n    // Set default values of functions\n    var data = {\n        numArgs: props.numArgs,\n        argTypes: props.argTypes,\n        greediness: (props.greediness === undefined) ? 1 : props.greediness,\n        allowedInText: !!props.allowedInText,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        handler: handler,\n    };\n    for (var i = 0; i < names.length; ++i) {\n        module.exports[names[i]] = data;\n    }\n}\n\n// A normal square root\ndefineFunction(\"\\\\sqrt\", {\n    numArgs: 1,\n    numOptionalArgs: 1,\n}, function(context, args) {\n    var index = args[0];\n    var body = args[1];\n    return {\n        type: \"sqrt\",\n        body: body,\n        index: index,\n    };\n});\n\n// Some non-mathy text\ndefineFunction(\"\\\\text\", {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n}, function(context, args) {\n    var body = args[0];\n    // Since the corresponding buildHTML/buildMathML function expects a\n    // list of elements, we normalize for different kinds of arguments\n    // TODO(emily): maybe this should be done somewhere else\n    var inner;\n    if (body.type === \"ordgroup\") {\n        inner = body.value;\n    } else {\n        inner = [body];\n    }\n\n    return {\n        type: \"text\",\n        body: inner,\n    };\n});\n\n// A two-argument custom color\ndefineFunction(\"\\\\color\", {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"],\n}, function(context, args) {\n    var color = args[0];\n    var body = args[1];\n    // Normalize the different kinds of bodies (see \\text above)\n    var inner;\n    if (body.type === \"ordgroup\") {\n        inner = body.value;\n    } else {\n        inner = [body];\n    }\n\n    return {\n        type: \"color\",\n        color: color.value,\n        value: inner,\n    };\n});\n\n// An overline\ndefineFunction(\"\\\\overline\", {\n    numArgs: 1,\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"overline\",\n        body: body,\n    };\n});\n\n// An underline\ndefineFunction(\"\\\\underline\", {\n    numArgs: 1,\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"underline\",\n        body: body,\n    };\n});\n\n// A box of the width and height\ndefineFunction(\"\\\\rule\", {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"],\n}, function(context, args) {\n    var shift = args[0];\n    var width = args[1];\n    var height = args[2];\n    return {\n        type: \"rule\",\n        shift: shift && shift.value,\n        width: width.value,\n        height: height.value,\n    };\n});\n\n// A KaTeX logo\ndefineFunction(\"\\\\KaTeX\", {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"katex\",\n    };\n});\n\ndefineFunction(\"\\\\phantom\", {\n    numArgs: 1,\n}, function(context, args) {\n    var body = args[0];\n    var inner;\n    if (body.type === \"ordgroup\") {\n        inner = body.value;\n    } else {\n        inner = [body];\n    }\n\n    return {\n        type: \"phantom\",\n        value: inner,\n    };\n});\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n    \"\\\\bigl\" : {type: \"open\",    size: 1},\n    \"\\\\Bigl\" : {type: \"open\",    size: 2},\n    \"\\\\biggl\": {type: \"open\",    size: 3},\n    \"\\\\Biggl\": {type: \"open\",    size: 4},\n    \"\\\\bigr\" : {type: \"close\",   size: 1},\n    \"\\\\Bigr\" : {type: \"close\",   size: 2},\n    \"\\\\biggr\": {type: \"close\",   size: 3},\n    \"\\\\Biggr\": {type: \"close\",   size: 4},\n    \"\\\\bigm\" : {type: \"rel\",     size: 1},\n    \"\\\\Bigm\" : {type: \"rel\",     size: 2},\n    \"\\\\biggm\": {type: \"rel\",     size: 3},\n    \"\\\\Biggm\": {type: \"rel\",     size: 4},\n    \"\\\\big\"  : {type: \"textord\", size: 1},\n    \"\\\\Big\"  : {type: \"textord\", size: 2},\n    \"\\\\bigg\" : {type: \"textord\", size: 3},\n    \"\\\\Bigg\" : {type: \"textord\", size: 4},\n};\n\nvar delimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"\\\\lt\", \"\\\\gt\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\",\n    \"/\", \"\\\\backslash\",\n    \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\",\n    \"\\\\uparrow\", \"\\\\Uparrow\",\n    \"\\\\downarrow\", \"\\\\Downarrow\",\n    \"\\\\updownarrow\", \"\\\\Updownarrow\",\n    \".\",\n];\n\nvar fontAliases = {\n    \"\\\\Bbb\": \"\\\\mathbb\",\n    \"\\\\bold\": \"\\\\mathbf\",\n    \"\\\\frak\": \"\\\\mathfrak\",\n};\n\n// Single-argument color functions\ndefineFunction([\n    \"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\",\n    \"\\\\green\", \"\\\\gray\", \"\\\\purple\",\n    \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\",\n    \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\",\n    \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\",\n    \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\",\n    \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\",\n    \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\",\n    \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\",\n    \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\",\n    \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\",\n    \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\",\n    \"\\\\kaBlue\", \"\\\\kaGreen\",\n], {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n}, function(context, args) {\n    var body = args[0];\n    var atoms;\n    if (body.type === \"ordgroup\") {\n        atoms = body.value;\n    } else {\n        atoms = [body];\n    }\n\n    return {\n        type: \"color\",\n        color: \"katex-\" + context.funcName.slice(1),\n        value: atoms,\n    };\n});\n\n// There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\n// No limits, not symbols\ndefineFunction([\n    \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arg\", \"\\\\cos\", \"\\\\cosh\",\n    \"\\\\cot\", \"\\\\coth\", \"\\\\csc\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\",\n    \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\",\n    \"\\\\tan\", \"\\\\tanh\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: false,\n        body: context.funcName,\n    };\n});\n\n// Limits, not symbols\ndefineFunction([\n    \"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\liminf\", \"\\\\limsup\", \"\\\\max\",\n    \"\\\\min\", \"\\\\Pr\", \"\\\\sup\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: false,\n        body: context.funcName,\n    };\n});\n\n// No limits, symbols\ndefineFunction([\n    \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: true,\n        body: context.funcName,\n    };\n});\n\n// Limits, symbols\ndefineFunction([\n    \"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\",\n    \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\",\n    \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: true,\n        body: context.funcName,\n    };\n});\n\n// Fractions\ndefineFunction([\n    \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\",\n    \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\",\n], {\n    numArgs: 2,\n    greediness: 2,\n}, function(context, args) {\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\frac\":\n        case \"\\\\tfrac\":\n            hasBarLine = true;\n            break;\n        case \"\\\\dbinom\":\n        case \"\\\\binom\":\n        case \"\\\\tbinom\":\n            hasBarLine = false;\n            leftDelim = \"(\";\n            rightDelim = \")\";\n            break;\n        default:\n            throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\dbinom\":\n            size = \"display\";\n            break;\n        case \"\\\\tfrac\":\n        case \"\\\\tbinom\":\n            size = \"text\";\n            break;\n    }\n\n    return {\n        type: \"genfrac\",\n        numer: numer,\n        denom: denom,\n        hasBarLine: hasBarLine,\n        leftDelim: leftDelim,\n        rightDelim: rightDelim,\n        size: size,\n    };\n});\n\n// Left and right overlap functions\ndefineFunction([\"\\\\llap\", \"\\\\rlap\"], {\n    numArgs: 1,\n    allowedInText: true,\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: context.funcName.slice(1),\n        body: body,\n    };\n});\n\n// Delimiter functions\ndefineFunction([\n    \"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\",\n    \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\",\n    \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\",\n    \"\\\\big\",  \"\\\\Big\",  \"\\\\bigg\",  \"\\\\Bigg\",\n    \"\\\\left\", \"\\\\right\",\n], {\n    numArgs: 1,\n}, function(context, args) {\n    var delim = args[0];\n    if (!utils.contains(delimiters, delim.value)) {\n        throw new ParseError(\n            \"Invalid delimiter: '\" + delim.value + \"' after '\" +\n                context.funcName + \"'\",\n            context.lexer, context.positions[1]);\n    }\n\n    // \\left and \\right are caught somewhere in Parser.js, which is\n    // why this data doesn't match what is in buildHTML.\n    if (context.funcName === \"\\\\left\" || context.funcName === \"\\\\right\") {\n        return {\n            type: \"leftright\",\n            value: delim.value,\n        };\n    } else {\n        return {\n            type: \"delimsizing\",\n            size: delimiterSizes[context.funcName].size,\n            delimType: delimiterSizes[context.funcName].type,\n            value: delim.value,\n        };\n    }\n});\n\n// Sizing functions (handled in Parser.js explicitly, hence no handler)\ndefineFunction([\n    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\",\n    \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\",\n], 0, null);\n\n// Style changing functions (handled in Parser.js explicitly, hence no\n// handler)\ndefineFunction([\n    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\",\n    \"\\\\scriptscriptstyle\",\n], 0, null);\n\ndefineFunction([\n    // styles\n    \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",\n\n    // families\n    \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\",\n    \"\\\\mathtt\",\n\n    // aliases\n    \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\",\n], {\n    numArgs: 1,\n    greediness: 2,\n}, function(context, args) {\n    var body = args[0];\n    var func = context.funcName;\n    if (func in fontAliases) {\n        func = fontAliases[func];\n    }\n    return {\n        type: \"font\",\n        font: func.slice(1),\n        body: body,\n    };\n});\n\n// Accents\ndefineFunction([\n    \"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\",\n    \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\",\n    // We don't support expanding accents yet\n    // \"\\\\widetilde\", \"\\\\widehat\"\n], {\n    numArgs: 1,\n}, function(context, args) {\n    var base = args[0];\n    return {\n        type: \"accent\",\n        accent: context.funcName,\n        base: base,\n    };\n});\n\n// Infix generalized fractions\ndefineFunction([\"\\\\over\", \"\\\\choose\"], {\n    numArgs: 0,\n}, function(context) {\n    var replaceWith;\n    switch (context.funcName) {\n        case \"\\\\over\":\n            replaceWith = \"\\\\frac\";\n            break;\n        case \"\\\\choose\":\n            replaceWith = \"\\\\binom\";\n            break;\n        default:\n            throw new Error(\"Unrecognized infix genfrac command\");\n    }\n    return {\n        type: \"infix\",\n        replaceWith: replaceWith,\n    };\n});\n\n// Row breaks for aligned data\ndefineFunction([\"\\\\\\\\\", \"\\\\cr\"], {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n}, function(context, args) {\n    var size = args[0];\n    return {\n        type: \"cr\",\n        size: size,\n    };\n});\n\n// Environment delimiters\ndefineFunction([\"\\\\begin\", \"\\\\end\"], {\n    numArgs: 1,\n    argTypes: [\"text\"],\n}, function(context, args) {\n    var nameGroup = args[0];\n    if (nameGroup.type !== \"ordgroup\") {\n        throw new ParseError(\n            \"Invalid environment name\",\n            context.lexer, context.positions[1]);\n    }\n    var name = \"\";\n    for (var i = 0; i < nameGroup.value.length; ++i) {\n        name += nameGroup.value[i].value;\n    }\n    return {\n        type: \"environment\",\n        name: name,\n        namepos: context.positions[1],\n    };\n});\n", "/**\n * The resulting parse tree nodes of the parse tree.\n */\nfunction ParseNode(type, value, mode) {\n    this.type = type;\n    this.value = value;\n    this.mode = mode;\n}\n\nmodule.exports = {\n    ParseNode: ParseNode,\n};\n\n", "/* eslint no-constant-condition:0 */\nvar fontMetrics = require(\"./fontMetrics\");\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\n\nvar ParseNode = parseData.ParseNode;\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.\n */\nfunction parseArray(parser, result) {\n    var row = [];\n    var body = [row];\n    var rowGaps = [];\n    while (true) {\n        var cell = parser.parseExpression(false, null);\n        row.push(new ParseNode(\"ordgroup\", cell, parser.mode));\n        var next = parser.nextToken.text;\n        if (next === \"&\") {\n            parser.consume();\n        } else if (next === \"\\\\end\") {\n            break;\n        } else if (next === \"\\\\\\\\\" || next === \"\\\\cr\") {\n            var cr = parser.parseFunction();\n            rowGaps.push(cr.value.size);\n            row = [];\n            body.push(row);\n        } else {\n            // TODO: Clean up the following hack once #385 got merged\n            var pos = Math.min(parser.pos + 1, parser.lexer._input.length);\n            throw new ParseError(\"Expected & or \\\\\\\\ or \\\\end\",\n                                 parser.lexer, pos);\n        }\n    }\n    result.body = body;\n    result.rowGaps = rowGaps;\n    return new ParseNode(result.type, result, parser.mode);\n}\n\n/*\n * An environment definition is very similar to a function definition:\n * it is declared with a name or a list of names, a set of properties\n * and a handler containing the actual implementation.\n *\n * The properties include:\n *  - numArgs: The number of arguments after the \\begin{name} function.\n *  - argTypes: (optional) Just like for a function\n *  - allowedInText: (optional) Whether or not the environment is allowed inside\n *                   text mode (default false) (not enforced yet)\n *  - numOptionalArgs: (optional) Just like for a function\n * A bare number instead of that object indicates the numArgs value.\n *\n * The handler function will receive two arguments\n *  - context: information and references provided by the parser\n *  - args: an array of arguments passed to \\begin{name}\n * The context contains the following properties:\n *  - envName: the name of the environment, one of the listed names.\n *  - parser: the parser object\n *  - lexer: the lexer object\n *  - positions: the positions associated with these arguments from args.\n * The handler must return a ParseResult.\n */\n\nfunction defineEnvironment(names, props, handler) {\n    if (typeof names === \"string\") {\n        names = [names];\n    }\n    if (typeof props === \"number\") {\n        props = { numArgs: props };\n    }\n    // Set default values of environments\n    var data = {\n        numArgs: props.numArgs || 0,\n        argTypes: props.argTypes,\n        greediness: 1,\n        allowedInText: !!props.allowedInText,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        handler: handler,\n    };\n    for (var i = 0; i < names.length; ++i) {\n        module.exports[names[i]] = data;\n    }\n}\n\n// Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\ndefineEnvironment(\"array\", {\n    numArgs: 1,\n}, function(context, args) {\n    var colalign = args[0];\n    colalign = colalign.value.map ? colalign.value : [colalign];\n    var cols = colalign.map(function(node) {\n        var ca = node.value;\n        if (\"lcr\".indexOf(ca) !== -1) {\n            return {\n                type: \"align\",\n                align: ca,\n            };\n        } else if (ca === \"|\") {\n            return {\n                type: \"separator\",\n                separator: \"|\",\n            };\n        }\n        throw new ParseError(\n            \"Unknown column alignment: \" + node.value,\n            context.lexer, context.positions[1]);\n    });\n    var res = {\n        type: \"array\",\n        cols: cols,\n        hskipBeforeAndAfter: true, // \\@preamble in lttab.dtx\n    };\n    res = parseArray(context.parser, res);\n    return res;\n});\n\n// The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\ndefineEnvironment([\n    \"matrix\",\n    \"pmatrix\",\n    \"bmatrix\",\n    \"Bmatrix\",\n    \"vmatrix\",\n    \"Vmatrix\",\n], {\n}, function(context) {\n    var delimiters = {\n        \"matrix\": null,\n        \"pmatrix\": [\"(\", \")\"],\n        \"bmatrix\": [\"[\", \"]\"],\n        \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n        \"vmatrix\": [\"|\", \"|\"],\n        \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"],\n    }[context.envName];\n    var res = {\n        type: \"array\",\n        hskipBeforeAndAfter: false, // \\hskip -\\arraycolsep in amsmath\n    };\n    res = parseArray(context.parser, res);\n    if (delimiters) {\n        res = new ParseNode(\"leftright\", {\n            body: [res],\n            left: delimiters[0],\n            right: delimiters[1],\n        }, context.mode);\n    }\n    return res;\n});\n\n// A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} \u2026 \\end{array}\\right.\ndefineEnvironment(\"cases\", {\n}, function(context) {\n    var res = {\n        type: \"array\",\n        arraystretch: 1.2,\n        cols: [{\n            type: \"align\",\n            align: \"l\",\n            pregap: 0,\n            postgap: fontMetrics.metrics.quad,\n        }, {\n            type: \"align\",\n            align: \"l\",\n            pregap: 0,\n            postgap: 0,\n        }],\n    };\n    res = parseArray(context.parser, res);\n    res = new ParseNode(\"leftright\", {\n        body: [res],\n        left: \"\\\\{\",\n        right: \".\",\n    }, context.mode);\n    return res;\n});\n\n// An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\ndefineEnvironment(\"aligned\", {\n}, function(context) {\n    var res = {\n        type: \"array\",\n        cols: [],\n    };\n    res = parseArray(context.parser, res);\n    var emptyGroup = new ParseNode(\"ordgroup\", [], context.mode);\n    var numCols = 0;\n    res.value.body.forEach(function(row) {\n        var i;\n        for (i = 1; i < row.length; i += 2) {\n            row[i].value.unshift(emptyGroup);\n        }\n        if (numCols < row.length) {\n            numCols = row.length;\n        }\n    });\n    for (var i = 0; i < numCols; ++i) {\n        var align = \"r\";\n        var pregap = 0;\n        if (i % 2 === 1) {\n            align = \"l\";\n        } else if (i > 0) {\n            pregap = 2; // one \\qquad between columns\n        }\n        res.value.cols[i] = {\n            type: \"align\",\n            align: align,\n            pregap: pregap,\n            postgap: 0,\n        };\n    }\n    return res;\n});\n", "function getRelocatable(re) {\n  // In the future, this could use a WeakMap instead of an expando.\n  if (!re.__matchAtRelocatable) {\n    // Disjunctions are the lowest-precedence operator, so we can make any\n    // pattern match the empty string by appending `|()` to it:\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns\n    var source = re.source + '|()';\n\n    // We always make the new regex global.\n    var flags = 'g' + (re.ignoreCase ? 'i' : '') + (re.multiline ? 'm' : '') + (re.unicode ? 'u' : '')\n    // sticky (/.../y) doesn't make sense in conjunction with our relocation\n    // logic, so we ignore it here.\n    ;\n\n    re.__matchAtRelocatable = new RegExp(source, flags);\n  }\n  return re.__matchAtRelocatable;\n}\n\nfunction matchAt(re, str, pos) {\n  if (re.global || re.sticky) {\n    throw new Error('matchAt(...): Only non-global regexes are supported');\n  }\n  var reloc = getRelocatable(re);\n  reloc.lastIndex = pos;\n  var match = reloc.exec(str);\n  // Last capturing group is our sentinel that indicates whether the regex\n  // matched at the given location.\n  if (match[match.length - 1] == null) {\n    // Original regex matched.\n    match.length = match.length - 1;\n    return match;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = matchAt;", "/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\nvar matchAt = require(\"match-at\");\n\nvar ParseError = require(\"./ParseError\");\n\n// The main lexer class\nfunction Lexer(input) {\n    this._input = input;\n}\n\n// The resulting token returned from `lex`.\nfunction Token(text, data, position) {\n    this.text = text;\n    this.data = data;\n    this.position = position;\n}\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - matches symbol combinations which result in a single output character\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar tokenRegex = new RegExp(\n    \"([ \\r\\n\\t]+)|(\" +                                // whitespace\n    \"---?\" +                                          // special combinations\n    \"|[!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" +  // single codepoint\n    \"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" +               // surrogate pair\n    \"|\\\\\\\\(?:[a-zA-Z]+|[^\\uD800-\\uDFFF])\" +           // function name\n    \")\"\n);\n\nvar whitespaceRegex = /\\s*/;\n\n/**\n * This function lexes a single normal token. It takes a position and\n * whether it should completely ignore whitespace or not.\n */\nLexer.prototype._innerLex = function(pos, ignoreWhitespace) {\n    var input = this._input;\n    if (pos === input.length) {\n        return new Token(\"EOF\", null, pos);\n    }\n    var match = matchAt(tokenRegex, input, pos);\n    if (match === null) {\n        throw new ParseError(\n            \"Unexpected character: '\" + input[pos] + \"'\",\n            this, pos);\n    } else if (match[2]) { // matched non-whitespace\n        return new Token(match[2], null, pos + match[2].length);\n    } else if (ignoreWhitespace) {\n        return this._innerLex(pos + match[1].length, true);\n    } else { // concatenate whitespace to a single space\n        return new Token(\" \", null, pos + match[1].length);\n    }\n};\n\n// A regex to match a CSS color (like #ffffff or BlueViolet)\nvar cssColor = /#[a-z0-9]+|[a-z]+/i;\n\n/**\n * This function lexes a CSS color.\n */\nLexer.prototype._innerLexColor = function(pos) {\n    var input = this._input;\n\n    // Ignore whitespace\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    var match;\n    if ((match = matchAt(cssColor, input, pos))) {\n        // If we look like a color, return a color\n        return new Token(match[0], null, pos + match[0].length);\n    } else {\n        throw new ParseError(\"Invalid color\", this, pos);\n    }\n};\n\n// A regex to match a dimension. Dimensions look like\n// \"1.2em\" or \".4pt\" or \"1 ex\"\nvar sizeRegex = /(-?)\\s*(\\d+(?:\\.\\d*)?|\\.\\d+)\\s*([a-z]{2})/;\n\n/**\n * This function lexes a dimension.\n */\nLexer.prototype._innerLexSize = function(pos) {\n    var input = this._input;\n\n    // Ignore whitespace\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    var match;\n    if ((match = matchAt(sizeRegex, input, pos))) {\n        var unit = match[3];\n        // We only currently handle \"em\" and \"ex\" units\n        if (unit !== \"em\" && unit !== \"ex\") {\n            throw new ParseError(\"Invalid unit: '\" + unit + \"'\", this, pos);\n        }\n        return new Token(match[0], {\n            number: +(match[1] + match[2]),\n            unit: unit,\n        }, pos + match[0].length);\n    }\n\n    throw new ParseError(\"Invalid size\", this, pos);\n};\n\n/**\n * This function lexes a string of whitespace.\n */\nLexer.prototype._innerLexWhitespace = function(pos) {\n    var input = this._input;\n\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    return new Token(whitespace[0], null, pos);\n};\n\n/**\n * This function lexes a single token starting at `pos` and of the given mode.\n * Based on the mode, we defer to one of the `_innerLex` functions.\n */\nLexer.prototype.lex = function(pos, mode) {\n    if (mode === \"math\") {\n        return this._innerLex(pos, true);\n    } else if (mode === \"text\") {\n        return this._innerLex(pos, false);\n    } else if (mode === \"color\") {\n        return this._innerLexColor(pos);\n    } else if (mode === \"size\") {\n        return this._innerLexSize(pos);\n    } else if (mode === \"whitespace\") {\n        return this._innerLexWhitespace(pos);\n    }\n};\n\nmodule.exports = Lexer;\n", "/* eslint no-constant-condition:0 */\nvar functions = require(\"./functions\");\nvar environments = require(\"./environments\");\nvar Lexer = require(\"./Lexer\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The earlier functions return ParseNodes.\n * The later functions (which are called deeper in the parse) sometimes return\n * ParseFuncOrArgument, which contain a ParseNode as well as some data about\n * whether the parsed object is a function which is missing some arguments, or a\n * standalone object which can be used as an argument to another function.\n */\n\n/**\n * Main Parser class\n */\nfunction Parser(input, settings) {\n    // Make a new lexer\n    this.lexer = new Lexer(input);\n    // Store the settings for use in parsing\n    this.settings = settings;\n}\n\nvar ParseNode = parseData.ParseNode;\n\n/**\n * An initial function (without its arguments), or an argument to a function.\n * The `result` argument should be a ParseNode.\n */\nfunction ParseFuncOrArgument(result, isFunction) {\n    this.result = result;\n    // Is this a function (i.e. is it something defined in functions.js)?\n    this.isFunction = isFunction;\n}\n\n/**\n * Checks a result to make sure it has the right type, and throws an\n * appropriate error otherwise.\n *\n * @param {boolean=} consume whether to consume the expected token,\n *                           defaults to true\n */\nParser.prototype.expect = function(text, consume) {\n    if (this.nextToken.text !== text) {\n        throw new ParseError(\n            \"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\",\n            this.lexer, this.nextToken.position\n        );\n    }\n    if (consume !== false) {\n        this.consume();\n    }\n};\n\n/**\n * Considers the current look ahead token as consumed,\n * and fetches the one after that as the new look ahead.\n */\nParser.prototype.consume = function() {\n    this.pos = this.nextToken.position;\n    this.nextToken = this.lexer.lex(this.pos, this.mode);\n};\n\n/**\n * Main parsing function, which parses an entire input.\n *\n * @return {?Array.<ParseNode>}\n */\nParser.prototype.parse = function() {\n    // Try to parse the input\n    this.mode = \"math\";\n    this.pos = 0;\n    this.nextToken = this.lexer.lex(this.pos, this.mode);\n    var parse = this.parseInput();\n    return parse;\n};\n\n/**\n * Parses an entire input tree.\n */\nParser.prototype.parseInput = function() {\n    // Parse an expression\n    var expression = this.parseExpression(false);\n    // If we succeeded, make sure there's an EOF at the end\n    this.expect(\"EOF\", false);\n    return expression;\n};\n\nvar endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\", \"\\\\\\\\\", \"\\\\cr\"];\n\n/**\n * Parses an \"expression\", which is a list of atoms.\n *\n * @param {boolean} breakOnInfix Should the parsing stop when we hit infix\n *                  nodes? This happens when functions have higher precendence\n *                  than infix nodes in implicit parses.\n *\n * @param {?string} breakOnToken The token that the expression should end with,\n *                  or `null` if something else should end the expression.\n *\n * @return {ParseNode}\n */\nParser.prototype.parseExpression = function(breakOnInfix, breakOnToken) {\n    var body = [];\n    // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n    while (true) {\n        var lex = this.nextToken;\n        var pos = this.pos;\n        if (endOfExpression.indexOf(lex.text) !== -1) {\n            break;\n        }\n        if (breakOnToken && lex.text === breakOnToken) {\n            break;\n        }\n        var atom = this.parseAtom();\n        if (!atom) {\n            if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                var errorNode = this.handleUnsupportedCmd();\n                body.push(errorNode);\n\n                pos = lex.position;\n                continue;\n            }\n\n            break;\n        }\n        if (breakOnInfix && atom.type === \"infix\") {\n            // rewind so we can parse the infix atom again\n            this.pos = pos;\n            this.nextToken = lex;\n            break;\n        }\n        body.push(atom);\n    }\n    return this.handleInfixNodes(body);\n};\n\n/**\n * Rewrites infix operators such as \\over with corresponding commands such\n * as \\frac.\n *\n * There can only be one infix operator per group.  If there's more than one\n * then the expression is ambiguous.  This can be resolved by adding {}.\n *\n * @returns {Array}\n */\nParser.prototype.handleInfixNodes = function(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n        var node = body[i];\n        if (node.type === \"infix\") {\n            if (overIndex !== -1) {\n                throw new ParseError(\"only one infix operator per group\",\n                    this.lexer, -1);\n            }\n            overIndex = i;\n            funcName = node.value.replaceWith;\n        }\n    }\n\n    if (overIndex !== -1) {\n        var numerNode;\n        var denomNode;\n\n        var numerBody = body.slice(0, overIndex);\n        var denomBody = body.slice(overIndex + 1);\n\n        if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n            numerNode = numerBody[0];\n        } else {\n            numerNode = new ParseNode(\"ordgroup\", numerBody, this.mode);\n        }\n\n        if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n            denomNode = denomBody[0];\n        } else {\n            denomNode = new ParseNode(\"ordgroup\", denomBody, this.mode);\n        }\n\n        var value = this.callFunction(\n            funcName, [numerNode, denomNode], null);\n        return [new ParseNode(value.type, value, this.mode)];\n    } else {\n        return body;\n    }\n};\n\n// The greediness of a superscript or subscript\nvar SUPSUB_GREEDINESS = 1;\n\n/**\n * Handle a subscript or superscript with nice errors.\n */\nParser.prototype.handleSupSubscript = function(name) {\n    var symbol = this.nextToken.text;\n    var symPos = this.pos;\n    this.consume();\n    var group = this.parseGroup();\n\n    if (!group) {\n        if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n            return this.handleUnsupportedCmd();\n        } else {\n            throw new ParseError(\n                \"Expected group after '\" + symbol + \"'\",\n                this.lexer,\n                symPos + 1\n            );\n        }\n    } else if (group.isFunction) {\n        // ^ and _ have a greediness, so handle interactions with functions'\n        // greediness\n        var funcGreediness = functions[group.result].greediness;\n        if (funcGreediness > SUPSUB_GREEDINESS) {\n            return this.parseFunction(group);\n        } else {\n            throw new ParseError(\n                \"Got function '\" + group.result + \"' with no arguments \" +\n                    \"as \" + name,\n                this.lexer, symPos + 1);\n        }\n    } else {\n        return group.result;\n    }\n};\n\n/**\n * Converts the textual input of an unsupported command into a text node\n * contained within a color node whose color is determined by errorColor\n */\nParser.prototype.handleUnsupportedCmd = function() {\n    var text = this.nextToken.text;\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n        textordArray.push(new ParseNode(\"textord\", text[i], \"text\"));\n    }\n\n    var textNode = new ParseNode(\n        \"text\",\n        {\n            body: textordArray,\n            type: \"text\",\n        },\n        this.mode);\n\n    var colorNode = new ParseNode(\n        \"color\",\n        {\n            color: this.settings.errorColor,\n            value: [textNode],\n            type: \"color\",\n        },\n        this.mode);\n\n    this.consume();\n    return colorNode;\n};\n\n/**\n * Parses a group with optional super/subscripts.\n *\n * @return {?ParseNode}\n */\nParser.prototype.parseAtom = function() {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseImplicitGroup();\n\n    // In text mode, we don't have superscripts or subscripts\n    if (this.mode === \"text\") {\n        return base;\n    }\n\n    // Note that base may be empty (i.e. null) at this point.\n\n    var superscript;\n    var subscript;\n    while (true) {\n        // Lex the first token\n        var lex = this.nextToken;\n\n        if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n            // We got a limit control\n            if (!base || base.type !== \"op\") {\n                throw new ParseError(\n                    \"Limit controls must follow a math operator\",\n                    this.lexer, this.pos);\n            } else {\n                var limits = lex.text === \"\\\\limits\";\n                base.value.limits = limits;\n                base.value.alwaysHandleSupSub = true;\n            }\n            this.consume();\n        } else if (lex.text === \"^\") {\n            // We got a superscript start\n            if (superscript) {\n                throw new ParseError(\n                    \"Double superscript\", this.lexer, this.pos);\n            }\n            superscript = this.handleSupSubscript(\"superscript\");\n        } else if (lex.text === \"_\") {\n            // We got a subscript start\n            if (subscript) {\n                throw new ParseError(\n                    \"Double subscript\", this.lexer, this.pos);\n            }\n            subscript = this.handleSupSubscript(\"subscript\");\n        } else if (lex.text === \"'\") {\n            // We got a prime\n            var prime = new ParseNode(\"textord\", \"\\\\prime\", this.mode);\n\n            // Many primes can be grouped together, so we handle this here\n            var primes = [prime];\n            this.consume();\n            // Keep lexing tokens until we get something that's not a prime\n            while (this.nextToken.text === \"'\") {\n                // For each one, add another prime to the list\n                primes.push(prime);\n                this.consume();\n            }\n            // Put them into an ordgroup as the superscript\n            superscript = new ParseNode(\"ordgroup\", primes, this.mode);\n        } else {\n            // If it wasn't ^, _, or ', stop parsing super/subscripts\n            break;\n        }\n    }\n\n    if (superscript || subscript) {\n        // If we got either a superscript or subscript, create a supsub\n        return new ParseNode(\"supsub\", {\n            base: base,\n            sup: superscript,\n            sub: subscript,\n        }, this.mode);\n    } else {\n        // Otherwise return the original body\n        return base;\n    }\n};\n\n// A list of the size-changing functions, for use in parseImplicitGroup\nvar sizeFuncs = [\n    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\",\n    \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\",\n];\n\n// A list of the style-changing functions, for use in parseImplicitGroup\nvar styleFuncs = [\n    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\",\n];\n\n/**\n * Parses an implicit group, which is a group that starts at the end of a\n * specified, and ends right before a higher explicit group ends, or at EOL. It\n * is used for functions that appear to affect the current style, like \\Large or\n * \\textrm, where instead of keeping a style we just pretend that there is an\n * implicit grouping after it until the end of the group. E.g.\n *   small text {\\Large large text} small text again\n * It is also used for \\left and \\right to get the correct grouping.\n *\n * @return {?ParseNode}\n */\nParser.prototype.parseImplicitGroup = function() {\n    var start = this.parseSymbol();\n\n    if (start == null) {\n        // If we didn't get anything we handle, fall back to parseFunction\n        return this.parseFunction();\n    }\n\n    var func = start.result;\n    var body;\n\n    if (func === \"\\\\left\") {\n        // If we see a left:\n        // Parse the entire left function (including the delimiter)\n        var left = this.parseFunction(start);\n        // Parse out the implicit body\n        body = this.parseExpression(false);\n        // Check the next token\n        this.expect(\"\\\\right\", false);\n        var right = this.parseFunction();\n        return new ParseNode(\"leftright\", {\n            body: body,\n            left: left.value.value,\n            right: right.value.value,\n        }, this.mode);\n    } else if (func === \"\\\\begin\") {\n        // begin...end is similar to left...right\n        var begin = this.parseFunction(start);\n        var envName = begin.value.name;\n        if (!environments.hasOwnProperty(envName)) {\n            throw new ParseError(\n                \"No such environment: \" + envName,\n                this.lexer, begin.value.namepos);\n        }\n        // Build the environment object. Arguments and other information will\n        // be made available to the begin and end methods using properties.\n        var env = environments[envName];\n        var args = this.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n        var context = {\n            mode: this.mode,\n            envName: envName,\n            parser: this,\n            lexer: this.lexer,\n            positions: args.pop(),\n        };\n        var result = env.handler(context, args);\n        this.expect(\"\\\\end\", false);\n        var end = this.parseFunction();\n        if (end.value.name !== envName) {\n            throw new ParseError(\n                \"Mismatch: \\\\begin{\" + envName + \"} matched \" +\n                \"by \\\\end{\" + end.value.name + \"}\",\n                this.lexer /* , end.value.namepos */);\n            // TODO: Add position to the above line and adjust test case,\n            // requires #385 to get merged first\n        }\n        result.position = end.position;\n        return result;\n    } else if (utils.contains(sizeFuncs, func)) {\n        // If we see a sizing function, parse out the implict body\n        body = this.parseExpression(false);\n        return new ParseNode(\"sizing\", {\n            // Figure out what size to use based on the list of functions above\n            size: \"size\" + (utils.indexOf(sizeFuncs, func) + 1),\n            value: body,\n        }, this.mode);\n    } else if (utils.contains(styleFuncs, func)) {\n        // If we see a styling function, parse out the implict body\n        body = this.parseExpression(true);\n        return new ParseNode(\"styling\", {\n            // Figure out what style to use by pulling out the style from\n            // the function name\n            style: func.slice(1, func.length - 5),\n            value: body,\n        }, this.mode);\n    } else {\n        // Defer to parseFunction if it's not a function we handle\n        return this.parseFunction(start);\n    }\n};\n\n/**\n * Parses an entire function, including its base and all of its arguments.\n * The base might either have been parsed already, in which case\n * it is provided as an argument, or it's the next group in the input.\n *\n * @param {ParseFuncOrArgument=} baseGroup optional as described above\n * @return {?ParseNode}\n */\nParser.prototype.parseFunction = function(baseGroup) {\n    if (!baseGroup) {\n        baseGroup = this.parseGroup();\n    }\n\n    if (baseGroup) {\n        if (baseGroup.isFunction) {\n            var func = baseGroup.result;\n            var funcData = functions[func];\n            if (this.mode === \"text\" && !funcData.allowedInText) {\n                throw new ParseError(\n                    \"Can't use function '\" + func + \"' in text mode\",\n                    this.lexer, baseGroup.position);\n            }\n\n            var args = this.parseArguments(func, funcData);\n            var result = this.callFunction(func, args, args.pop());\n            return new ParseNode(result.type, result, this.mode);\n        } else {\n            return baseGroup.result;\n        }\n    } else {\n        return null;\n    }\n};\n\n/**\n * Call a function handler with a suitable context and arguments.\n */\nParser.prototype.callFunction = function(name, args, positions) {\n    var context = {\n        funcName: name,\n        parser: this,\n        lexer: this.lexer,\n        positions: positions,\n    };\n    return functions[name].handler(context, args);\n};\n\n/**\n * Parses the arguments of a function or environment\n *\n * @param {string} func  \"\\name\" or \"\\begin{name}\"\n * @param {{numArgs:number,numOptionalArgs:number|undefined}} funcData\n * @return the array of arguments, with the list of positions as last element\n */\nParser.prototype.parseArguments = function(func, funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n    if (totalArgs === 0) {\n        return [[this.pos]];\n    }\n\n    var baseGreediness = funcData.greediness;\n    var positions = [this.pos];\n    var args = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n        var argType = funcData.argTypes && funcData.argTypes[i];\n        var arg;\n        if (i < funcData.numOptionalArgs) {\n            if (argType) {\n                arg = this.parseSpecialGroup(argType, true);\n            } else {\n                arg = this.parseOptionalGroup();\n            }\n            if (!arg) {\n                args.push(null);\n                positions.push(this.pos);\n                continue;\n            }\n        } else {\n            if (argType) {\n                arg = this.parseSpecialGroup(argType);\n            } else {\n                arg = this.parseGroup();\n            }\n            if (!arg) {\n                if (!this.settings.throwOnError &&\n                    this.nextToken.text[0] === \"\\\\\") {\n                    arg = new ParseFuncOrArgument(\n                        this.handleUnsupportedCmd(this.nextToken.text),\n                        false);\n                } else {\n                    throw new ParseError(\n                        \"Expected group after '\" + func + \"'\",\n                        this.lexer, this.pos);\n                }\n            }\n        }\n        var argNode;\n        if (arg.isFunction) {\n            var argGreediness =\n                functions[arg.result].greediness;\n            if (argGreediness > baseGreediness) {\n                argNode = this.parseFunction(arg);\n            } else {\n                throw new ParseError(\n                    \"Got function '\" + arg.result + \"' as \" +\n                    \"argument to '\" + func + \"'\",\n                    this.lexer, this.pos - 1);\n            }\n        } else {\n            argNode = arg.result;\n        }\n        args.push(argNode);\n        positions.push(this.pos);\n    }\n\n    args.push(positions);\n\n    return args;\n};\n\n\n/**\n * Parses a group when the mode is changing. Takes a position, a new mode, and\n * an outer mode that is used to parse the outside.\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseSpecialGroup = function(innerMode, optional) {\n    var outerMode = this.mode;\n    // Handle `original` argTypes\n    if (innerMode === \"original\") {\n        innerMode = outerMode;\n    }\n\n    if (innerMode === \"color\" || innerMode === \"size\") {\n        // color and size modes are special because they should have braces and\n        // should only lex a single symbol inside\n        var openBrace = this.nextToken;\n        if (optional && openBrace.text !== \"[\") {\n            // optional arguments should return null if they don't exist\n            return null;\n        }\n        // The call to expect will lex the token after the '{' in inner mode\n        this.mode = innerMode;\n        this.expect(optional ? \"[\" : \"{\");\n        var inner = this.nextToken;\n        this.mode = outerMode;\n        var data;\n        if (innerMode === \"color\") {\n            data = inner.text;\n        } else {\n            data = inner.data;\n        }\n        this.consume(); // consume the token stored in inner\n        this.expect(optional ? \"]\" : \"}\");\n        return new ParseFuncOrArgument(\n            new ParseNode(innerMode, data, outerMode),\n            false);\n    } else if (innerMode === \"text\") {\n        // text mode is special because it should ignore the whitespace before\n        // it\n        var whitespace = this.lexer.lex(this.pos, \"whitespace\");\n        this.pos = whitespace.position;\n    }\n\n    // By the time we get here, innerMode is one of \"text\" or \"math\".\n    // We switch the mode of the parser, recurse, then restore the old mode.\n    this.mode = innerMode;\n    this.nextToken = this.lexer.lex(this.pos, innerMode);\n    var res;\n    if (optional) {\n        res = this.parseOptionalGroup();\n    } else {\n        res = this.parseGroup();\n    }\n    this.mode = outerMode;\n    this.nextToken = this.lexer.lex(this.pos, outerMode);\n    return res;\n};\n\n/**\n * Parses a group, which is either a single nucleus (like \"x\") or an expression\n * in braces (like \"{x+y}\")\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseGroup = function() {\n    // Try to parse an open brace\n    if (this.nextToken.text === \"{\") {\n        // If we get a brace, parse an expression\n        this.consume();\n        var expression = this.parseExpression(false);\n        // Make sure we get a close brace\n        this.expect(\"}\");\n        return new ParseFuncOrArgument(\n            new ParseNode(\"ordgroup\", expression, this.mode),\n            false);\n    } else {\n        // Otherwise, just return a nucleus\n        return this.parseSymbol();\n    }\n};\n\n/**\n * Parses a group, which is an expression in brackets (like \"[x+y]\")\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseOptionalGroup = function() {\n    // Try to parse an open bracket\n    if (this.nextToken.text === \"[\") {\n        // If we get a brace, parse an expression\n        this.consume();\n        var expression = this.parseExpression(false, \"]\");\n        // Make sure we get a close bracket\n        this.expect(\"]\");\n        return new ParseFuncOrArgument(\n            new ParseNode(\"ordgroup\", expression, this.mode),\n            false);\n    } else {\n        // Otherwise, return null,\n        return null;\n    }\n};\n\n/**\n * Parse a single symbol out of the string. Here, we handle both the functions\n * we have defined, as well as the single character symbols\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseSymbol = function() {\n    var nucleus = this.nextToken;\n\n    if (functions[nucleus.text]) {\n        this.consume();\n        // If there exists a function with this name, we return the function and\n        // say that it is a function.\n        return new ParseFuncOrArgument(\n            nucleus.text,\n            true);\n    } else if (symbols[this.mode][nucleus.text]) {\n        this.consume();\n        // Otherwise if this is a no-argument function, find the type it\n        // corresponds to in the symbols map\n        return new ParseFuncOrArgument(\n            new ParseNode(symbols[this.mode][nucleus.text].group,\n                          nucleus.text, this.mode),\n            false);\n    } else {\n        return null;\n    }\n};\n\nParser.prototype.ParseNode = ParseNode;\n\nmodule.exports = Parser;\n", "/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\nvar Parser = require(\"./Parser\");\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function(toParse, settings) {\n    var parser = new Parser(toParse, settings);\n\n    return parser.parse();\n};\n\nmodule.exports = parseTree;\n", "/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\nvar ParseError = require(\"./src/ParseError\");\nvar Settings = require(\"./src/Settings\");\n\nvar buildTree = require(\"./src/buildTree\");\nvar parseTree = require(\"./src/parseTree\");\nvar utils = require(\"./src/utils\");\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function(expression, baseNode, options) {\n    utils.clearNode(baseNode);\n\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    var node = buildTree(tree, expression, settings).toNode();\n\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\n            \"Warning: KaTeX doesn't work in quirks mode. Make sure your \" +\n                \"website has a suitable doctype.\");\n\n        render = function() {\n            throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function(expression, options) {\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings).toMarkup();\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar generateParseTree = function(expression, options) {\n    var settings = new Settings(options);\n    return parseTree(expression, settings);\n};\n\nmodule.exports = {\n    render: render,\n    renderToString: renderToString,\n    /**\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: generateParseTree,\n    ParseError: ParseError,\n};\n", "/* Process inline math */\n/*\nLike markdown-it-simplemath, this is a stripped down, simplified version of:\nhttps://github.com/runarberg/markdown-it-math\n\nIt differs in that it takes (a subset of) LaTeX as input and relies on KaTeX\nfor rendering output.\n*/\n\n/*jslint node: true */\n'use strict';\n\nvar katex = require('katex');\n\n// Test if potential opening or closing delimieter\n// Assumes that there is a \"$\" at state.src[pos]\nfunction isValidDelim(state, pos) {\n    var prevChar, nextChar,\n        max = state.posMax,\n        can_open = true,\n        can_close = true;\n\n    prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n    nextChar = pos + 1 <= max ? state.src.charCodeAt(pos + 1) : -1;\n\n    // Check non-whitespace conditions for opening and closing, and\n    // check that closing delimeter isn't followed by a number\n    if (prevChar === 0x20/* \" \" */ || prevChar === 0x09/* \\t */ ||\n            (nextChar >= 0x30/* \"0\" */ && nextChar <= 0x39/* \"9\" */)) {\n        can_close = false;\n    }\n    if (nextChar === 0x20/* \" \" */ || nextChar === 0x09/* \\t */) {\n        can_open = false;\n    }\n\n    return {\n        can_open: can_open,\n        can_close: can_close\n    };\n}\n\nfunction math_inline(state, silent) {\n    var start, match, token, res, pos, esc_count;\n\n    if (state.src[state.pos] !== \"$\") { return false; }\n\n    res = isValidDelim(state, state.pos);\n    if (!res.can_open) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos += 1;\n        return true;\n    }\n\n    // First check for and bypass all properly escaped delimieters\n    // This loop will assume that the first leading backtick can not\n    // be the first character in state.src, which is known since\n    // we have found an opening delimieter already.\n    start = state.pos + 1;\n    match = start;\n    while ( (match = state.src.indexOf(\"$\", match)) !== -1) {\n        // Found potential $, look for escapes, pos will point to\n        // first non escape when complete\n        pos = match - 1;\n        while (state.src[pos] === \"\\\\\") { pos -= 1; }\n\n        // Even number of escapes, potential closing delimiter found\n        if ( ((match - pos) % 2) == 1 ) { break; }\n        match += 1;\n    }\n\n    // No closing delimter found.  Consume $ and continue.\n    if (match === -1) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos = start;\n        return true;\n    }\n\n    // Check if we have empty content, ie: $$.  Do not parse.\n    if (match - start === 0) {\n        if (!silent) { state.pending += \"$$\"; }\n        state.pos = start + 1;\n        return true;\n    }\n\n    // Check for valid closing delimiter\n    res = isValidDelim(state, match);\n    if (!res.can_close) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos = start;\n        return true;\n    }\n\n    if (!silent) {\n        token         = state.push('math_inline', 'math', 0);\n        token.markup  = \"$\";\n        token.content = state.src.slice(start, match);\n    }\n\n    state.pos = match + 1;\n    return true;\n}\n\nfunction math_block(state, start, end, silent){\n    var firstLine, lastLine, next, lastPos, found = false, token,\n        pos = state.bMarks[start] + state.tShift[start],\n        max = state.eMarks[start]\n\n    if(pos + 2 > max){ return false; }\n    if(state.src.slice(pos,pos+2)!=='$$'){ return false; }\n\n    pos += 2;\n    firstLine = state.src.slice(pos,max);\n\n    if(silent){ return true; }\n    if(firstLine.trim().slice(-2)==='$$'){\n        // Single line expression\n        firstLine = firstLine.trim().slice(0, -2);\n        found = true;\n    }\n\n    for(next = start; !found; ){\n\n        next++;\n\n        if(next >= end){ break; }\n\n        pos = state.bMarks[next]+state.tShift[next];\n        max = state.eMarks[next];\n\n        if(pos < max && state.tShift[next] < state.blkIndent){\n            // non-empty line with negative indent should stop the list:\n            break;\n        }\n\n        if(state.src.slice(pos,max).trim().slice(-2)==='$$'){\n            lastPos = state.src.slice(0,max).lastIndexOf('$$');\n            lastLine = state.src.slice(pos,lastPos);\n            found = true;\n        }\n\n    }\n\n    state.line = next + 1;\n\n    token = state.push('math_block', 'math', 0);\n    token.block = true;\n    token.content = (firstLine && firstLine.trim() ? firstLine + '\\n' : '')\n    + state.getLines(start + 1, next, state.tShift[start], true)\n    + (lastLine && lastLine.trim() ? lastLine : '');\n    token.map = [ start, state.line ];\n    token.markup = '$$';\n    return true;\n}\n\nmodule.exports = function math_plugin(md, options) {\n    // Default options\n\n    options = options || {};\n\n    // set KaTeX as the renderer for markdown-it-simplemath\n    var katexInline = function(latex){\n        options.displayMode = false;\n        try{\n            return katex.renderToString(latex, options);\n        }\n        catch(error){\n            if(options.throwOnError){ console.log(error); }\n            return latex;\n        }\n    };\n\n    var inlineRenderer = function(tokens, idx){\n        return katexInline(tokens[idx].content);\n    };\n\n    var katexBlock = function(latex){\n        options.displayMode = true;\n        try{\n            return \"<p>\" + katex.renderToString(latex, options) + \"</p>\";\n        }\n        catch(error){\n            if(options.throwOnError){ console.log(error); }\n            return latex;\n        }\n    }\n\n    var blockRenderer = function(tokens, idx){\n        return  katexBlock(tokens[idx].content) + '\\n';\n    }\n\n    md.inline.ruler.after('escape', 'math_inline', math_inline);\n    md.block.ruler.after('blockquote', 'math_block', math_block, {\n        alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n    });\n    md.renderer.rules.math_inline = inlineRenderer;\n    md.renderer.rules.math_block = blockRenderer;\n};\n", "/**\n * Jupyter notebook widgets for visualizing t-prompts structures.\n * Phase 0 & 1: Asset de-duplication and minimal static renderer\n */\n\nimport { initWidget } from './renderer';\nimport widgetStyles from './styles.css';\n\n// Export version matching Python package\nexport const VERSION = '0.9.0-alpha';\n\n// Store widget runtime on window for singleton pattern (Phase 0)\ndeclare global {\n  interface Window {\n    __TPWidget?: {\n      version: string;\n      initWidget: typeof initWidget;\n      stylesInjected: boolean;\n    };\n  }\n}\n\n/**\n * Inject widget styles into the document (once per page)\n */\nfunction injectStyles(): void {\n  if (window.__TPWidget?.stylesInjected) {\n    return;\n  }\n\n  const styleId = 'tp-widget-styles';\n  if (document.getElementById(styleId)) {\n    return;\n  }\n\n  const styleElement = document.createElement('style');\n  styleElement.id = styleId;\n  styleElement.textContent = widgetStyles;\n  document.head.appendChild(styleElement);\n\n  if (window.__TPWidget) {\n    window.__TPWidget.stylesInjected = true;\n  }\n}\n\n/**\n * Initialize the widget runtime on window (Phase 0 singleton)\n */\nfunction initRuntime(): void {\n  if (!window.__TPWidget) {\n    window.__TPWidget = {\n      version: VERSION,\n      initWidget,\n      stylesInjected: false,\n    };\n  }\n}\n\n/**\n * Auto-initialize all widgets on the page\n */\nfunction autoInit(): void {\n  initRuntime();\n  injectStyles();\n\n  // Find all widget containers and initialize them\n  const containers = document.querySelectorAll('[data-tp-widget]');\n  containers.forEach((container) => {\n    if (container instanceof HTMLElement && !container.dataset.tpInitialized) {\n      initWidget(container);\n      container.dataset.tpInitialized = 'true';\n    }\n  });\n}\n\n// Auto-initialize when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else {\n  autoInit();\n}\n\n// Watch for new widgets being added to the page (for Jupyter dynamic cell rendering)\nif (typeof MutationObserver !== 'undefined') {\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node instanceof HTMLElement) {\n          // Check if this node is a widget container\n          if (node.matches('[data-tp-widget]') && !node.dataset.tpInitialized) {\n            initRuntime();\n            injectStyles();\n            initWidget(node);\n            node.dataset.tpInitialized = 'true';\n          }\n          // Check if this node contains widget containers\n          const widgets = node.querySelectorAll('[data-tp-widget]');\n          widgets.forEach((widget) => {\n            if (widget instanceof HTMLElement && !widget.dataset.tpInitialized) {\n              initRuntime();\n              injectStyles();\n              initWidget(widget);\n              widget.dataset.tpInitialized = 'true';\n            }\n          });\n        }\n      });\n    });\n  });\n\n  // Observe the entire document body for new widgets\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n  });\n}\n\n// Export for manual initialization\nexport { initWidget, injectStyles, initRuntime };\n", "// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 '\u1E9E'.toLowerCase() === '\u1E7E', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('\u1E9E'.toLowerCase() === '\u1E7E') {\n    str = str.replace(/\u1E9E/g, '\u00DF')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // \u0130, \u03F4, \u1E9E, \u2126, \u212A, \u212B - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (\u0398), U+03f4 (\u03F4) and lowercase U+03b8 (\u03B8), U+03d1 (\u03D1)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change \u03D1 (it's already lowercase),\n  // and .toUpperCase() doesn't change \u03F4 (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n", "import decode from './lib/decode.mjs'\nimport encode from './lib/encode.mjs'\nimport format from './lib/format.mjs'\nimport parse from './lib/parse.mjs'\n\nexport {\n  decode,\n  encode,\n  format,\n  parse\n}\n", "/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n", "const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n", "export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n", "import Any from './properties/Any/regex.mjs';\nimport Cc  from './categories/Cc/regex.mjs';\nimport Cf  from './categories/Cf/regex.mjs';\nimport P   from './categories/P/regex.mjs';\nimport S   from './categories/S/regex.mjs';\nimport Z   from './categories/Z/regex.mjs';\n\nexport { Any, Cc, Cf, P, S, Z };\n", "export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/", "export default /[\\0-\\x1F\\x7F-\\x9F]/", "export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/", "export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/", "export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/", "export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/", null, null, null, null, null, null, null, "// Just a shortcut for bulk export\n\nimport parseLinkLabel from './parse_link_label.mjs'\nimport parseLinkDestination from './parse_link_destination.mjs'\nimport parseLinkTitle from './parse_link_title.mjs'\n\nexport {\n  parseLinkLabel,\n  parseLinkDestination,\n  parseLinkTitle\n}\n", "// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n", "// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n", "// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n", "/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n", "/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n", "// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n", "// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n", "// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n", "export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n", "export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n", "// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n", "// Simple typographic replacements\n//\n// (c) (C) \u2192 \u00A9\n// (tm) (TM) \u2192 \u2122\n// (r) (R) \u2192 \u00AE\n// +- \u2192 \u00B1\n// ... \u2192 \u2026 (also ?.... \u2192 ?.., !.... \u2192 !..)\n// ???????? \u2192 ???, !!!!! \u2192 !!!, `,,` \u2192 `,`\n// -- \u2192 &ndash;, --- \u2192 &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> \u00BD, \u00BC, \u00BE\n// - multiplications 2 x 4 -> 2 \u00D7 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '\u00A9',\n  r: '\u00AE',\n  tm: '\u2122'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '\u00B1')\n          // .., ..., ....... -> \u2026\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '\u2026').replace(/([?!])\u2026/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n", "// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* \u2019 */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n", "// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n", "/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n", "// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n", "// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n", "// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n", "// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n", "// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n", "import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n", "// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n", "// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n", "// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n", "// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n", "// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n", "// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n", "// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n", "// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n", "// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n", "// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n", "// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n", "// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n", "// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n", "// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n", "// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n", "// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n", "// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n", "// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n", "/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n", "import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n", "import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n", "// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `\u201C\u201D\u2018\u2019`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'\u00AB\u00BB\u201E\u201C'` for Russian, `'\u201E\u201C\u201A\u2018'` for German, and\n *   `['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n", "/**\n * Widget renderer for structured prompts - Phase 1: Minimal Static Renderer\n */\n\nimport MarkdownIt from 'markdown-it';\n// @ts-expect-error - markdown-it-katex doesn't have types\nimport markdownItKatex from 'markdown-it-katex';\n\n// Type definitions for widget data structures\ninterface WidgetData {\n  prompt_id?: string;\n  children?: ElementData[];\n  ir_id?: string;\n  source_prompt?: WidgetData;\n  chunks?: ChunkData[];\n}\n\ninterface ElementData {\n  type: string;\n  key: string | number;\n  value?: string;\n  expression?: string;\n  children?: ElementData[];\n  separator?: string;\n  image_data?: ImageData;\n  [key: string]: unknown;\n}\n\ninterface ChunkData {\n  type: string;\n  text?: string;\n  image_data?: ImageData;\n}\n\ninterface ImageData {\n  base64_data?: string;\n  format?: string;\n  width?: number;\n  height?: number;\n  error?: string;\n}\n\n// Initialize markdown-it with KaTeX support\nconst md = new MarkdownIt({\n  html: true,\n  linkify: true,\n  typographer: true,\n}).use(markdownItKatex);\n\n/**\n * Render a tree view from JSON data\n */\nfunction renderTree(data: WidgetData, depth = 0): string {\n  if (!data) return '';\n\n  const indent = '  '.repeat(depth);\n  let html = '';\n\n  if (data.prompt_id && data.children) {\n    // This is a StructuredPrompt\n    html += `${indent}<ul class=\"tp-tree\">\\n`;\n    html += `${indent}  <li class=\"tp-tree-prompt\">\\n`;\n    html += `${indent}    <span class=\"tp-tree-label\">Prompt (${data.prompt_id.substring(0, 8)}...)</span>\\n`;\n    html += `${indent}    <ul>\\n`;\n\n    for (const child of data.children) {\n      html += renderTreeElement(child, depth + 2);\n    }\n\n    html += `${indent}    </ul>\\n`;\n    html += `${indent}  </li>\\n`;\n    html += `${indent}</ul>\\n`;\n  }\n\n  return html;\n}\n\nfunction renderTreeElement(element: ElementData, depth: number): string {\n  const indent = '  '.repeat(depth);\n  let html = '';\n\n  html += `${indent}<li class=\"tp-tree-${element.type}\">\\n`;\n\n  if (element.type === 'static') {\n    const preview = element.value.substring(0, 30).replace(/\\n/g, '\\\\n');\n    html += `${indent}  <span class=\"tp-tree-label\">Static[${element.key}]: \"${preview}${element.value.length > 30 ? '...' : ''}\"</span>\\n`;\n  } else if (element.type === 'interpolation') {\n    html += `${indent}  <span class=\"tp-tree-label\">Interpolation[${element.key}]: ${element.expression}</span>\\n`;\n  } else if (element.type === 'nested_prompt' && element.children) {\n    html += `${indent}  <span class=\"tp-tree-label\">Nested[${element.key}]</span>\\n`;\n    html += `${indent}  <ul>\\n`;\n    for (const child of element.children) {\n      html += renderTreeElement(child, depth + 1);\n    }\n    html += `${indent}  </ul>\\n`;\n  } else if (element.type === 'list' && element.children) {\n    html += `${indent}  <span class=\"tp-tree-label\">List[${element.key}] (${element.children.length} items)</span>\\n`;\n    html += `${indent}  <ul>\\n`;\n    for (let i = 0; i < element.children.length; i++) {\n      const item = element.children[i];\n      html += `${indent}    <li class=\"tp-tree-list-item\">\\n`;\n      html += `${indent}      <span class=\"tp-tree-label\">Item ${i}</span>\\n`;\n      if (item.children) {\n        html += `${indent}      <ul>\\n`;\n        for (const child of item.children) {\n          html += renderTreeElement(child, depth + 2);\n        }\n        html += `${indent}      </ul>\\n`;\n      }\n      html += `${indent}    </li>\\n`;\n    }\n    html += `${indent}  </ul>\\n`;\n  } else if (element.type === 'image') {\n    html += `${indent}  <span class=\"tp-tree-label\">Image[${element.key}]</span>\\n`;\n  }\n\n  html += `${indent}</li>\\n`;\n  return html;\n}\n\n/**\n * Render code view from chunks (showing rendered output with images)\n */\nfunction renderCodeFromChunks(chunks: ChunkData[]): string {\n  if (!chunks || chunks.length === 0) return '';\n\n  let html = '';\n  for (const chunk of chunks) {\n    if (chunk.type === 'text') {\n      // Text chunks are escaped and shown as-is\n      html += '<span class=\"tp-code-text\">' + escapeHtml(chunk.text) + '</span>';\n    } else if (chunk.type === 'image' && chunk.image_data) {\n      // Image chunks rendered as actual img tags\n      const imgData = chunk.image_data;\n      if (imgData.base64_data) {\n        const src = `data:image/${(imgData.format || 'png').toLowerCase()};base64,${imgData.base64_data}`;\n        html += `<img class=\"tp-code-image\" src=\"${src}\" alt=\"Image chunk\" title=\"Image: ${imgData.width}x${imgData.height} ${imgData.format}\" style=\"max-width: 200px; max-height: 200px; display: block; margin: 4px 0;\" />`;\n      } else if (imgData.error) {\n        html += `<span class=\"tp-code-image-error\" title=\"${escapeHtml(imgData.error)}\">[image error]</span>`;\n      }\n    }\n  }\n  return html;\n}\n\n/**\n * Render code view from StructuredPrompt by reconstructing the text\n */\nfunction renderCodeFromPrompt(data: WidgetData): string {\n  if (!data || !data.children) return '';\n\n  let code = '';\n  for (const element of data.children) {\n    code += renderCodeElement(element);\n  }\n  return code;\n}\n\nfunction renderCodeElement(element: ElementData): string {\n  let code = '';\n\n  if (element.type === 'static') {\n    code += escapeHtml(element.value);\n  } else if (element.type === 'interpolation') {\n    // For interpolations, show the actual value\n    code += `<span class=\"tp-code-interp\" title=\"Interpolation: ${escapeHtml(element.expression)}\">${escapeHtml(element.value)}</span>`;\n  } else if (element.type === 'nested_prompt' && element.children) {\n    // For nested prompts, recursively render their children\n    for (const child of element.children) {\n      code += renderCodeElement(child);\n    }\n  } else if (element.type === 'list' && element.children) {\n    // For lists, render each item with separator\n    for (let i = 0; i < element.children.length; i++) {\n      const item = element.children[i];\n      if (i > 0) {\n        code += escapeHtml(element.separator || '\\n');\n      }\n      if (item.children) {\n        for (const child of item.children) {\n          code += renderCodeElement(child);\n        }\n      }\n    }\n  } else if (element.type === 'image' && element.image_data) {\n    // Render actual image using base64 data\n    const imgData = element.image_data;\n    if (imgData.base64_data) {\n      const src = `data:image/${(imgData.format || 'png').toLowerCase()};base64,${imgData.base64_data}`;\n      code += `<img class=\"tp-code-image\" src=\"${src}\" alt=\"Image interpolation\" title=\"Image: ${imgData.width}x${imgData.height} ${imgData.format}\" style=\"max-width: 200px; max-height: 200px; display: block; margin: 4px 0;\" />`;\n    } else if (imgData.error) {\n      code += `<span class=\"tp-code-image-error\" title=\"${escapeHtml(imgData.error)}\">[image error]</span>`;\n    } else {\n      code += '<span class=\"tp-code-image-placeholder\">[image]</span>';\n    }\n  }\n\n  return code;\n}\n\n/**\n * Render Markdown preview from text\n */\nfunction renderMarkdownPreview(text: string): string {\n  try {\n    return md.render(text);\n  } catch (error) {\n    console.error('Markdown rendering error:', error);\n    return `<pre>${escapeHtml(text)}</pre>`;\n  }\n}\n\n/**\n * Render preview from chunks (text + images)\n */\nfunction renderPreviewFromChunks(chunks: ChunkData[]): string {\n  if (!chunks || chunks.length === 0) return '';\n\n  let html = '';\n  for (const chunk of chunks) {\n    if (chunk.type === 'text') {\n      // Render text as Markdown\n      html += renderMarkdownPreview(chunk.text);\n    } else if (chunk.type === 'image' && chunk.image_data) {\n      // Render image\n      const imgData = chunk.image_data;\n      if (imgData.base64_data) {\n        const src = `data:image/${(imgData.format || 'png').toLowerCase()};base64,${imgData.base64_data}`;\n        html += `<img class=\"tp-preview-image\" src=\"${src}\" alt=\"Image chunk\" title=\"Image: ${imgData.width}x${imgData.height} ${imgData.format}\" style=\"max-width: 100%; height: auto; display: block; margin: 8px 0;\" />`;\n      } else if (imgData.error) {\n        html += `<div class=\"tp-preview-error\">Image error: ${escapeHtml(imgData.error)}</div>`;\n      }\n    }\n  }\n  return html;\n}\n\n/**\n * Render preview from StructuredPrompt elements\n */\nfunction renderPreviewFromPrompt(data: WidgetData): string {\n  if (!data || !data.children) return '';\n\n  // Reconstruct text from elements\n  let text = '';\n  for (const element of data.children) {\n    text += extractTextFromElement(element);\n  }\n\n  // Render as Markdown\n  return renderMarkdownPreview(text);\n}\n\nfunction extractTextFromElement(element: ElementData): string {\n  let text = '';\n\n  if (element.type === 'static') {\n    text += element.value;\n  } else if (element.type === 'interpolation') {\n    text += element.value;\n  } else if (element.type === 'nested_prompt' && element.children) {\n    for (const child of element.children) {\n      text += extractTextFromElement(child);\n    }\n  } else if (element.type === 'list' && element.children) {\n    for (let i = 0; i < element.children.length; i++) {\n      const item = element.children[i];\n      if (i > 0) {\n        text += element.separator || '\\n';\n      }\n      if (item.children) {\n        for (const child of item.children) {\n          text += extractTextFromElement(child);\n        }\n      }\n    }\n  } else if (element.type === 'image' && element.image_data) {\n    // For images in StructuredPrompt, insert them inline\n    const imgData = element.image_data;\n    if (imgData.base64_data) {\n      const src = `data:image/${(imgData.format || 'png').toLowerCase()};base64,${imgData.base64_data}`;\n      text += `<img class=\"tp-preview-image\" src=\"${src}\" alt=\"Image\" title=\"Image: ${imgData.width}x${imgData.height} ${imgData.format}\" style=\"max-width: 100%; height: auto; display: block; margin: 8px 0;\" />`;\n    }\n  }\n\n  return text;\n}\n\nfunction escapeHtml(text: string): string {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n/**\n * Initialize a widget in the given container\n */\nexport function initWidget(container: HTMLElement): void {\n  try {\n    // Find the embedded JSON IR\n    const scriptTag = container.querySelector('script[data-role=\"tp-widget-data\"]');\n    if (!scriptTag || !scriptTag.textContent) {\n      container.innerHTML = '<div class=\"tp-error\">No widget data found</div>';\n      return;\n    }\n\n    const data = JSON.parse(scriptTag.textContent);\n\n    // Determine what kind of data we have\n    let treeHtml = '';\n    let codeHtml = '';\n    let previewHtml = '';\n\n    console.log('Widget data type check:', {\n      hasPromptId: !!data.prompt_id,\n      hasChildren: !!data.children,\n      hasIrId: !!data.ir_id,\n      hasSourcePrompt: !!data.source_prompt,\n      hasChunks: !!data.chunks,\n    });\n\n    if (data.prompt_id && data.children) {\n      // StructuredPrompt data\n      console.log('Rendering StructuredPrompt');\n      treeHtml = renderTree(data);\n      codeHtml = renderCodeFromPrompt(data);\n\n      // Render as Markdown preview\n      previewHtml = renderPreviewFromPrompt(data);\n      console.log('Preview HTML length:', previewHtml.length);\n    } else if (data.ir_id && data.source_prompt && data.chunks) {\n      // IntermediateRepresentation data\n      console.log('Rendering IntermediateRepresentation');\n      treeHtml = renderTree(data.source_prompt);\n      codeHtml = renderCodeFromChunks(data.chunks);\n\n      // Render chunks as Markdown with images\n      previewHtml = renderPreviewFromChunks(data.chunks);\n      console.log('Preview HTML length:', previewHtml.length);\n    } else {\n      // Unknown data type\n      console.error('Unknown widget data type:', data);\n      previewHtml = '<div class=\"tp-error\">Unknown data type - cannot render preview</div>';\n    }\n\n    // Ensure previewHtml is never empty\n    if (!previewHtml || previewHtml.trim() === '') {\n      console.warn('Preview HTML is empty, using fallback');\n      previewHtml = '<div class=\"tp-preview-placeholder\">Preview is empty</div>';\n    }\n\n    // Create the three-pane layout\n    const widgetHtml = `\n      <div class=\"tp-widget-container\">\n        <div class=\"tp-pane tp-pane-tree\">\n          <h4>Structure</h4>\n          ${treeHtml}\n        </div>\n        <div class=\"tp-pane tp-pane-code\">\n          <h4>Code View</h4>\n          <div class=\"tp-code\">${codeHtml}</div>\n        </div>\n        <div class=\"tp-pane tp-pane-preview\">\n          <h4>Preview</h4>\n          <div class=\"tp-preview\">${previewHtml}</div>\n        </div>\n      </div>\n    `;\n\n    // Find the widget mount point and render\n    const mountPoint = container.querySelector('.tp-widget-mount');\n    if (mountPoint) {\n      mountPoint.innerHTML = widgetHtml;\n    } else {\n      container.innerHTML = widgetHtml;\n    }\n  } catch (error) {\n    console.error('Widget initialization error:', error);\n    container.innerHTML = `<div class=\"tp-error\">Failed to initialize widget: ${error}</div>`;\n  }\n}\n", "/* T-Prompts Widget Styles - Phase 1 */\n\n:root {\n  --tp-color-bg: #ffffff;\n  --tp-color-fg: #24292e;\n  --tp-color-border: #e1e4e8;\n  --tp-color-accent: #0366d6;\n  --tp-color-muted: #6a737d;\n  --tp-color-error: #d73a49;\n  --tp-font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Noto Sans', Helvetica, Arial, sans-serif;\n  --tp-font-mono: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n  --tp-spacing: 8px;\n}\n\n/* Dark mode support */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --tp-color-bg: #0d1117;\n    --tp-color-fg: #c9d1d9;\n    --tp-color-border: #30363d;\n    --tp-color-accent: #58a6ff;\n    --tp-color-muted: #8b949e;\n    --tp-color-error: #f85149;\n  }\n}\n\n.tp-widget-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: var(--tp-spacing);\n  font-family: var(--tp-font-family);\n  font-size: 14px;\n  color: var(--tp-color-fg);\n  background: var(--tp-color-bg);\n  border: 1px solid var(--tp-color-border);\n  border-radius: 6px;\n  padding: var(--tp-spacing);\n  margin: calc(var(--tp-spacing) * 2) 0;\n  max-width: 100%;\n  overflow: hidden;\n}\n\n.tp-pane {\n  border: 1px solid var(--tp-color-border);\n  border-radius: 4px;\n  padding: var(--tp-spacing);\n  overflow: auto;\n  max-height: 600px;\n  background: var(--tp-color-bg);\n}\n\n.tp-pane h4 {\n  margin: 0 0 var(--tp-spacing) 0;\n  font-size: 13px;\n  font-weight: 600;\n  color: var(--tp-color-muted);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n/* Tree Pane */\n.tp-tree {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.tp-tree ul {\n  list-style: none;\n  padding-left: calc(var(--tp-spacing) * 2);\n  margin: calc(var(--tp-spacing) / 2) 0;\n}\n\n.tp-tree li {\n  padding: calc(var(--tp-spacing) / 4) 0;\n}\n\n.tp-tree-label {\n  font-family: var(--tp-font-mono);\n  font-size: 12px;\n  color: var(--tp-color-fg);\n}\n\n.tp-tree-prompt > .tp-tree-label {\n  font-weight: 600;\n  color: var(--tp-color-accent);\n}\n\n.tp-tree-interpolation > .tp-tree-label {\n  color: var(--tp-color-accent);\n}\n\n.tp-tree-nested_prompt > .tp-tree-label {\n  color: #6f42c1;\n  font-weight: 500;\n}\n\n.tp-tree-list > .tp-tree-label {\n  color: #d73a49;\n  font-weight: 500;\n}\n\n.tp-tree-static > .tp-tree-label {\n  color: var(--tp-color-muted);\n}\n\n/* Code Pane */\n.tp-code {\n  font-family: var(--tp-font-mono);\n  font-size: 12px;\n  line-height: 1.6;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  color: var(--tp-color-fg);\n  overflow-x: auto;\n}\n\n.tp-code-text {\n  white-space: pre-wrap;\n}\n\n.tp-code-interp {\n  color: var(--tp-color-accent);\n  font-weight: 500;\n  cursor: help;\n}\n\n.tp-code-nested-start,\n.tp-code-nested-end {\n  color: #6f42c1;\n  font-weight: 600;\n}\n\n.tp-code-list-start,\n.tp-code-list-end {\n  color: #d73a49;\n  font-weight: 600;\n}\n\n.tp-code-separator {\n  color: var(--tp-color-muted);\n  font-style: italic;\n}\n\n.tp-code-image {\n  color: #22863a;\n  font-weight: 500;\n  cursor: help;\n}\n\n/* Preview Pane */\n.tp-preview {\n  font-family: var(--tp-font-family);\n  font-size: 14px;\n  line-height: 1.6;\n  color: var(--tp-color-fg);\n}\n\n.tp-preview h1,\n.tp-preview h2,\n.tp-preview h3,\n.tp-preview h4,\n.tp-preview h5,\n.tp-preview h6 {\n  margin-top: calc(var(--tp-spacing) * 2);\n  margin-bottom: var(--tp-spacing);\n  font-weight: 600;\n  line-height: 1.25;\n}\n\n.tp-preview h1 { font-size: 2em; border-bottom: 1px solid var(--tp-color-border); padding-bottom: 0.3em; }\n.tp-preview h2 { font-size: 1.5em; border-bottom: 1px solid var(--tp-color-border); padding-bottom: 0.3em; }\n.tp-preview h3 { font-size: 1.25em; }\n.tp-preview h4 { font-size: 1em; }\n.tp-preview h5 { font-size: 0.875em; }\n.tp-preview h6 { font-size: 0.85em; color: var(--tp-color-muted); }\n\n.tp-preview p {\n  margin-top: 0;\n  margin-bottom: calc(var(--tp-spacing) * 2);\n}\n\n.tp-preview code {\n  font-family: var(--tp-font-mono);\n  font-size: 85%;\n  background: var(--tp-color-border);\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n}\n\n.tp-preview pre {\n  font-family: var(--tp-font-mono);\n  font-size: 85%;\n  background: var(--tp-color-border);\n  padding: calc(var(--tp-spacing) * 2);\n  border-radius: 6px;\n  overflow: auto;\n  line-height: 1.45;\n}\n\n.tp-preview pre code {\n  background: transparent;\n  padding: 0;\n  border-radius: 0;\n}\n\n/* Error display */\n.tp-error {\n  color: var(--tp-color-error);\n  font-family: var(--tp-font-mono);\n  font-size: 12px;\n  padding: var(--tp-spacing);\n  background: rgba(248, 81, 73, 0.1);\n  border: 1px solid var(--tp-color-error);\n  border-radius: 4px;\n  margin: var(--tp-spacing) 0;\n}\n\n/* Responsive layout */\n@media (max-width: 1200px) {\n  .tp-widget-container {\n    grid-template-columns: 1fr;\n  }\n\n  .tp-pane {\n    max-height: 400px;\n  }\n}\n\n@media (min-width: 1201px) and (max-width: 1600px) {\n  .tp-widget-container {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n"],
  "mappings": "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CAAC,EACvB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,K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AAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,EAAG,OAAS,OAAS,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAAS,OAAS,EAAG,CAAC,EAChC,MAAS,CAAC,OAA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AM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,IAAO,CAAC,EAAG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G,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,OAAS,OAAS,CAAC,EAChC,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,IAAM,IAAM,EAAG,CAAC,EACxB,IAAO,CAAC,IAAM,IAAM,EAAG,CAAC,EACxB,IAAO,CAAC,IAAM,IAAM,EAAG,CAAC,EACxB,IAAO,CAAC,IAAM,OAAS,EAAG,CAAC,EAC3B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAA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AAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,EACzB,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,QAAU,OAAS,EAAG,CAAC,EAChC,KAAQ,CAAC,IAAM,IAAM,EAAG,CAAC,EACzB,KAAQ,CAAC,IAAM,IAAM,EAAG,CAAC,EACzB,KAAQ,CAAC,IAAM,IAAM,EAAG,CAAC,EACzB,KAAQ,CAAC,IAAM,IAAM,EAA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,CAAC,EAAG,EAAG,EAAG,CAAC,EAClB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,O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,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,KAAQ,CAAC,OAAS,OAAS,EAAG,CAAC,EAC/B,KAAQ,CAAC,EAAG,OAAS,EAAG,CAAC,CAC7B,EACA,cAAe,CACX,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,OAAS,OAAS,EAAG,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,IAAM,MAAO,EACjC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,MAAQ,MAAO,EACnC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,MAAQ,MAAO,EACnC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,KAAQ,CAAC,OAAS,OAAS,EAAG,MAAO,EACrC,KAAQ,CAAC,EAAG,OAAS,EAAG,MAAO,CACnC,EACA,eAAgB,CACZ,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,OAAS,OAAS,EAAG,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,MAAO,EACnC,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,MAAO,EAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,IAAM,MAAO,EACjC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,MAAQ,MAAO,EACnC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,MAAQ,MAAO,EACnC,IAAO,CAAC,EAAG,OAAS,OAAS,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,OAAS,OAAS,OAAS,MAAO,EAC1C,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,MAAO,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,MAAO,EACpC,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,KAAQ,CAAC,OAAS,OAAS,EAAG,MAAO,EACrC,KAAQ,CAAC,EAAG,OAAS,EAAG,MAAO,CACnC,EACA,oBAAqB,CACjB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,OAAS,IAAM,EAAG,CAAC,EAC1B,GAAM,CAAC,OAAS,IAAM,EAAG,CAAC,EAC1B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,IAAM,EAAG,CAAC,EACpB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,KAAO,OAAS,EAAG,CAAC,EAC3B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,KAAO,OAAS,EAAG,CAAC,EAC3B,GAAM,CAAC,KAAO,IAAM,EAAG,CAAC,EACxB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,KAAO,OAAS,EAAG,CAAC,EAC3B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,OAAS,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,KAAO,CAAC,EAC3B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,IAAM,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,IAAM,OAAS,OAAS,CAAC,EAChC,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,OAAS,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,OAAS,CAAC,EACpC,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,IAAM,OAAS,EAAG,CAAC,EAC3B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACx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OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,OAAS,OAAS,EAAG,CAAC,EAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,OAAS,EAAG,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,GAAM,CAAC,EAAG,OAAS,EAAG,CAAC,EACvB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,OAAS,OAAS,EAAG,CAAC,EAC9B,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAAO,CAAC,EAAG,OAAS,EAAG,CAAC,EACxB,IAA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,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,kBAAkB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,oBAAoB,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,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EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,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",
  "names": ["require_ParseError", "__commonJSMin", "exports", "module", "ParseError", "message", "lexer", "position", "error", "input", "begin", "end", "self", "require_Settings", "__commonJSMin", "exports", "module", "get", "option", "defaultValue", "Settings", "options", "require_Style", "__commonJSMin", "exports", "module", "Style", "id", "size", "multiplier", "cramped", "styles", "sup", "sub", "fracNum", "fracDen", "cramp", "sizeNames", "resetNames", "D", "Dc", "T", "Tc", "S", "Sc", "SS", "SSc", "require_utils", "__commonJSMin", "exports", "module", "nativeIndexOf", "indexOf", "list", "elem", "i", "l", "contains", "deflt", "setting", "defaultIfUndefined", "uppercase", "hyphenate", "str", "ESCAPE_LOOKUP", "ESCAPE_REGEX", "escaper", "match", "escape", "text", "setTextContent", "testNode", "node", "clearNode", "require_domTree", "__commonJSMin", "exports", "module", "utils", "createClass", "classes", "i", "span", "children", "height", "depth", "maxFontSize", "style", "attribute", "value", "attr", "markup", "styles", "documentFragment", "frag", "symbolNode", "italic", "skew", "node", "needsSpan", "escaped", "require_fontMetricsData", "__commonJSMin", "exports", "module", "require_fontMetrics", "__commonJSMin", "exports", "module", "Style", "sigma5", "sigma6", "sigma8", "sigma9", "sigma10", "sigma11", "sigma12", "sigma13", "sigma14", "sigma15", "sigma16", "sigma17", "sigma18", "sigma19", "sigma20", "sigma21", "sigma21Script", "sigma21ScriptScript", "sigma22", "xi8", "xi9", "xi10", "xi11", "xi12", "xi13", "ptPerEm", "doubleRuleSep", "metrics", "style", "metricMap", "getCharacterMetrics", "character", "require_symbols", "__commonJSMin", "exports", "module", "defineSymbol", "mode", "font", "group", "replace", "name", "math", "text", "main", "ams", "accent", "bin", "close", "inner", "mathord", "op", "open", "punct", "rel", "spacing", "textord", "i", "ch", "mathTextSymbols", "textSymbols", "letters", "require_buildCommon", "__commonJSMin", "exports", "module", "domTree", "fontMetrics", "symbols", "utils", "greekCapitals", "dotlessLetters", "makeSymbol", "value", "style", "mode", "color", "classes", "metrics", "symbolNode", "mathsym", "mathDefault", "type", "mathit", "makeOrd", "group", "options", "font", "fontName", "fontMap", "sizeElementFromChildren", "elem", "height", "depth", "maxFontSize", "i", "makeSpan", "children", "span", "makeFragment", "fragment", "makeFontSizer", "fontSize", "fontSizeInner", "fontSizer", "makeVList", "positionType", "positionData", "currPos", "oldChildren", "diff", "size", "bottom", "realChildren", "child", "shift", "childWrap", "baselineFix", "vlist", "sizingMultiplier", "spacingFunctions", "require_delimiter", "__commonJSMin", "exports", "module", "ParseError", "Style", "buildCommon", "fontMetrics", "symbols", "utils", "makeSpan", "getMetrics", "symbol", "font", "mathrmSize", "value", "size", "mode", "styleWrap", "delim", "toStyle", "options", "span", "multiplier", "makeSmallDelim", "style", "center", "text", "shift", "makeLargeDelim", "inner", "makeInner", "sizeClass", "makeStackedDelim", "heightTotal", "top", "middle", "repeat", "bottom", "topMetrics", "topHeightTotal", "repeatMetrics", "repeatHeightTotal", "bottomMetrics", "bottomHeightTotal", "middleHeightTotal", "middleFactor", "middleMetrics", "minHeight", "repeatCount", "realHeightTotal", "axisHeight", "depth", "inners", "i", "stackLargeDelimiters", "stackAlwaysDelimiters", "stackNeverDelimiters", "sizeToMaxHeight", "makeSizedDelim", "stackNeverDelimiterSequence", "stackAlwaysDelimiterSequence", "stackLargeDelimiterSequence", "delimTypeToFont", "type", "traverseSequence", "height", "sequence", "start", "metrics", "heightDepth", "makeCustomSizedDelim", "delimType", "makeLeftRightDelim", "delimiterFactor", "delimiterExtend", "maxDistFromAxis", "totalHeight", "require_buildHTML", "__commonJSMin", "exports", "module", "ParseError", "Style", "buildCommon", "delimiter", "domTree", "fontMetrics", "utils", "makeSpan", "buildExpression", "expression", "options", "prev", "groups", "i", "group", "buildGroup", "groupToType", "getTypeOfGroup", "shouldHandleSupSub", "isCharacterBox", "getBaseElem", "baseElem", "makeNullDelimiter", "groupTypes", "className", "prevAtom", "atoms", "elements", "base", "supmid", "submid", "sup", "sub", "supShift", "subShift", "minSupShift", "multiplier", "scriptspace", "supsub", "ruleWidth", "psi", "fstyle", "nstyle", "dstyle", "numer", "numerreset", "denom", "denomreset", "numShift", "clearance", "denomShift", "frac", "candiateClearance", "axisHeight", "mid", "midShift", "delimSize", "leftDelim", "rightDelim", "r", "c", "nr", "nc", "body", "pt", "arraycolsep", "baselineskip", "arraystretch", "arrayskip", "arstrutHeight", "arstrutDepth", "totalHeight", "inrow", "height", "depth", "outrow", "elt", "gap", "offset", "colDescriptions", "cols", "colSep", "colDescrNum", "colDescr", "firstSeparator", "separator", "sepwidth", "col", "row", "elem", "shift", "inner", "fix", "supGroup", "subGroup", "hasLimits", "noSuccessor", "large", "baseShift", "slant", "style", "output", "supKern", "subKern", "finalGroup", "top", "bottom", "k", "a", "t", "e", "x", "innerGroup", "line", "vlist", "phi", "lineClearance", "innerHeight", "minDelimiterHeight", "delim", "delimDepth", "delimShift", "root", "rootWrap", "innerRootHeight", "innerRootDepth", "toShift", "rootVList", "rootVListWrap", "span", "fontSize", "newStyle", "font", "innerDepth", "rule", "width", "supsubGroup", "skew", "baseChar", "baseGroup", "accent", "vecClass", "accentBody", "accentWrap", "groupNode", "buildHTML", "tree", "topStrut", "bottomStrut", "htmlNode", "require_mathMLTree", "__commonJSMin", "exports", "module", "utils", "MathNode", "type", "children", "name", "value", "node", "attr", "i", "markup", "TextNode", "text", "require_buildMathML", "__commonJSMin", "exports", "module", "buildCommon", "fontMetrics", "mathMLTree", "ParseError", "symbols", "utils", "makeSpan", "fontMap", "makeText", "text", "mode", "getVariant", "group", "options", "font", "value", "fontName", "groupTypes", "node", "variant", "inner", "buildExpression", "children", "buildGroup", "nodeType", "withDelims", "leftOp", "rightOp", "outerNode", "row", "cell", "leftNode", "rightNode", "accentNode", "styleAttributes", "attr", "operator", "prev", "expression", "groups", "i", "buildMathML", "tree", "texExpression", "wrapper", "annotation", "semantics", "math", "require_Options", "__commonJSMin", "exports", "module", "Options", "data", "extension", "key", "style", "size", "color", "font", "colorMap", "require_buildTree", "__commonJSMin", "exports", "module", "buildHTML", "buildMathML", "buildCommon", "Options", "Settings", "Style", "makeSpan", "buildTree", "tree", "expression", "settings", "startStyle", "options", "mathMLNode", "htmlNode", "katexNode", "require_functions", "__commonJSMin", "exports", "module", "utils", "ParseError", "defineFunction", "names", "props", "handler", "data", "i", "context", "args", "index", "body", "inner", "color", "shift", "width", "height", "delimiterSizes", "delimiters", "fontAliases", "atoms", "numer", "denom", "hasBarLine", "leftDelim", "rightDelim", "size", "delim", "func", "base", "replaceWith", "nameGroup", "name", "require_parseData", "__commonJSMin", "exports", "module", "ParseNode", "type", "value", "mode", "require_environments", "__commonJSMin", "exports", "module", "fontMetrics", "parseData", "ParseError", "ParseNode", "parseArray", "parser", "result", "row", "body", "rowGaps", "cell", "next", "cr", "pos", "defineEnvironment", "names", "props", "handler", "data", "i", "context", "args", "colalign", "cols", "node", "ca", "res", "delimiters", "emptyGroup", "numCols", "align", "pregap", "require_matchAt", "__commonJSMin", "exports", "module", "getRelocatable", "re", "source", "flags", "matchAt", "str", "pos", "reloc", "match", "require_Lexer", "__commonJSMin", "exports", "module", "matchAt", "ParseError", "Lexer", "input", "Token", "text", "data", "position", "tokenRegex", "whitespaceRegex", "pos", "ignoreWhitespace", "match", "cssColor", "whitespace", "sizeRegex", "unit", "mode", "require_Parser", "__commonJSMin", "exports", "module", "functions", "environments", "Lexer", "symbols", "utils", "parseData", "ParseError", "Parser", "input", "settings", "ParseNode", "ParseFuncOrArgument", "result", "isFunction", "text", "consume", "parse", "expression", "endOfExpression", "breakOnInfix", "breakOnToken", "body", "lex", "pos", "atom", "errorNode", "overIndex", "funcName", "i", "node", "numerNode", "denomNode", "numerBody", "denomBody", "value", "SUPSUB_GREEDINESS", "name", "symbol", "symPos", "group", "funcGreediness", "textordArray", "textNode", "colorNode", "base", "superscript", "subscript", "limits", "prime", "primes", "sizeFuncs", "styleFuncs", "start", "func", "left", "right", "begin", "envName", "env", "args", "context", "end", "baseGroup", "funcData", "positions", "totalArgs", "baseGreediness", "argType", "arg", "argNode", "argGreediness", "innerMode", "optional", "outerMode", "openBrace", "inner", "data", "whitespace", "res", "nucleus", "require_parseTree", "__commonJSMin", "exports", "module", "Parser", "parseTree", "toParse", "settings", "parser", "require_katex", "__commonJSMin", "exports", "module", "ParseError", "Settings", "buildTree", "parseTree", "utils", "render", "expression", "baseNode", "options", "settings", "tree", "node", "renderToString", "generateParseTree", "require_markdown_it_katex", "__commonJSMin", "exports", "module", "katex", "isValidDelim", "state", "pos", "prevChar", "nextChar", "max", "can_open", "can_close", "math_inline", "silent", "start", "match", "token", "res", "esc_count", "math_block", "end", "firstLine", "lastLine", "next", "lastPos", "found", "md", "options", "katexInline", "latex", "error", "inlineRenderer", "tokens", "idx", "katexBlock", "blockRenderer", "src_exports", "__export", "VERSION", "initRuntime", "initWidget", "injectStyles", "utils_exports", "__export", "arrayReplaceAt", "assign", "escapeHtml", "escapeRE", "fromCodePoint", "has", "isMdAsciiPunct", "isPunctChar", "isSpace", "isString", "isValidEntityCode", "isWhiteSpace", "lib", "normalizeReference", "unescapeAll", "unescapeMd", "mdurl_exports", "__export", "decode_default", "encode_default", "format", "parse_default", "decodeCache", "getDecodeCache", "exclude", "cache", "i", "ch", "decode", "string", "seq", "result", "l", "b1", "b2", "chr", "b3", "b4", "decode_default", "encodeCache", "getEncodeCache", "exclude", "cache", "i", "ch", "encode", "string", "keepEscaped", "result", "l", "code", "nextCode", "encode_default", "format", "url", "result", "Url", "protocolPattern", "portPattern", "simplePathPattern", "delims", "unwise", "autoEscape", "nonHostChars", "hostEndingChars", "hostnameMaxLen", "hostnamePartPattern", "hostnamePartStart", "hostlessProtocol", "slashedProtocol", "urlParse", "url", "slashesDenoteHost", "u", "lowerProto", "hec", "slashes", "rest", "simplePath", "proto", "hostEnd", "i", "auth", "atSign", "host", "ipv6Hostname", "hostparts", "l", "part", "newpart", "j", "validParts", "notHost", "bit", "hash", "qm", "port", "parse_default", "uc_exports", "__export", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "decode_data_html_default", "c", "decode_data_xml_default", "c", "decodeMap", "fromCodePoint", "_a", "codePoint", "output", "replaceCodePoint", "CharCodes", "TO_LOWER_BIT", "BinTrieFlags", "isNumber", "code", "isHexadecimalCharacter", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "EntityDecoderState", "DecodingMode", "EntityDecoder", "decodeTree", "emitCodePoint", "errors", "decodeMode", "str", "offset", "start", "end", "base", "digitCount", "startIdx", "char", "lastCp", "expectedLength", "_a", "replaceCodePoint", "current", "valueLength", "determineBranch", "result", "consumed", "getDecoder", "ret", "decoder", "fromCodePoint", "lastIndex", "len", "nodeIdx", "branchCount", "jumpOffset", "value", "lo", "hi", "mid", "midVal", "htmlDecoder", "decode_data_html_default", "xmlDecoder", "decode_data_xml_default", "decodeHTML", "mode", "restoreDiff", "arr", "i", "encode_html_default", "xmlCodeMap", "getCodePoint", "str", "index", "c", "getEscaper", "regex", "map", "data", "match", "lastIdx", "result", "escapeUTF8", "xmlCodeMap", "escapeAttribute", "escapeText", "EntityLevel", "EncodingMode", "_class", "obj", "isString", "_hasOwnProperty", "has", "object", "key", "assign", "source", "arrayReplaceAt", "src", "pos", "newElements", "isValidEntityCode", "c", "fromCodePoint", "surrogate1", "surrogate2", "UNESCAPE_MD_RE", "ENTITY_RE", "UNESCAPE_ALL_RE", "DIGITAL_ENTITY_TEST_RE", "replaceEntityPattern", "match", "name", "code", "decoded", "decodeHTML", "unescapeMd", "str", "unescapeAll", "escaped", "entity", "HTML_ESCAPE_TEST_RE", "HTML_ESCAPE_REPLACE_RE", "HTML_REPLACEMENTS", "replaceUnsafeChar", "ch", "escapeHtml", "REGEXP_ESCAPE_RE", "escapeRE", "isSpace", "isWhiteSpace", "isPunctChar", "regex_default", "isMdAsciiPunct", "normalizeReference", "lib", "mdurl_exports", "uc_exports", "helpers_exports", "__export", "parseLinkDestination", "parseLinkLabel", "parseLinkTitle", "parseLinkLabel", "state", "start", "disableNested", "level", "found", "marker", "prevPos", "max", "oldPos", "labelEnd", "parseLinkDestination", "str", "start", "max", "code", "pos", "result", "unescapeAll", "level", "parseLinkTitle", "str", "start", "max", "prev_state", "code", "pos", "state", "marker", "unescapeAll", "default_rules", "tokens", "idx", "options", "env", "slf", "token", "escapeHtml", "info", "unescapeAll", "langName", "langAttrs", "arr", "highlighted", "i", "tmpAttrs", "tmpToken", "Renderer", "assign", "l", "result", "needLf", "nextToken", "rules", "len", "type", "renderer_default", "Ruler", "name", "i", "self", "chains", "rule", "altName", "chain", "fn", "options", "index", "opt", "beforeName", "ruleName", "afterName", "list", "ignoreInvalid", "result", "idx", "chainName", "ruler_default", "Token", "type", "tag", "nesting", "name", "attrs", "i", "len", "attrData", "value", "idx", "token_default", "StateCore", "src", "md", "env", "token_default", "state_core_default", "NEWLINES_RE", "NULL_RE", "normalize", "state", "str", "block", "state", "token", "inline", "state", "tokens", "i", "l", "tok", "isLinkOpen", "str", "isLinkClose", "linkify", "state", "blockTokens", "j", "l", "tokens", "htmlLinkLevel", "i", "currentToken", "text", "links", "nodes", "level", "lastPos", "ln", "url", "fullUrl", "urlText", "pos", "token", "token_o", "token_t", "token_c", "arrayReplaceAt", "RARE_RE", "SCOPED_ABBR_TEST_RE", "SCOPED_ABBR_RE", "SCOPED_ABBR", "replaceFn", "match", "name", "replace_scoped", "inlineTokens", "inside_autolink", "i", "token", "replace_rare", "replace", "state", "blkIdx", "QUOTE_TEST_RE", "QUOTE_RE", "APOSTROPHE", "replaceAt", "str", "index", "ch", "process_inlines", "tokens", "state", "j", "stack", "i", "token", "thisLevel", "text", "pos", "max", "OUTER", "t", "canOpen", "canClose", "isSingle", "lastChar", "nextChar", "isLastPunctChar", "isMdAsciiPunct", "isPunctChar", "isNextPunctChar", "isLastWhiteSpace", "isWhiteSpace", "isNextWhiteSpace", "item", "openQuote", "closeQuote", "smartquotes", "blkIdx", "text_join", "state", "curr", "last", "blockTokens", "l", "j", "tokens", "max", "_rules", "normalize", "block", "inline", "linkify", "replace", "smartquotes", "text_join", "Core", "ruler_default", "i", "state", "rules", "l", "state_core_default", "parser_core_default", "StateBlock", "src", "md", "env", "tokens", "s", "start", "pos", "indent", "offset", "len", "indent_found", "ch", "isSpace", "type", "tag", "nesting", "token", "token_default", "line", "from", "max", "min", "code", "begin", "end", "keepLastLF", "queue", "i", "lineIndent", "lineStart", "first", "last", "state_block_default", "MAX_AUTOCOMPLETED_CELLS", "getLine", "state", "line", "pos", "max", "escapedSplit", "str", "result", "ch", "isEscaped", "lastPos", "current", "table", "startLine", "endLine", "silent", "nextLine", "firstCh", "secondCh", "isSpace", "lineText", "columns", "aligns", "i", "t", "columnCount", "oldParentType", "terminatorRules", "token_to", "tableLines", "token_tho", "token_htro", "token_ho", "token_il", "tbodyLines", "autocompletedCells", "terminate", "l", "token_tbo", "token_tro", "token_tdo", "code", "state", "startLine", "endLine", "nextLine", "last", "token", "fence", "state", "startLine", "endLine", "silent", "pos", "max", "marker", "mem", "len", "markup", "params", "nextLine", "haveEndMarker", "token", "blockquote", "state", "startLine", "endLine", "silent", "pos", "max", "oldLineMax", "oldBMarks", "oldBSCount", "oldSCount", "oldTShift", "terminatorRules", "oldParentType", "lastLineEmpty", "nextLine", "isOutdented", "initial", "spaceAfterMarker", "adjustTab", "offset", "ch", "isSpace", "terminate", "i", "l", "oldIndent", "token_o", "lines", "token_c", "hr", "state", "startLine", "endLine", "silent", "max", "pos", "marker", "cnt", "ch", "isSpace", "token", "skipBulletListMarker", "state", "startLine", "max", "pos", "marker", "ch", "isSpace", "skipOrderedListMarker", "start", "markTightParagraphs", "idx", "level", "i", "l", "list", "endLine", "silent", "token", "nextLine", "tight", "isTerminatingParagraph", "isOrdered", "markerValue", "posAfterMarker", "markerCharCode", "listTokIdx", "listLines", "prevEmptyEnd", "terminatorRules", "oldParentType", "initial", "offset", "contentStart", "indentAfterMarker", "indent", "itemLines", "oldTight", "oldTShift", "oldSCount", "oldListIndent", "terminate", "reference", "state", "startLine", "_endLine", "silent", "pos", "max", "nextLine", "getNextLine", "endLine", "isContinuation", "terminatorRules", "oldParentType", "terminate", "i", "l", "str", "labelEnd", "ch", "lineContent", "isSpace", "destRes", "href", "destEndPos", "destEndLineNo", "start", "titleRes", "title", "label", "normalizeReference", "html_blocks_default", "attr_name", "unquoted", "single_quoted", "double_quoted", "attr_value", "attribute", "open_tag", "close_tag", "comment", "processing", "declaration", "cdata", "HTML_TAG_RE", "HTML_OPEN_CLOSE_TAG_RE", "HTML_SEQUENCES", "html_blocks_default", "HTML_OPEN_CLOSE_TAG_RE", "html_block", "state", "startLine", "endLine", "silent", "pos", "max", "lineText", "i", "nextLine", "token", "heading", "state", "startLine", "endLine", "silent", "pos", "max", "ch", "level", "isSpace", "tmp", "token_o", "token_i", "token_c", "lheading", "state", "startLine", "endLine", "terminatorRules", "oldParentType", "level", "marker", "nextLine", "pos", "max", "terminate", "i", "l", "content", "token_o", "token_i", "token_c", "paragraph", "state", "startLine", "endLine", "terminatorRules", "oldParentType", "nextLine", "terminate", "i", "l", "content", "token_o", "token_i", "_rules", "table", "code", "fence", "blockquote", "hr", "list", "reference", "html_block", "heading", "lheading", "paragraph", "ParserBlock", "ruler_default", "i", "state", "startLine", "endLine", "rules", "len", "maxNesting", "line", "hasEmptyLines", "prevLine", "ok", "src", "md", "env", "outTokens", "state_block_default", "parser_block_default", "StateInline", "src", "md", "env", "outTokens", "token", "token_default", "type", "tag", "nesting", "token_meta", "start", "canSplitWord", "max", "marker", "lastChar", "pos", "count", "nextChar", "isLastPunctChar", "isMdAsciiPunct", "isPunctChar", "isNextPunctChar", "isLastWhiteSpace", "isWhiteSpace", "isNextWhiteSpace", "left_flanking", "right_flanking", "state_inline_default", "isTerminatorChar", "ch", "text", "state", "silent", "pos", "SCHEME_RE", "linkify", "state", "silent", "pos", "max", "match", "proto", "link", "url", "fullUrl", "token_o", "token_t", "token_c", "newline", "state", "silent", "pos", "pmax", "max", "ws", "isSpace", "ESCAPED", "i", "ch", "escape", "state", "silent", "pos", "max", "ch1", "isSpace", "escapedStr", "ch2", "origStr", "token", "backtick", "state", "silent", "pos", "start", "max", "marker", "openerLength", "matchEnd", "matchStart", "closerLength", "token", "strikethrough_tokenize", "state", "silent", "start", "marker", "scanned", "len", "ch", "token", "i", "postProcess", "delimiters", "loneMarkers", "max", "startDelim", "endDelim", "j", "strikethrough_postProcess", "tokens_meta", "curr", "strikethrough_default", "emphasis_tokenize", "state", "silent", "start", "marker", "scanned", "i", "token", "postProcess", "delimiters", "max", "startDelim", "endDelim", "isStrong", "ch", "token_o", "token_c", "emphasis_post_process", "tokens_meta", "curr", "emphasis_default", "link", "state", "silent", "code", "label", "res", "ref", "href", "title", "start", "parseReference", "oldPos", "max", "labelStart", "labelEnd", "pos", "isSpace", "normalizeReference", "token_o", "attrs", "image", "state", "silent", "code", "content", "label", "pos", "ref", "res", "title", "start", "href", "oldPos", "max", "labelStart", "labelEnd", "isSpace", "normalizeReference", "tokens", "token", "attrs", "EMAIL_RE", "AUTOLINK_RE", "autolink", "state", "silent", "pos", "start", "max", "ch", "url", "fullUrl", "token_o", "token_t", "token_c", "isLinkOpen", "str", "isLinkClose", "isLetter", "ch", "lc", "html_inline", "state", "silent", "max", "pos", "match", "HTML_TAG_RE", "token", "DIGITAL_RE", "NAMED_RE", "entity", "state", "silent", "pos", "max", "match", "code", "token", "isValidEntityCode", "fromCodePoint", "decoded", "decodeHTML", "processDelimiters", "delimiters", "openersBottom", "max", "headerIdx", "lastTokenIdx", "jumps", "closerIdx", "closer", "minOpenerIdx", "openerIdx", "newMinOpenerIdx", "opener", "isOddMatch", "lastJump", "link_pairs", "state", "tokens_meta", "curr", "fragments_join", "state", "curr", "last", "level", "tokens", "max", "_rules", "text", "linkify", "newline", "escape", "backtick", "strikethrough_default", "emphasis_default", "link", "image", "autolink", "html_inline", "entity", "_rules2", "link_pairs", "fragments_join", "ParserInline", "ruler_default", "i", "state", "pos", "rules", "len", "maxNesting", "cache", "ok", "end", "prevPos", "str", "md", "env", "outTokens", "state_inline_default", "parser_inline_default", "re_default", "opts", "re", "regex_default", "text_separators", "assign", "obj", "source", "key", "_class", "isString", "isObject", "isRegExp", "isFunction", "escapeRE", "str", "defaultOptions", "isOptionsObj", "acc", "k", "defaultSchemas", "text", "pos", "self", "tail", "tlds_2ch_src_re", "tlds_default", "resetScanCache", "createValidator", "re", "createNormalizer", "match", "compile", "re_default", "tlds", "untpl", "tpl", "aliases", "schemaError", "name", "val", "compiled", "alias", "slist", "Match", "shift", "start", "end", "createMatch", "LinkifyIt", "schemas", "options", "schema", "definition", "m", "ml", "me", "len", "next", "tld_pos", "at_pos", "result", "list", "keepOld", "el", "idx", "arr", "linkify_it_default", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "stringFromCharCode", "error", "type", "map", "array", "callback", "result", "length", "mapDomain", "domain", "parts", "labels", "encoded", "ucs2decode", "string", "output", "counter", "value", "extra", "ucs2encode", "codePoints", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "i", "bias", "basic", "j", "index", "oldi", "w", "t", "baseMinusT", "out", "encode", "n", "currentValue", "basicLength", "handledCPCount", "m", "handledCPCountPlusOne", "q", "qMinusT", "toUnicode", "toASCII", "punycode", "punycode_es6_default", "punycode", "default_default", "zero_default", "commonmark_default", "config", "default_default", "zero_default", "commonmark_default", "BAD_PROTO_RE", "GOOD_DATA_RE", "validateLink", "url", "str", "RECODE_HOSTNAME_FOR", "normalizeLink", "parsed", "parse_default", "punycode_es6_default", "encode_default", "format", "normalizeLinkText", "decode_default", "MarkdownIt", "presetName", "options", "isString", "parser_inline_default", "parser_block_default", "parser_core_default", "renderer_default", "linkify_it_default", "utils_exports", "assign", "helpers_exports", "presets", "self", "name", "list", "ignoreInvalid", "result", "chain", "missed", "plugin", "args", "src", "env", "state", "lib_default", "import_markdown_it_katex", "md", "lib_default", "markdownItKatex", "renderTree", "data", "depth", "indent", "html", "child", "renderTreeElement", "element", "preview", "i", "item", "renderCodeFromChunks", "chunks", "chunk", "escapeHtml", "imgData", "src", "renderCodeFromPrompt", "code", "renderCodeElement", "renderMarkdownPreview", "text", "error", "renderPreviewFromChunks", "renderPreviewFromPrompt", "extractTextFromElement", "div", "initWidget", "container", "scriptTag", "treeHtml", "codeHtml", "previewHtml", "widgetHtml", "mountPoint", "styles_default", "VERSION", "injectStyles", "styleId", "styleElement", "styles_default", "initRuntime", "initWidget", "autoInit", "container", "mutations", "mutation", "node", "widget"]
}
